{
  "api/DarwinNet.Darwin.html": {
    "href": "api/DarwinNet.Darwin.html",
    "title": "Class Darwin | Darwin.Net",
    "keywords": "Class Darwin Namespace DarwinNet Assembly DarwinNet.dll Represents the main class for accessing Darwin API services. public class Darwin Inheritance object Darwin Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Darwin() Initializes a new instance of the Darwin class with default configurations. public Darwin() Properties Requests The collection of request methods that can be used to make requests to the Darwin API. public Requests Requests { get; } Property Value Requests"
  },
  "api/DarwinNet.Exceptions.html": {
    "href": "api/DarwinNet.Exceptions.html",
    "title": "Namespace DarwinNet.Exceptions | Darwin.Net",
    "keywords": "Namespace DarwinNet.Exceptions Classes InvalidDarwinDataException The exception that is thrown when an invalid value is encountered in a Darwin response. StationCrsNullException The exception that is thrown when a CRS StringValue is not attached to a Station enumeration value."
  },
  "api/DarwinNet.Exceptions.InvalidDarwinDataException.html": {
    "href": "api/DarwinNet.Exceptions.InvalidDarwinDataException.html",
    "title": "Class InvalidDarwinDataException | Darwin.Net",
    "keywords": "Class InvalidDarwinDataException Namespace DarwinNet.Exceptions Assembly DarwinNet.dll The exception that is thrown when an invalid value is encountered in a Darwin response. public class InvalidDarwinDataException : Exception, ISerializable Inheritance object Exception InvalidDarwinDataException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InvalidDarwinDataException(string) Initializes a new instance of the InvalidDarwinDataException class with a specified parameter. public InvalidDarwinDataException(string param) Parameters param string The name of the parameter that contains an invalid value."
  },
  "api/DarwinNet.Exceptions.StationCrsNullException.html": {
    "href": "api/DarwinNet.Exceptions.StationCrsNullException.html",
    "title": "Class StationCrsNullException | Darwin.Net",
    "keywords": "Class StationCrsNullException Namespace DarwinNet.Exceptions Assembly DarwinNet.dll The exception that is thrown when a CRS StringValue is not attached to a Station enumeration value. public class StationCrsNullException : Exception, ISerializable Inheritance object Exception StationCrsNullException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StationCrsNullException(Station) Initializes a new instance of the StationCrsNullException class with a specified Station enumeration value. public StationCrsNullException(Station station) Parameters station Station The Station enumeration value that does not have a CRS StringValue. StationCrsNullException(Station?) Initializes a new instance of the StationCrsNullException class with a nullable Station enumeration value. public StationCrsNullException(Station? station) Parameters station Station? The nullable Station enumeration value that does not have a CRS StringValue."
  },
  "api/DarwinNet.html": {
    "href": "api/DarwinNet.html",
    "title": "Namespace DarwinNet | Darwin.Net",
    "keywords": "Namespace DarwinNet Classes Darwin Represents the main class for accessing Darwin API services."
  },
  "api/DarwinNet.Objects.CallingPoint.html": {
    "href": "api/DarwinNet.Objects.CallingPoint.html",
    "title": "Class CallingPoint | Darwin.Net",
    "keywords": "Class CallingPoint Namespace DarwinNet.Objects Assembly DarwinNet.dll Defines a calling point of a station in a journey public class CallingPoint Inheritance object CallingPoint Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ActualTime The estimated time of the service at this location. The time will be either an arrival or departure time, depending on whether it is in the subsequent or previous calling point list. Will only be present if EstimatedTime is not present. public (string? Text, DateTime? Time)? ActualTime { get; } Property Value (string Text, DateTime? Time)? AdhocAlerts A list of Adhoc Alerts (strings) for this CallingPoint. If there are no alerts, it will be null. public IList<string>? AdhocAlerts { get; } Property Value IList<string> DoesTrainDetachAtFront True if the service detaches units from the front at this location. public bool? DoesTrainDetachAtFront { get; } Property Value bool? EstimatedTime The estimated time of the service at this location. The time will be either an arrival or departure time, depending on whether it is in the subsequent or previous calling point list. Will only be present if ActualTime is not present. public (string? Text, DateTime? Time)? EstimatedTime { get; } Property Value (string Text, DateTime? Time)? IsCancelled A flag to indicate that this service is cancelled at this location. public bool? IsCancelled { get; } Property Value bool? LocationName The display name of this location. public string LocationName { get; } Property Value string ScheduleTime The scheduled time of the service at this location. The time will be either an arrival or departure time, depending on whether it is in the subsequent or previous calling point list. public (string? Text, DateTime? Time)? ScheduleTime { get; } Property Value (string Text, DateTime? Time)? Station The station the train is scheduled at public Station Station { get; } Property Value Station TrainLength The train length (number of units) at this location. If not supplied, or zero, the length is unknown. public int? TrainLength { get; } Property Value int?"
  },
  "api/DarwinNet.Objects.CoachClass.html": {
    "href": "api/DarwinNet.Objects.CoachClass.html",
    "title": "Enum CoachClass | Darwin.Net",
    "keywords": "Enum CoachClass Namespace DarwinNet.Objects Assembly DarwinNet.dll public enum CoachClass Fields First = 0 Mixed = 1 Standard = 2"
  },
  "api/DarwinNet.Objects.CoachData.html": {
    "href": "api/DarwinNet.Objects.CoachData.html",
    "title": "Class CoachData | Darwin.Net",
    "keywords": "Class CoachData Namespace DarwinNet.Objects Assembly DarwinNet.dll Provides details about a specific coach on a train public class CoachData Inheritance object CoachData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CoachClass The class of coach, where known. First, Mixed or Standard. Other classes may be introduced in the future. public CoachClass CoachClass { get; } Property Value CoachClass CoachNumber The number/identifier for this coach, e.g. \"A\" or \"12\". Maximum of two characters. public string CoachNumber { get; } Property Value string Loading The loading value (0-100) for the coach. public int? Loading { get; } Property Value int? LoadingSpecified Specifies whether loading has been specified or not. public bool? LoadingSpecified { get; } Property Value bool? Toilet A Toilet enum representing a toilet on a coach public Toilet? Toilet { get; } Property Value Toilet?"
  },
  "api/DarwinNet.Objects.DepartureItem.html": {
    "href": "api/DarwinNet.Objects.DepartureItem.html",
    "title": "Class DepartureItem | Darwin.Net",
    "keywords": "Class DepartureItem Namespace DarwinNet.Objects Assembly DarwinNet.dll Defines a departure item for a train public class DepartureItem Inheritance object DepartureItem Derived DepartureItemWithCallingPoints Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Services A System.Collections.Generic.IList<T> of ServiceItem related to the Station. public IList<ServiceItem> Services { get; } Property Value IList<ServiceItem> Station The station that the DepartureItem represents public Station Station { get; } Property Value Station"
  },
  "api/DarwinNet.Objects.DepartureItemWithCallingPoints.html": {
    "href": "api/DarwinNet.Objects.DepartureItemWithCallingPoints.html",
    "title": "Class DepartureItemWithCallingPoints | Darwin.Net",
    "keywords": "Class DepartureItemWithCallingPoints Namespace DarwinNet.Objects Assembly DarwinNet.dll Defines a departure item for a train public class DepartureItemWithCallingPoints : DepartureItem Inheritance object DepartureItem DepartureItemWithCallingPoints Inherited Members DepartureItem.Station object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Services A System.Collections.Generic.IList<T> of ServiceItemWithCallingPoints related to the Station. public IList<ServiceItemWithCallingPoints> Services { get; } Property Value IList<ServiceItemWithCallingPoints>"
  },
  "api/DarwinNet.Objects.DeparturesBoard.html": {
    "href": "api/DarwinNet.Objects.DeparturesBoard.html",
    "title": "Class DeparturesBoard | Darwin.Net",
    "keywords": "Class DeparturesBoard Namespace DarwinNet.Objects Assembly DarwinNet.dll Defines a departure board for a station public class DeparturesBoard Inheritance object DeparturesBoard Derived DeparturesBoardWithDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AreServicesAvailable An optional value that indicates if services are currently available for this station board. If this value is present with the value \"false\" then no services will be returned in the service lists. This value may be set, for example, if access to a station has been closed to the public at short notice, even though the scheduled services are still running. It would be usual in such cases for one of the nrccMessages to describe why the list of services has been suppressed. public bool AreServicesAvailable { get; } Property Value bool Departures An System.Collections.Generic.IList<T> of DepartureItem for each service that is to appear on the departures board. A DepartureItem will exist for each CRS code requested in the filter but if no information is available the ServiceItem part will be empty. public IList<DepartureItem> Departures { get; } Property Value IList<DepartureItem> FilterLocationName If a filter was requested, the location name of the filter location. public string? FilterLocationName { get; } Property Value string FilterStation If a filter was requested, the CRS code of the filter location. public Station? FilterStation { get; } Property Value Station? FilterType If a filter was requested, the type of filter. public FilterType? FilterType { get; } Property Value FilterType? GeneratedAt The time at which the DeparturesBoard was generated public DateTime GeneratedAt { get; } Property Value DateTime IsPlatformAvailable An optional value that indicates if platform information is available. If this value is present with the value \"true\" then platform information will be returned in the service lists. If this value is not present, or has the value \"false\", then the platform \"heading\" should be suppressed in the user interface for this station board. public bool? IsPlatformAvailable { get; } Property Value bool? LocationName The name of the location that the station board is for. public string LocationName { get; } Property Value string NrccMessages An optional list of textual messages that should be displayed with the station board. public IList<string>? NrccMessages { get; } Property Value IList<string> Station The station in the departures board. public Station Station { get; } Property Value Station"
  },
  "api/DarwinNet.Objects.DeparturesBoardWithDetails.html": {
    "href": "api/DarwinNet.Objects.DeparturesBoardWithDetails.html",
    "title": "Class DeparturesBoardWithDetails | Darwin.Net",
    "keywords": "Class DeparturesBoardWithDetails Namespace DarwinNet.Objects Assembly DarwinNet.dll Defines a departure board for station with additional details public class DeparturesBoardWithDetails : DeparturesBoard Inheritance object DeparturesBoard DeparturesBoardWithDetails Inherited Members DeparturesBoard.GeneratedAt DeparturesBoard.LocationName DeparturesBoard.Station DeparturesBoard.FilterLocationName DeparturesBoard.FilterStation DeparturesBoard.FilterType DeparturesBoard.NrccMessages DeparturesBoard.IsPlatformAvailable DeparturesBoard.AreServicesAvailable object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Departures An System.Collections.Generic.IList<T> of DepartureItemWithCallingPoints for each service that is to appear on the departures board. A DepartureItemWithCallingPoints will exist for each CRS code requested in the filter but if no information is available the ServiceItemWithCallingPoints part will be empty. public IList<DepartureItemWithCallingPoints> Departures { get; } Property Value IList<DepartureItemWithCallingPoints>"
  },
  "api/DarwinNet.Objects.FilterType.html": {
    "href": "api/DarwinNet.Objects.FilterType.html",
    "title": "Enum FilterType | Darwin.Net",
    "keywords": "Enum FilterType Namespace DarwinNet.Objects Assembly DarwinNet.dll public enum FilterType Fields From = 1 To = 0"
  },
  "api/DarwinNet.Objects.FormationData.html": {
    "href": "api/DarwinNet.Objects.FormationData.html",
    "title": "Class FormationData | Darwin.Net",
    "keywords": "Class FormationData Namespace DarwinNet.Objects Assembly DarwinNet.dll Provides details about the formation of a train public class FormationData Inheritance object FormationData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Coaches A collection of CoachData objects related to this formation. public IList<CoachData> Coaches { get; } Property Value IList<CoachData>"
  },
  "api/DarwinNet.Objects.html": {
    "href": "api/DarwinNet.Objects.html",
    "title": "Namespace DarwinNet.Objects | Darwin.Net",
    "keywords": "Namespace DarwinNet.Objects Classes CallingPoint Defines a calling point of a station in a journey CoachData Provides details about a specific coach on a train DepartureItem Defines a departure item for a train DepartureItemWithCallingPoints Defines a departure item for a train DeparturesBoard Defines a departure board for a station DeparturesBoardWithDetails Defines a departure board for station with additional details FormationData Provides details about the formation of a train ServiceDetails Defines a service details response ServiceItem Defines a service item ServiceItemWithCallingPoints Defines a train service with lists of CallingPoint ServiceLocation Provides a service location for a train. StationBoard Defines a station board located at a station StationBoardWithDetails Defines a station board located at a station with additional details Enums CoachClass FilterType ServiceType Station Toilet"
  },
  "api/DarwinNet.Objects.ServiceDetails.html": {
    "href": "api/DarwinNet.Objects.ServiceDetails.html",
    "title": "Class ServiceDetails | Darwin.Net",
    "keywords": "Class ServiceDetails Namespace DarwinNet.Objects Assembly DarwinNet.dll Defines a service details response public class ServiceDetails Inheritance object ServiceDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ActualTimeArrival An optional System.DateTime specifying the Actual Time of Arrival (ATA) of the service at the station board location. public (string? Text, DateTime? Time)? ActualTimeArrival { get; } Property Value (string Text, DateTime? Time)? ActualTimeDeparture An optional System.DateTime specifying the Actual Time of Departure (ATD) of the service at the station board location. public (string? Text, DateTime? Time)? ActualTimeDeparture { get; } Property Value (string Text, DateTime? Time)? AdhocAlerts A list of Adhoc Alerts (strings) for this CallingPoint. If there are no alerts, it will be null. public IList<string>? AdhocAlerts { get; } Property Value IList<string> CancellationReason A cancellation reason for this service. public string? CancellationReason { get; } Property Value string DelayReason A delay reason for this service. public string? DelayReason { get; } Property Value string DiversionReason The reason for a diversion. public string? DiversionReason { get; } Property Value string DivertedVia The location of the diversion. public string? DivertedVia { get; } Property Value string DoesTrainDetachAtFront True if the service detaches units from the front at this location. public bool? DoesTrainDetachAtFront { get; } Property Value bool? EstimatedTimeArrival An optional System.DateTime specifying the Estimated Time of Arrival (ETA) of the service at the station board location. public (string? Text, DateTime? Time)? EstimatedTimeArrival { get; } Property Value (string Text, DateTime? Time)? EstimatedTimeDeparture An optional System.DateTime specifying the Estimated Time of Departure (ETD) of the service at the station board location. public (string? Text, DateTime? Time)? EstimatedTimeDeparture { get; } Property Value (string Text, DateTime? Time)? Formation Contains FormationData for this ServiceDetails, if any. public FormationData? Formation { get; } Property Value FormationData GeneratedAt The time at which the ServiceDetails was generated public DateTime GeneratedAt { get; } Property Value DateTime IsCancelled A flag to indicate that this service is cancelled at this location. public bool IsCancelled { get; } Property Value bool IsReverseFormation True if the service is operating in the reverse of its normal formation. public bool? IsReverseFormation { get; } Property Value bool? LocationName The display name of the departure board location that these service details were accessed from. public string LocationName { get; } Property Value string Operator The name of the Train Operating Company that operates the service. public string Operator { get; } Property Value string OperatorCode The code of the Train Operating Company that operates the service. public string OperatorCode { get; } Property Value string OverdueMessage If an expected movement report has been missed, this will contain a message describing the missed movement. public string? OverdueMessage { get; } Property Value string Platform An optional platform number for the service at this location. This will only be present where available and where IsPlatformAvailable value is \"true\". public string? Platform { get; } Property Value string PreviousCallingPoints An System.Collections.Generic.IList<T> of System.Collections.Generic.IList<T> of previous CallingPoint objects relative to the location of this service. public IList<IList<CallingPoint>>? PreviousCallingPoints { get; } Property Value IList<IList<CallingPoint>> RetailServiceId The Retail Service ID of the service, if known. public string? RetailServiceId { get; } Property Value string ScheduledTimeArrival An optional System.DateTime specifying the Scheduled Time of Arrival (STA) of the service at the station board location. public (string? Text, DateTime? Time)? ScheduledTimeArrival { get; } Property Value (string Text, DateTime? Time)? ScheduledTimeDeparture An optional System.DateTime specifying the Scheduled Time of Departure (STD) of the service at the station board location. public (string? Text, DateTime? Time)? ScheduledTimeDeparture { get; } Property Value (string Text, DateTime? Time)? ServiceType The type of service (train, bus, ferry) that this item represents. Note that real-time information (e.g. eta, etd, ata, atd, etc.) is only available and present for train services. public ServiceType ServiceType { get; } Property Value ServiceType Station The station in the service details. public Station Station { get; } Property Value Station SubsequentCallingPoints An System.Collections.Generic.IList<T> of System.Collections.Generic.IList<T> of subsequent CallingPoint objects relative to the location of this service. public IList<IList<CallingPoint>>? SubsequentCallingPoints { get; } Property Value IList<IList<CallingPoint>> TrainLength The train length (number of units) at this location. If not supplied, or zero, the length is unknown. public int? TrainLength { get; } Property Value int?"
  },
  "api/DarwinNet.Objects.ServiceItem.html": {
    "href": "api/DarwinNet.Objects.ServiceItem.html",
    "title": "Class ServiceItem | Darwin.Net",
    "keywords": "Class ServiceItem Namespace DarwinNet.Objects Assembly DarwinNet.dll Defines a service item public class ServiceItem Inheritance object ServiceItem Derived ServiceItemWithCallingPoints Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AdhocAlerts A list of Adhoc Alerts (strings) for this CallingPoint. If there are no alerts, it will be null. public IList<string>? AdhocAlerts { get; } Property Value IList<string> CancellationReason A cancellation reason for this service. public string? CancellationReason { get; } Property Value string CurrentDestinations An optional System.Collections.Generic.IList<T> of ServiceLocation giving live/current destinations of this service which is not starting at original cancelled destinations. public IList<ServiceLocation>? CurrentDestinations { get; } Property Value IList<ServiceLocation> CurrentOrigins An optional System.Collections.Generic.IList<T> of ServiceLocation giving live/current origins of this service which is not starting at original cancelled origins. public IList<ServiceLocation>? CurrentOrigins { get; } Property Value IList<ServiceLocation> DelayReason A delay reason for this service. public string? DelayReason { get; } Property Value string Destination A System.Collections.Generic.IList<T> of ServiceLocation giving original destinations of this service. public IList<ServiceLocation> Destination { get; } Property Value IList<ServiceLocation> DoesTrainDetachAtFront True if the service detaches units from the front at this location. public bool? DoesTrainDetachAtFront { get; } Property Value bool? EstimatedTimeArrival An optional System.Tuple of string and System.DateTime specifying the Estimated Time of Arrival (ETA) of the service at the station board location. If not null, one of the value is present. public (string? Text, DateTime? Time)? EstimatedTimeArrival { get; } Property Value (string Text, DateTime? Time)? EstimatedTimeDeparture An optional System.Tuple of string and System.DateTime specifying the Estimated Time of Departure (ETD) of the service at the station board location. If not null, one of the value is present. public (string? Text, DateTime? Time)? EstimatedTimeDeparture { get; } Property Value (string Text, DateTime? Time)? FilterLocationCancelled A flag to indicate that this service is cancelled at this location. public bool? FilterLocationCancelled { get; } Property Value bool? Formation Contains FormationData for this ServiceItem, if any. public FormationData? Formation { get; } Property Value FormationData IsCircularRoute If this value is present and has the value \"true\" then the service is operating on a circular route through the network and will call again at this location later on its journey. public bool? IsCircularRoute { get; } Property Value bool? IsReverseFormation True if the service is operating in the reverse of its normal formation. public bool? IsReverseFormation { get; } Property Value bool? Operator S The name of the Train Operating Company that operates the service. public string Operator { get; } Property Value string OperatorCode The code of the Train Operating Company that operates the service. public string OperatorCode { get; } Property Value string Origin A System.Collections.Generic.IList<T> of ServiceLocation giving original origins of this service. public IList<ServiceLocation> Origin { get; } Property Value IList<ServiceLocation> Platform An optional platform number for the service at this location. This will only be present where available and where the IsPlatformAvailable value is \"true\". public string? Platform { get; } Property Value string RetailServiceId The Retail Service ID of the service, if known. public string? RetailServiceId { get; } Property Value string ScheduledTimeArrival An optional System.Tuple of string and System.DateTime specifying the Scheduled Time of Arrival (STA) of the service at the station board location. If not null, one of the value is present. public (string? Text, DateTime? Time)? ScheduledTimeArrival { get; } Property Value (string Text, DateTime? Time)? ScheduledTimeDeparture An optional System.Tuple of string and System.DateTime specifying the Scheduled Time of Departure (STD) of the service at the station board location. If not null, one of the value is present. public (string? Text, DateTime? Time)? ScheduledTimeDeparture { get; } Property Value (string Text, DateTime? Time)? ServiceId The unique service identifier of this service relative to the station board on which it is displayed. This value can be passed to GetServiceDetails to obtain the full details of the individual service. public string ServiceId { get; } Property Value string ServiceType The type of service (train, bus, ferry) that this item represents. Note that real-time information (e.g. eta, etd, ata, atd, etc.) is only available and present for train services. public ServiceType ServiceType { get; } Property Value ServiceType TrainLength The train length (number of units) at this location. If not supplied, or zero, the length is unknown. public int? TrainLength { get; } Property Value int?"
  },
  "api/DarwinNet.Objects.ServiceItemWithCallingPoints.html": {
    "href": "api/DarwinNet.Objects.ServiceItemWithCallingPoints.html",
    "title": "Class ServiceItemWithCallingPoints | Darwin.Net",
    "keywords": "Class ServiceItemWithCallingPoints Namespace DarwinNet.Objects Assembly DarwinNet.dll Defines a train service with lists of CallingPoint public class ServiceItemWithCallingPoints : ServiceItem Inheritance object ServiceItem ServiceItemWithCallingPoints Inherited Members ServiceItem.RetailServiceId ServiceItem.Origin ServiceItem.Destination ServiceItem.CurrentOrigins ServiceItem.CurrentDestinations ServiceItem.ScheduledTimeArrival ServiceItem.EstimatedTimeArrival ServiceItem.ScheduledTimeDeparture ServiceItem.EstimatedTimeDeparture ServiceItem.Platform ServiceItem.Operator ServiceItem.OperatorCode ServiceItem.IsCircularRoute ServiceItem.FilterLocationCancelled ServiceItem.ServiceType ServiceItem.TrainLength ServiceItem.DoesTrainDetachAtFront ServiceItem.IsReverseFormation ServiceItem.CancellationReason ServiceItem.DelayReason ServiceItem.ServiceId ServiceItem.AdhocAlerts ServiceItem.Formation object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties PreviousCallingPoints A System.Collections.Generic.IList<T> of previous CallingPoint objects relative to the location of this service. public IList<CallingPoint>? PreviousCallingPoints { get; } Property Value IList<CallingPoint> SubsequentCallingPoints A System.Collections.Generic.IList<T> of subsequent CallingPoint objects relative to the location of this service. public IList<CallingPoint>? SubsequentCallingPoints { get; } Property Value IList<CallingPoint>"
  },
  "api/DarwinNet.Objects.ServiceLocation.html": {
    "href": "api/DarwinNet.Objects.ServiceLocation.html",
    "title": "Class ServiceLocation | Darwin.Net",
    "keywords": "Class ServiceLocation Namespace DarwinNet.Objects Assembly DarwinNet.dll Provides a service location for a train. public class ServiceLocation Inheritance object ServiceLocation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AssocIsCancelled Defines if the origin or destination can no longer be reached because the association has been cancelled. public bool? AssocIsCancelled { get; } Property Value bool? FutureChangeTo A ServiceType specifying service type (Bus/Ferry/Train) to which will be changed in the future. public ServiceType? FutureChangeTo { get; } Property Value ServiceType? LocationName The name of the location that the station board is for. public string LocationName { get; } Property Value string Station The station in the service location. public Station Station { get; } Property Value Station Via An optional via string that should be displayed after the location, to indicate further information about an ambiguous route. Note that vias are only present for ServiceLocation objects that appear in destination lists. public string? Via { get; } Property Value string"
  },
  "api/DarwinNet.Objects.ServiceType.html": {
    "href": "api/DarwinNet.Objects.ServiceType.html",
    "title": "Enum ServiceType | Darwin.Net",
    "keywords": "Enum ServiceType Namespace DarwinNet.Objects Assembly DarwinNet.dll public enum ServiceType Fields Bus = 0 Ferry = 1 Train = 2"
  },
  "api/DarwinNet.Objects.Station.html": {
    "href": "api/DarwinNet.Objects.Station.html",
    "title": "Enum Station | Darwin.Net",
    "keywords": "Enum Station Namespace DarwinNet.Objects Assembly DarwinNet.dll public enum Station Fields AbbeyWood = 0 Aber = 1 Abercynon = 2 Aberdare = 3 Aberdeen = 4 Aberdour = 5 Aberdovey = 6 Abererch = 7 Abergavenny = 8 AbergeleAndPensarn = 9 Aberystwyth = 10 Accrington = 11 Achanalt = 12 Achnasheen = 13 Achnashellach = 14 Acklington = 15 Acle = 16 AcocksGreen = 17 ActonBridgeCheshire = 18 ActonCentral = 19 ActonMainLine = 20 AdderleyPark = 21 Addiewell = 22 Addlestone = 23 Adisham = 24 AdlingtonCheshire = 25 AdlingtonLancs = 26 Adwick = 27 Aigburth = 28 Ainsdale = 29 Aintree = 30 Airbles = 31 Airdrie = 32 AlbanyPark = 33 Albrighton = 34 AlderleyEdge = 35 Aldermaston = 36 Aldershot = 37 Aldrington = 38 AlexandraPalace = 39 AlexandraParade = 40 Alexandria = 41 Alfreton = 42 AllensWest = 43 Alloa = 44 Alness = 45 Alnmouth = 46 AlresfordEssex = 47 Alsager = 48 AlthorneEssex = 49 Althorpe = 50 Altnabreac = 51 Alton = 52 Altrincham = 53 Alvechurch = 54 Ambergate = 55 Amberley = 56 Amersham = 57 Ammanford = 58 Ancaster = 59 Anderston = 60 Andover = 61 Anerley = 62 Angmering = 63 Annan = 64 Anniesland = 65 AnsdellAndFairhaven = 66 ApperleyBridge = 67 Appleby = 68 AppledoreKent = 69 Appleford = 70 AppleyBridge = 71 Apsley = 72 Arbroath = 73 Ardgay = 74 Ardlui = 75 ArdrossanHarbour = 76 ArdrossanSouthBeach = 77 ArdrossanTown = 78 Ardwick = 79 ArgyleStreet = 80 Arisaig = 81 Arlesey = 82 ArmadaleWestLothian = 83 Armathwaite = 84 Arnside = 85 Arram = 86 ArrocharAndTarbet = 87 Arundel = 88 AscotBerks = 89 AscottUnderWychwood = 90 Ash = 91 Ashburys = 93 AshchurchforTewkesbury = 94 Ashfield = 95 AshfordInternational = 97 AshfordInternationalEurostar = 98 AshfordSurrey = 96 Ashley = 99 Ashtead = 100 AshtonUnderLyne = 101 AshurstKent = 102 AshurstNewForest = 103 AshVale = 92 AshwellAndMorden = 104 Askam = 105 Aslockton = 106 Aspatria = 107 AspleyGuise = 108 Aston = 109 Atherstone = 110 Atherton = 111 Attadale = 112 Attenborough = 113 Attleborough = 114 Auchinleck = 115 AudleyEnd = 116 AughtonPark = 117 Aviemore = 118 Avoncliff = 119 Avonmouth = 120 Axminster = 121 Aylesbury = 122 AylesburyValeParkway = 123 Aylesford = 124 Aylesham = 125 Ayr = 126 Bache = 127 Baglan = 128 Bagshot = 129 Baildon = 130 Baillieston = 131 Balcombe = 132 Baldock = 133 Balham = 134 Balloch = 135 Balmossie = 136 BamberBridge = 137 Bamford = 138 Banavie = 139 Banbury = 140 BangorGwynedd = 141 BankHall = 142 Banstead = 143 Barassie = 144 Barbican = 145 BardonMill = 146 BareLane = 147 Bargeddie = 148 Bargoed = 149 Barking = 150 Barlaston = 151 Barming = 152 Barmouth = 153 Barnehurst = 154 Barnes = 155 BarnesBridge = 156 Barnetby = 157 Barnham = 158 Barnhill = 159 Barnsley = 160 Barnstaple = 161 BarntGreen = 162 Barrhead = 163 Barrhill = 164 BarrowHaven = 165 BarrowInFurness = 166 BarrowUponSoar = 167 Barry = 168 BarryDocks = 169 BarryIsland = 170 BarryLinks = 171 BartonOnHumber = 172 Basildon = 173 Basingstoke = 174 BatAndBall = 175 Bathgate = 177 BathSpa = 176 Batley = 178 Battersby = 179 BatterseaPark = 180 Battle = 181 Battlesbridge = 182 Bayford = 183 Beaconsfield = 184 Bearley = 185 Bearsden = 186 Bearsted = 187 Beasdale = 188 BeaulieuRoad = 189 Beauly = 190 Bebington = 191 Beccles = 192 BeckenhamHill = 193 BeckenhamJunction = 194 Bedford = 195 BedfordStJohns = 196 Bedhampton = 197 Bedminster = 198 Bedworth = 199 Bedwyn = 200 Beeston = 201 Bekesbourne = 202 BelleVue = 203 Bellgrove = 204 Bellingham = 205 Bellshill = 206 Belmont = 207 Belper = 208 Beltring = 209 Belvedere = 210 Bempton = 211 Benfleet = 213 BenRhydding = 212 Bentham = 214 BentleyHants = 215 BentleySouthYorks = 216 BereAlston = 217 BereFerrers = 218 Berkhamsted = 219 Berkswell = 220 BermudaPark = 221 BerneyArms = 222 BerryBrow = 223 Berrylands = 224 BerwickSussex = 225 BerwickUponTweed = 226 BescarLane = 227 BescotStadium = 228 Betchworth = 229 BethnalGreen = 230 BetwsYCoed = 231 Beverley = 232 Bexhill = 233 Bexley = 234 Bexleyheath = 235 BicesterNorth = 236 BicesterVillage = 237 Bickley = 238 Bidston = 239 Biggleswade = 240 Bilbrook = 241 Billericay = 242 BillinghamCleveland = 243 Billingshurst = 244 Bingham = 245 Bingley = 246 Birchgrove = 247 BirchingtonOnSea = 248 Birchwood = 249 Birkbeck = 250 Birkdale = 251 BirkenheadCentral = 252 BirkenheadHamiltonSquare = 253 BirkenheadNorth = 254 BirkenheadPark = 255 BirminghamInternational = 256 BirminghamMoorStreet = 257 BirminghamNewStreet = 258 BirminghamSnowHill = 259 BishopAuckland = 260 Bishopbriggs = 261 BishopsStortford = 262 BishopstoneSussex = 263 BishoptonStrathclyde = 264 Bitterne = 265 Blackburn = 266 Blackheath = 267 BlackhorseRoad = 268 BlackpoolNorth = 269 BlackpoolPleasureBeach = 270 BlackpoolSouth = 271 Blackridge = 272 Blackrod = 273 Blackwater = 274 BlaenauFfestiniog = 275 BlairAtholl = 276 Blairhill = 277 Blakedown = 279 BlakeStreet = 278 Blantyre = 280 Blaydon = 281 Bleasby = 282 Bletchley = 283 Bloxwich = 284 BloxwichNorth = 285 BlundellsandsAndCrosby = 286 BlytheBridge = 287 BodminParkway = 288 Bodorgan = 289 BognorRegis = 290 Bogston = 291 Bolton = 292 BoltonUponDearne = 293 Bookham = 294 BootleCumbria = 295 BootleNewStrand = 296 BootleOrielRoad = 297 Bordesley = 298 BoroughGreenAndWrotham = 299 Borth = 300 Bosham = 301 Boston = 302 Botley = 303 Bottesford = 304 BourneEnd = 305 Bournemouth = 306 Bournville = 307 BowBrickhill = 308 BowesPark = 309 Bowling = 310 BoxHillAndWesthumble = 311 Bracknell = 312 BradfordForsterSquare = 313 BradfordInterchange = 314 BradfordOnAvon = 315 Brading = 316 Braintree = 317 BraintreeFreeport = 318 Bramhall = 319 BramleyHants = 320 BramleyWYorks = 321 BramptonCumbria = 322 BramptonSuffolk = 323 Branchton = 324 Brandon = 325 Branksome = 326 BraystonesCumbria = 327 Bredbury = 328 Breich = 329 Brentford = 330 Brentwood = 331 BricketWood = 332 Bridgend = 335 BridgeofAllan = 333 BridgeofOrchy = 334 Bridgeton = 336 Bridgwater = 337 Bridlington = 338 Brierfield = 339 Brigg = 340 Brighouse = 341 BrightonEastSussex = 342 Brimsdown = 343 Brinnington = 344 BristolParkway = 345 BristolTempleMeads = 346 Brithdir = 347 BritonFerry = 348 Brixton = 349 Broadbottom = 351 BroadGreen = 350 Broadstairs = 352 Brockenhurst = 353 Brockholes = 354 Brockley = 355 Bromborough = 356 BromboroughRake = 357 BromleyCrossLancs = 358 BromleyNorth = 359 BromleySouth = 360 Bromsgrove = 361 Brondesbury = 362 BrondesburyPark = 363 BrookmansPark = 364 Brookwood = 365 Broome = 366 Broomfleet = 367 Brora = 368 Brough = 369 BroughtyFerry = 370 Broxbourne = 371 BruceGrove = 372 Brundall = 373 BrundallGardens = 374 Brunstane = 375 Brunswick = 376 Bruton = 377 Bryn = 378 BuckenhamNorfolk = 379 Buckley = 380 Bucknell = 381 BuckshawParkway = 382 Bugle = 383 BuilthRoad = 384 Bulwell = 385 Bures = 386 BurgessHill = 387 BurleyInWharfedale = 389 BurleyPark = 388 Burnage = 390 BurnesideCumbria = 391 BurnhamBucks = 392 BurnhamOnCrouch = 393 BurnleyBarracks = 394 BurnleyCentral = 395 BurnleyManchesterRoad = 396 BurnsideStrathclyde = 397 Burntisland = 398 BurscoughBridge = 399 BurscoughJunction = 400 Bursledon = 401 BurtonJoyce = 402 BurtonOnTrent = 403 BuryStEdmunds = 404 Busby = 405 Bushey = 407 BushHillPark = 406 ButlersLane = 408 Buxted = 409 Buxton = 410 ByfleetAndNewHaw = 411 Bynea = 412 Cadoxton = 413 Caergwrle = 414 Caerphilly = 415 Caersws = 416 Caldercruix = 417 Caldicot = 418 CaledonianRdAndBarnsbury = 419 Calstock = 420 CamAndDursley = 421 Camberley = 422 Camborne = 423 Cambridge = 424 CambridgeHeath = 425 CambridgeNorth = 426 Cambuslang = 427 CamdenRoad = 428 Camelon = 429 CanadaWater = 430 Canley = 431 Cannock = 432 Canonbury = 433 CanterburyEast = 434 CanterburyWest = 435 Cantley = 436 Capenhurst = 437 CarbisBay = 438 Cardenden = 439 CardiffBay = 440 CardiffCentral = 441 CardiffQueenStreet = 442 Cardonald = 443 Cardross = 444 Carfin = 445 CarkAndCartmel = 446 Carlisle = 447 Carlton = 448 Carluke = 449 Carmarthen = 450 Carmyle = 451 Carnforth = 452 Carnoustie = 453 Carntyne = 454 CarpendersPark = 455 Carrbridge = 456 Carshalton = 457 CarshaltonBeeches = 458 Carstairs = 459 Cartsdyke = 460 CastleBarPark = 461 CastleCary = 462 Castleford = 463 CastletonManchester = 464 CastletonMoor = 465 Caterham = 466 Catford = 467 CatfordBridge = 468 Cathays = 469 Cathcart = 470 Cattal = 471 Causeland = 472 CefnYBedd = 473 ChadwellHeath = 474 ChaffordHundredLakeside = 475 ChalfontAndLatimer = 476 Chalkwell = 477 ChandlersFord = 478 ChapelEnLeFrith = 479 ChapeltonDevon = 480 ChapeltownSouthYorks = 481 ChappelAndWakesColne = 482 CharingCrossGlasgow = 484 CharingKent = 483 Charlbury = 485 Charlton = 486 Chartham = 487 ChassenRoad = 488 Chatelherault = 489 Chatham = 490 Chathill = 491 CheadleHulme = 492 Cheam = 493 Cheddington = 494 ChelfordCheshire = 495 Chelmsford = 496 Chelsfield = 497 CheltenhamSpa = 498 Chepstow = 499 CherryTree = 500 Chertsey = 501 Cheshunt = 502 ChessingtonNorth = 503 ChessingtonSouth = 504 Chester = 505 Chesterfield = 507 ChesterLeStreet = 508 ChesterRoad = 506 ChestfieldAndSwalecliffe = 509 Chetnole = 510 Chichester = 511 Chilham = 512 Chilworth = 513 Chingford = 514 Chinley = 515 Chippenham = 516 Chipstead = 517 Chirk = 518 Chislehurst = 519 Chiswick = 520 Cholsey = 521 Chorley = 522 Chorleywood = 523 Christchurch = 524 ChristsHospital = 525 ChurchAndOswaldtwistle = 526 ChurchFenton = 527 ChurchStretton = 528 Cilmeri = 529 CityThameslink = 530 ClactonOnSea = 531 Clandon = 532 ClaphamHighStreet = 534 ClaphamJunction = 535 ClaphamNorthYorkshire = 533 Clapton = 536 ClarbestonRoad = 537 Clarkston = 538 Claverdon = 539 Claygate = 540 Cleethorpes = 541 Cleland = 542 CliftonDown = 544 CliftonManchester = 543 Clitheroe = 545 ClockHouse = 546 Clunderwen = 547 Clydebank = 548 CoatbridgeCentral = 549 CoatbridgeSunnyside = 550 Coatdyke = 551 CobhamAndStokedAbernon = 552 Codsall = 553 Cogan = 554 Colchester = 555 ColchesterTown = 556 ColeshillParkway = 557 Collingham = 558 Collington = 559 Colne = 560 Colwall = 561 ColwynBay = 562 CombeOxon = 563 Commondale = 564 Congleton = 565 Conisbrough = 566 ConnelFerry = 567 CononBridge = 568 Cononley = 569 ConwayPark = 570 Conwy = 571 CoodenBeach = 572 Cookham = 573 Cooksbridge = 574 CoombeJunctionHalt = 575 Copplestone = 576 Corbridge = 577 Corby = 578 CorfeCastle = 579 Corkerhill = 580 Corkickle = 581 Corpach = 582 Corrour = 583 Coryton = 584 Coseley = 585 Cosford = 586 Cosham = 587 Cottingham = 588 Cottingley = 589 CoulsdonSouth = 590 CoulsdonTown = 591 Coventry = 592 CoventryArena = 593 Cowdenbeath = 595 CowdenKent = 594 CradleyHeath = 596 Craigendoran = 597 Cramlington = 598 CranbrookDevon = 599 CravenArms = 600 Crawley = 601 Crayford = 602 Crediton = 603 CressingEssex = 604 Cressington = 605 Creswell = 606 Crewe = 607 Crewkerne = 608 CrewsHill = 609 Crianlarich = 610 Criccieth = 611 Cricklewood = 612 Croftfoot = 613 CroftonPark = 614 Cromer = 615 Cromford = 616 Crookston = 617 Crossflatts = 619 CrossGates = 618 Crosshill = 620 Crosskeys = 621 Crossmyloof = 622 Croston = 623 CrouchHill = 624 Crowborough = 625 Crowhurst = 626 Crowle = 627 Crowthorne = 628 Croy = 629 CrystalPalace = 630 Cuddington = 631 Cuffley = 632 Culham = 633 Culrain = 634 Cumbernauld = 635 Cupar = 636 Curriehill = 637 Cuxton = 638 Cwmbach = 639 Cwmbran = 640 Cynghordy = 641 DagenhamDock = 642 DaisyHill = 643 DalgetyBay = 644 Dalmally = 645 Dalmarnock = 646 Dalmeny = 647 Dalmuir = 648 Dalreoch = 649 Dalry = 650 DalstonCumbria = 651 DalstonJunction = 652 DalstonKingsland = 653 DaltonCumbria = 654 Dalwhinnie = 655 Danby = 656 Danescourt = 657 Danzey = 658 Darlington = 659 Darnall = 660 Darsham = 661 Dartford = 662 Darton = 663 Darwen = 664 Datchet = 665 Davenport = 666 Dawlish = 667 DawlishWarren = 668 Deal = 669 Deansgate = 671 DeanWilts = 670 Deganwy = 672 Deighton = 673 Delamere = 674 DenbyDale = 675 Denham = 676 DenhamGolfClub = 677 DenmarkHill = 678 Dent = 679 Denton = 680 Deptford = 681 Derby = 682 DerbyRoadIpswich = 683 DevonportDevon = 684 DevonportDockyard = 685 Dewsbury = 686 DidcotParkway = 687 DigbyAndSowton = 688 DiltonMarsh = 689 DinasPowys = 691 DinasRhondda = 690 DingleRoad = 692 Dingwall = 693 Dinsdale = 694 Dinting = 695 Disley = 696 Diss = 697 Dodworth = 698 Dolau = 699 Doleham = 700 Dolgarrog = 701 Dolwyddelan = 702 Doncaster = 703 DorchesterSouth = 704 DorchesterWest = 705 DoreAndTotley = 706 DorkingDeepdene = 708 DorkingMain = 707 DorkingWest = 709 Dormans = 710 Dorridge = 711 DoveHoles = 712 Dovercourt = 714 DoverPriory = 713 DoveyJunction = 715 DownhamMarket = 716 DraytonGreen = 717 DraytonPark = 718 Drem = 719 Driffield = 720 Drigg = 721 DroitwichSpa = 722 Dronfield = 723 Drumchapel = 724 Drumfrochar = 725 Drumgelloch = 726 Drumry = 727 DublinFerryport = 728 DublinPortStena = 729 Duddeston = 730 DudleyPort = 731 Duffield = 732 Duirinish = 733 DukeStreet = 734 Dullingham = 735 DumbartonCentral = 736 DumbartonEast = 737 Dumbreck = 738 Dumfries = 739 DumptonPark = 740 Dunbar = 741 Dunblane = 742 Duncraig = 743 Dundee = 744 DunfermlineQueenMargaret = 745 DunfermlineTown = 746 DunkeldAndBirnam = 747 Dunlop = 748 DunrobinCastle = 749 Dunston = 750 DuntonGreen = 751 Durham = 752 DurringtonOnSea = 753 Dyce = 754 DyffrynArdudwy = 755 Eaglescliffe = 756 EalingBroadway = 757 Earlestown = 758 Earley = 759 Earlsfield = 760 EarlswoodSurrey = 761 EarlswoodWestMidlands = 762 Eastbourne = 774 Eastbrook = 775 EastCroydon = 763 EastDidsbury = 764 EastDulwich = 765 Easterhouse = 776 EastFarleigh = 766 EastGarforth = 767 EastGrinstead = 768 EasthamRake = 777 EastKilbride = 769 Eastleigh = 778 EastMalling = 770 EastMidlandsParkway = 771 Eastrington = 779 EastTilbury = 772 EastWorthing = 773 EbbsfleetInternational = 780 EbbwValeParkway = 781 EbbwValeTown = 782 EcclesManchester = 783 EcclesRoad = 784 EcclestonPark = 785 Edale = 786 Edenbridge = 788 EdenbridgeTown = 789 EdenPark = 787 EdgeHill = 790 Edinburgh = 791 EdinburghGateway = 792 EdinburghPark = 793 EdmontonGreen = 794 EffinghamJunction = 795 Eggesford = 796 Egham = 797 Egton = 798 ElephantAndCastle = 799 ElephantAndCastleUnderground = 800 Elgin = 801 EllesmerePort = 802 ElmersEnd = 803 ElmsteadWoods = 804 Elmswell = 805 Elsecar = 806 ElsenhamEssex = 807 ElstreeAndBorehamwood = 808 Eltham = 809 EltonAndOrston = 810 Ely = 811 EmersonPark = 812 Emsworth = 813 EnerglynAndChurchillPark = 814 EnfieldChase = 815 EnfieldLock = 816 EnfieldTown = 817 Entwistle = 818 EpsomDowns = 820 EpsomSurrey = 819 Erdington = 821 Eridge = 822 Erith = 823 Esher = 824 Eskbank = 825 EssexRoad = 826 Etchingham = 827 EuxtonBalshawLane = 828 Evesham = 829 EwellEast = 830 EwellWest = 831 ExeterCentral = 832 ExeterStDavids = 833 ExeterStThomas = 834 ExhibitionCentreGlasgow = 835 Exmouth = 836 Exton = 837 Eynsford = 838 Fairbourne = 839 Fairfield = 840 Fairlie = 841 Fairwater = 842 Falconwood = 843 FalkirkGrahamston = 844 FalkirkHigh = 845 FallsofCruachan = 846 Falmer = 847 FalmouthDocks = 848 FalmouthTown = 849 Fareham = 850 FarnboroughMain = 851 FarnboroughNorth = 852 Farncombe = 853 Farnham = 854 FarninghamRoad = 855 Farnworth = 856 Farringdon = 857 Fauldhouse = 858 Faversham = 859 Faygate = 860 Fazakerley = 861 Fearn = 862 Featherstone = 863 Felixstowe = 864 Feltham = 865 Feniton = 866 FennyStratford = 867 Fernhill = 868 Ferriby = 869 Ferryside = 870 Ffairfach = 871 Filey = 872 FiltonAbbeyWood = 873 FinchleyRoadAndFrognal = 874 FinsburyPark = 875 Finstock = 876 FishbourneSussex = 877 Fishersgate = 878 FishguardAndGoodwick = 879 FishguardHarbour = 880 Fiskerton = 881 Fitzwilliam = 882 FiveWays = 883 Fleet = 884 Flimby = 885 Flint = 886 Flitwick = 887 Flixton = 888 FloweryField = 889 FolkestoneCentral = 890 FolkestoneWest = 891 Ford = 892 ForestGate = 893 ForestHill = 894 Formby = 895 Forres = 896 Forsinard = 897 FortMatilda = 898 FortWilliam = 899 FourOaks = 900 Foxfield = 901 Foxton = 902 Frant = 903 Fratton = 904 Freshfield = 905 Freshford = 906 Frimley = 907 FrintonOnSea = 908 Frizinghall = 909 Frodsham = 910 Frome = 911 Fulwell = 912 FurnessVale = 913 FurzePlatt = 914 GainsboroughCentral = 915 GainsboroughLeaRoad = 916 Galashiels = 917 Garelochhead = 918 Garforth = 919 Gargrave = 920 Garrowhill = 921 Garscadden = 922 Garsdale = 923 GarstonHertfordshire = 924 Garswood = 925 Gartcosh = 926 GarthMidGlamorgan = 927 GarthPowys = 928 Garve = 929 Gathurst = 930 Gatley = 931 GatwickAirport = 932 GeorgemasJunction = 933 GerrardsCross = 934 GideaPark = 935 Giffnock = 936 Giggleswick = 937 Gilberdyke = 938 GilfachFargoed = 939 GillinghamDorset = 940 GillinghamKent = 941 Gilshochill = 942 GipsyHill = 943 Girvan = 944 Glaisdale = 945 GlanConwy = 946 GlasgowCentral = 947 GlasgowQueenStreet = 948 Glasshoughton = 949 Glazebrook = 950 Gleneagles = 951 Glenfinnan = 952 Glengarnock = 953 GlenrotheswithThornton = 954 Glossop = 955 Gloucester = 956 Glynde = 957 Gobowen = 958 Godalming = 959 Godley = 960 Godstone = 961 Goldthorpe = 962 GolfStreet = 963 Golspie = 964 Gomshall = 965 Goodmayes = 966 Goole = 967 Goostrey = 968 GordonHill = 969 Gorebridge = 970 GoringAndStreatley = 971 GoringBySea = 972 Gorton = 973 GospelOak = 974 Gourock = 975 Gowerton = 976 Goxhill = 977 GrangeOverSands = 979 GrangePark = 978 GrangetownCardiff = 980 Grantham = 981 Grateley = 982 GravellyHill = 983 Gravesend = 984 Grays = 985 GreatAyton = 986 GreatBentley = 987 GreatChesterford = 988 GreatCoates = 989 GreatMalvern = 990 GreatMissenden = 991 GreatYarmouth = 992 Greenbank = 995 Greenfaulds = 996 Greenfield = 997 Greenford = 998 Greenhithe = 999 GreenLane = 993 GreenockCentral = 1000 GreenockWest = 1001 GreenRoad = 994 Greenwich = 1002 GretnaGreen = 1003 GrimsbyDocks = 1004 GrimsbyTown = 1005 Grindleford = 1006 Grosmont = 1007 GrovePark = 1008 GuideBridge = 1009 Guildford = 1010 Guiseley = 1011 Gunnersbury = 1012 Gunnislake = 1013 Gunton = 1014 Gwersyllt = 1015 GypsyLane = 1016 Habrough = 1017 Hackbridge = 1018 HackneyCentral = 1019 HackneyDowns = 1020 HackneyWick = 1021 HaddenhamAndThameParkway = 1022 Haddiscoe = 1023 Hadfield = 1024 HadleyWood = 1025 HagFold = 1026 Haggerston = 1027 Hagley = 1028 Hairmyres = 1029 HaleManchester = 1030 Halesworth = 1031 Halewood = 1032 Halifax = 1033 HallGreen = 1034 Halling = 1036 HallIThWood = 1037 HallRoad = 1035 Haltwhistle = 1038 Hamble = 1040 HamiltonCentral = 1041 HamiltonWest = 1042 Hammerton = 1043 HampdenParkSussex = 1044 HampsteadHeath = 1045 HamptonCourt = 1047 HamptonInArden = 1049 HamptonLondon = 1046 HamptonWick = 1048 HamsteadBirmingham = 1050 HamStreet = 1039 Hamworthy = 1051 Hanborough = 1052 Handforth = 1053 Hanwell = 1054 Hapton = 1055 Harlech = 1056 Harlesden = 1057 HarlingRoad = 1058 HarlingtonBeds = 1059 HarlowMill = 1060 HarlowTown = 1061 HaroldWood = 1062 Harpenden = 1063 Harrietsham = 1064 Harringay = 1065 HarringayGreenLanes = 1066 Harrington = 1067 Harrogate = 1068 HarrowAndWealdstone = 1069 HarrowOnTheHill = 1070 HartfordCheshire = 1071 Hartlebury = 1072 Hartlepool = 1073 Hartwood = 1074 HarwichInternational = 1075 HarwichTown = 1076 Haslemere = 1077 Hassocks = 1078 Hastings = 1079 HatchEnd = 1080 HatfieldAndStainforth = 1081 HatfieldHerts = 1082 HatfieldPeverel = 1083 Hathersage = 1084 Hattersley = 1085 Hatton = 1086 Havant = 1087 Havenhouse = 1088 Haverfordwest = 1089 Hawarden = 1090 HawardenBridge = 1091 Hawkhead = 1092 HaydonBridge = 1093 HaydonsRoad = 1094 HayesAndHarlington = 1095 HayesKent = 1096 Hayle = 1097 Haymarket = 1098 HaywardsHeath = 1099 HazelGrove = 1100 Headcorn = 1101 Headingley = 1102 HeadstoneLane = 1103 HealdGreen = 1104 Healing = 1105 HeathHighLevel = 1106 HeathLowLevel = 1107 HeathrowAirportTerminal4 = 1108 HeathrowAirportTerminal5 = 1109 HeathrowAirportTerminals12And3 = 1110 HeatonChapel = 1111 HebdenBridge = 1112 Heckington = 1113 HedgeEnd = 1114 Hednesford = 1115 Heighington = 1116 HelensburghCentral = 1117 HelensburghUpper = 1118 Hellifield = 1119 Helmsdale = 1120 Helsby = 1121 HemelHempstead = 1122 Hendon = 1123 Hengoed = 1124 HenleyInArden = 1125 HenleyOnThames = 1126 Hensall = 1127 Hereford = 1128 HerneBay = 1129 HerneHill = 1130 Hersham = 1131 HertfordEast = 1132 HertfordNorth = 1133 Hessle = 1134 Heswall = 1135 Hever = 1136 Heworth = 1137 Hexham = 1138 Heyford = 1139 HeyshamPort = 1140 HighamKent = 1145 HighamsPark = 1146 HighbridgeAndBurnham = 1147 HighBrooms = 1141 HighburyAndIslington = 1148 HighStreetGlasgow = 1142 HighStreetKensingtonUnderground = 1143 Hightown = 1149 HighWycombe = 1144 Hildenborough = 1150 Hillfoot = 1151 HillingtonEast = 1152 HillingtonWest = 1153 Hillside = 1154 Hilsea = 1155 HinchleyWood = 1156 HinckleyLeics = 1157 Hindley = 1158 HintonAdmiral = 1159 Hitchin = 1160 HitherGreen = 1161 Hockley = 1162 Hollingbourne = 1163 HolmesChapel = 1164 Holmwood = 1165 HoltonHeath = 1166 Holyhead = 1167 Holytown = 1168 Homerton = 1169 Honeybourne = 1170 Honiton = 1171 Honley = 1172 HonorOakPark = 1173 Hook = 1174 Hooton = 1175 HopeDerbyshire = 1176 HopeFlintshire = 1177 HoptonHeath = 1178 Horden = 1179 Horley = 1180 HornbeamPark = 1181 Hornsey = 1182 Horsforth = 1183 Horsham = 1184 Horsley = 1185 HortonInRibblesdale = 1186 HorwichParkway = 1187 Hoscar = 1188 HoughGreen = 1189 Hounslow = 1190 Hove = 1191 HovetonAndWroxham = 1192 Howden = 1194 HowWoodHerts = 1193 HowwoodRenfrewshire = 1195 Hoxton = 1196 Hoylake = 1197 HubbertsBridge = 1198 Hucknall = 1199 Huddersfield = 1200 Hull = 1201 HumphreyPark = 1202 Huncoat = 1203 Hungerford = 1204 Hunmanby = 1205 Huntingdon = 1206 Huntly = 1207 HuntsCross = 1208 HurstGreen = 1209 HuttonCranswick = 1210 Huyton = 1211 HydeCentral = 1212 HydeNorth = 1213 Hykeham = 1214 Hyndland = 1215 HytheEssex = 1216 IBM = 1217 Ifield = 1218 Ilford = 1219 Ilkeston = 1220 Ilkley = 1221 ImperialWharf = 1222 InceAndElton = 1223 InceManchester = 1224 Ingatestone = 1225 Insch = 1226 Invergordon = 1227 Invergowrie = 1228 Inverkeithing = 1229 Inverkip = 1230 Inverness = 1231 Invershin = 1232 Inverurie = 1233 Ipswich = 1234 Irlam = 1235 Irvine = 1236 Isleworth = 1237 Islip = 1238 Iver = 1239 Ivybridge = 1240 JamesCook = 1241 JewelleryQuarter = 1242 JohnstoneStrathclyde = 1244 JohnstonPembs = 1243 Jordanhill = 1245 KearsleyManchester = 1246 KearsneyKent = 1247 Keighley = 1248 Keith = 1249 Kelvedon = 1250 Kelvindale = 1251 Kemble = 1252 KempstonHardwick = 1253 KemptonParkRacecourse = 1254 Kemsing = 1255 Kemsley = 1256 Kendal = 1257 Kenilworth = 1258 Kenley = 1259 Kennett = 1260 Kennishead = 1261 KensalGreen = 1262 KensalRise = 1263 KensingtonOlympia = 1264 KentHouse = 1265 KentishTown = 1266 KentishTownWest = 1267 Kenton = 1268 KentsBank = 1269 Kettering = 1270 KewBridge = 1271 KewGardens = 1272 Keyham = 1273 Keynsham = 1274 Kidbrooke = 1275 Kidderminster = 1276 Kidsgrove = 1277 Kidwelly = 1278 KilburnHighRoad = 1279 Kildale = 1280 Kildonan = 1281 Kilgetty = 1282 Kilmarnock = 1283 Kilmaurs = 1284 Kilpatrick = 1285 Kilwinning = 1286 Kinbrace = 1287 Kingham = 1288 Kinghorn = 1289 Kingsknowe = 1296 KingsLangley = 1290 KingsLynn = 1291 KingsNorton = 1292 KingsNympton = 1293 KingsPark = 1294 KingsSutton = 1295 Kingston = 1297 Kingswood = 1298 Kingussie = 1299 Kintbury = 1300 KirbyCross = 1301 KirkbyInAshfield = 1305 KirkbyInFurness = 1306 KirkbyMerseyside = 1303 KirkbyStephen = 1304 Kirkcaldy = 1307 Kirkconnel = 1308 Kirkdale = 1309 KirkhamAndWesham = 1310 Kirkhill = 1311 Kirknewton = 1312 KirkSandall = 1302 KirkstallForge = 1313 Kirkwood = 1314 KirtonLindsey = 1315 KivetonBridge = 1316 KivetonPark = 1317 Knaresborough = 1318 Knebworth = 1319 Knighton = 1320 Knockholt = 1321 Knottingley = 1322 Knucklas = 1323 Knutsford = 1324 KyleofLochalsh = 1325 Ladybank = 1326 Ladywell = 1327 Laindon = 1328 Lairg = 1329 Lake = 1330 Lakenheath = 1331 Lamphey = 1332 Lanark = 1333 Lancaster = 1334 Lancing = 1335 Landywood = 1336 Langbank = 1337 Langho = 1338 LangleyBerks = 1339 LangleyGreen = 1340 LangleyMill = 1341 Langside = 1342 Langwathby = 1343 LangwithWhaleyThorns = 1344 Lapford = 1345 Lapworth = 1346 Larbert = 1347 Largs = 1348 Larkhall = 1349 Laurencekirk = 1350 LawrenceHill = 1351 LaytonLancs = 1352 LazonbyAndKirkoswald = 1353 LeaBridge = 1354 Leagrave = 1357 LeaGreen = 1355 LeaHall = 1356 Lealholm = 1358 LeamingtonSpa = 1359 Leasowe = 1360 Leatherhead = 1361 Ledbury = 1362 Leeds = 1364 LeeLondon = 1363 Leicester = 1365 LeighKent = 1366 LeighOnSea = 1367 LeightonBuzzard = 1368 Lelant = 1369 LelantSaltings = 1370 Lenham = 1371 Lenzie = 1372 Leominster = 1373 LetchworthGardenCity = 1374 LeucharsForStAndrews = 1375 Levenshulme = 1376 Lewes = 1377 Lewisham = 1378 Leyland = 1379 LeytonMidlandRoad = 1380 LeytonstoneHighRoad = 1381 LichfieldCity = 1382 LichfieldTrentValley = 1383 Lidlington = 1384 Limehouse = 1385 LincolnCentral = 1386 Lingfield = 1387 Lingwood = 1388 Linlithgow = 1389 Liphook = 1390 Liskeard = 1391 Liss = 1392 LisvaneAndThornhill = 1393 Littleborough = 1396 Littlehampton = 1397 Littlehaven = 1398 LittleKimble = 1394 Littleport = 1399 LittleSutton = 1395 LiverpoolCentral = 1400 LiverpoolJamesStreet = 1401 LiverpoolLimeStreet = 1402 LiverpoolSouthParkway = 1403 LivingstonNorth = 1404 LivingstonSouth = 1405 Llanaber = 1406 Llanbedr = 1407 LlanbisterRoad = 1408 Llanbradach = 1409 Llandaf = 1410 Llandanwg = 1411 Llandecwyn = 1412 Llandeilo = 1413 Llandovery = 1414 Llandrindod = 1415 Llandudno = 1416 LlandudnoJunction = 1417 Llandybie = 1418 Llanelli = 1419 Llanfairfechan = 1420 Llanfairpwll = 1421 Llangadog = 1422 Llangammarch = 1423 Llangennech = 1424 Llangynllo = 1425 Llanharan = 1426 Llanhilleth = 1427 Llanishen = 1428 Llanrwst = 1429 Llansamlet = 1430 LlantwitMajor = 1431 Llanwrda = 1432 Llanwrtyd = 1433 Llwyngwril = 1434 Llwynypia = 1435 Lochailort = 1438 LochAwe = 1436 LochEilOutwardBound = 1437 Locheilside = 1439 Lochgelly = 1440 Lochluichart = 1441 Lochwinnoch = 1442 Lockerbie = 1443 Lockwood = 1444 LondonBlackfriars = 1445 LondonBridge = 1446 LondonCannonStreet = 1447 LondonCharingCross = 1448 LondonEuston = 1449 LondonFenchurchStreet = 1450 LondonFields = 1451 LondonKingsCross = 1452 LondonLiverpoolStreet = 1453 LondonMarylebone = 1454 LondonPaddington = 1455 LondonRoadBrighton = 1456 LondonRoadGuildford = 1457 LondonStPancrasInternational = 1459 LondonStPancrasIntl = 1458 LondonVictoria = 1460 LondonWaterloo = 1461 LondonWaterlooEast = 1462 Longbeck = 1466 Longbridge = 1467 LongBuckby = 1463 Longcross = 1468 LongEaton = 1464 Longfield = 1469 Longniddry = 1470 Longport = 1471 LongPreston = 1465 Longton = 1472 Looe = 1473 Lostock = 1474 LostockGralam = 1475 LostockHall = 1476 Lostwithiel = 1477 Loughborough = 1478 LoughboroughJunction = 1479 Lowdham = 1481 LowerSydenham = 1482 Lowestoft = 1483 LowMoor = 1480 Ludlow = 1484 Luton = 1485 LutonAirportParkway = 1486 Luxulyan = 1487 Lydney = 1488 LyeWestMidlands = 1489 LymingtonPier = 1490 LymingtonTown = 1491 LympstoneCommando = 1492 LympstoneVillage = 1493 Lytham = 1494 Macclesfield = 1495 Machynlleth = 1496 Maesteg = 1497 MaestegEwennyRoad = 1498 Maghull = 1499 MaghullNorth = 1500 Maidenhead = 1502 MaidenNewton = 1501 MaidstoneBarracks = 1503 MaidstoneEast = 1504 MaidstoneWest = 1505 MaldenManor = 1506 Mallaig = 1507 Malton = 1508 MalvernLink = 1509 ManchesterAirport = 1510 ManchesterOxfordRoad = 1511 ManchesterPiccadilly = 1512 ManchesterUnitedFootballGround = 1513 ManchesterVictoria = 1514 Manea = 1515 Manningtree = 1516 Manorbier = 1519 ManorPark = 1517 ManorRoad = 1518 Manors = 1520 Mansfield = 1521 MansfieldWoodhouse = 1522 March = 1523 MardenKent = 1524 Margate = 1525 MarketHarborough = 1526 MarketRasen = 1527 Markinch = 1528 MarksTey = 1529 Marlow = 1530 Marple = 1531 MarsdenYorks = 1532 Marske = 1533 MarstonGreen = 1534 MartinMill = 1535 MartinsHeron = 1536 Marton = 1537 Maryhill = 1538 Maryland = 1539 Maryport = 1540 Matlock = 1541 MatlockBath = 1542 MauldethRoad = 1543 MaxwellPark = 1544 Maybole = 1545 MazeHill = 1546 Meadowhall = 1547 Meldreth = 1548 Melksham = 1549 MeltonMowbray = 1551 MeltonSuffolk = 1550 Menheniot = 1552 Menston = 1553 Meols = 1554 MeolsCop = 1555 Meopham = 1556 MeridianWater = 1557 Merryton = 1558 Merstham = 1559 MerthyrTydfil = 1560 MerthyrVale = 1561 Metheringham = 1562 MetroCentre = 1563 Mexborough = 1564 Micheldever = 1565 Micklefield = 1566 Middlesbrough = 1567 Middlewood = 1568 Midgham = 1569 MilfordHaven = 1571 MilfordSurrey = 1570 MillbrookBeds = 1574 MillbrookHants = 1575 MillHillBroadway = 1573 MillHillLancs = 1572 MillikenPark = 1576 Millom = 1577 MillsHillManchester = 1578 Milngavie = 1579 MiltonKeynesCentral = 1580 Minffordd = 1581 Minster = 1582 Mirfield = 1583 Mistley = 1584 MitchamEastfields = 1585 MitchamJunction = 1586 Mobberley = 1587 Monifieth = 1588 MonksRisborough = 1589 Montpelier = 1590 Montrose = 1591 Moorfields = 1592 Moorgate = 1593 Moorside = 1594 Moorthorpe = 1595 Morar = 1596 MorchardRoad = 1597 MordenSouth = 1598 Morecambe = 1599 MoretonDorset = 1600 MoretonInMarsh = 1602 MoretonMerseyside = 1601 MorfaMawddach = 1603 Morley = 1604 Morpeth = 1605 Mortimer = 1606 Mortlake = 1607 MosesGate = 1608 MossleyHill = 1611 MossleyManchester = 1610 Mosspark = 1612 MossSide = 1609 Moston = 1613 Motherwell = 1614 MotspurPark = 1615 Mottingham = 1616 MottisfontAndDunbridge = 1617 Mouldsworth = 1618 Moulsecoomb = 1619 MountainAsh = 1622 MountFlorida = 1620 MountVernon = 1621 Muirend = 1624 MuirofOrd = 1623 Musselburgh = 1625 Mytholmroyd = 1626 Nafferton = 1627 NailseaAndBackwell = 1628 Nairn = 1629 Nantwich = 1630 Narberth = 1631 Narborough = 1632 NavigationRoad = 1633 Neath = 1634 NeedhamMarket = 1635 Neilston = 1636 Nelson = 1637 Neston = 1638 Netherfield = 1639 Nethertown = 1640 Netley = 1641 NewarkCastle = 1659 NewarkNorthGate = 1660 NewBarnet = 1642 NewBeckenham = 1643 Newbridge = 1661 NewBrighton = 1644 Newbury = 1662 NewburyRacecourse = 1663 Newcastle = 1664 NewClee = 1645 Newcourt = 1665 Newcraighall = 1666 NewCross = 1646 NewCrossGate = 1647 NewCumnock = 1648 NewEltham = 1649 NewhavenHarbour = 1667 NewhavenTown = 1668 NewHolland = 1650 NewHythe = 1651 Newington = 1669 NewLane = 1652 NewMalden = 1653 Newmarket = 1670 NewMillsCentral = 1654 NewMillsNewtown = 1655 NewMilton = 1656 NewportEssex = 1671 NewportSouthWales = 1672 NewPudsey = 1657 Newquay = 1673 NewSouthgate = 1658 Newstead = 1674 NewtonAbbot = 1676 NewtonAycliffe = 1677 NewtonforHyde = 1678 Newtongrange = 1680 NewtonLanark = 1675 NewtonLeWillows = 1681 Newtonmore = 1682 NewtonOnAyr = 1683 NewtonStCyres = 1679 NewtownPowys = 1684 NinianPark = 1685 Nitshill = 1686 Norbiton = 1687 Norbury = 1688 NormansBay = 1689 Normanton = 1690 Northallerton = 1701 Northampton = 1702 NorthBerwick = 1691 NorthCamp = 1692 NorthDulwich = 1693 NorthFambridge = 1694 Northfield = 1703 Northfleet = 1704 NorthLlanrwst = 1695 NortholtPark = 1705 NorthQueensferry = 1696 NorthRoadDarlington = 1697 NorthSheen = 1698 NorthumberlandPark = 1706 NorthWalsham = 1699 NorthWembley = 1700 Northwich = 1707 Norwich = 1708 NorwoodJunction = 1709 Nottingham = 1710 Nuneaton = 1711 Nunhead = 1712 Nunthorpe = 1713 Nutbourne = 1714 Nutfield = 1715 Oakengates = 1716 Oakham = 1717 OakleighPark = 1718 Oban = 1719 Ockendon = 1720 Ockley = 1721 Okehampton = 1722 OldfieldPark = 1726 OldHill = 1723 OldRoan = 1724 OldStreet = 1725 Olton = 1727 Ore = 1728 Ormskirk = 1729 Orpington = 1730 Orrell = 1731 OrrellPark = 1732 Otford = 1733 OultonBroadNorth = 1734 OultonBroadSouth = 1735 Outwood = 1736 Overpool = 1737 Overton = 1738 OxenholmeLakeDistrict = 1739 Oxford = 1740 OxfordParkway = 1741 Oxshott = 1742 Oxted = 1743 PaddockWood = 1744 Padgate = 1745 Paignton = 1746 PaisleyCanal = 1747 PaisleyGilmourStreet = 1748 PaisleyStJames = 1749 PalmersGreen = 1750 Pangbourne = 1751 Pannal = 1752 Pantyffynnon = 1753 Par = 1754 Parbold = 1755 ParkstoneDorset = 1757 ParkStreet = 1756 ParsonStreet = 1758 Partick = 1759 Parton = 1760 Patchway = 1761 Patricroft = 1762 Patterton = 1763 Peartree = 1764 PeckhamRye = 1765 Pegswood = 1766 Pemberton = 1767 PembreyAndBurryPort = 1768 Pembroke = 1769 PembrokeDock = 1770 Penally = 1771 Penarth = 1772 Pencoed = 1773 Pengam = 1774 PengeEast = 1775 PengeWest = 1776 Penhelig = 1777 Penistone = 1778 Penkridge = 1779 Penmaenmawr = 1780 Penmere = 1781 Penrhiwceiber = 1782 Penrhyndeudraeth = 1783 PenrithNorthLakes = 1784 PenrynCornwall = 1785 PensarnGwynedd = 1786 Penshurst = 1787 PentreBach = 1788 PenYBont = 1789 Penychain = 1790 Penyffordd = 1791 Penzance = 1792 Perranwell = 1793 PerryBarr = 1794 Pershore = 1795 Perth = 1796 Peterborough = 1797 Petersfield = 1798 PettsWood = 1799 PevenseyAndWestham = 1800 PevenseyBay = 1801 Pewsey = 1802 Pilning = 1803 Pinhoe = 1804 Pitlochry = 1805 Pitsea = 1806 Pleasington = 1807 Plockton = 1808 Pluckley = 1809 Plumley = 1810 Plumpton = 1811 Plumstead = 1812 Plymouth = 1813 Pokesdown = 1814 Polegate = 1815 Polesworth = 1816 PollokshawsEast = 1817 PollokshawsWest = 1818 PollokshieldsEast = 1819 PollokshieldsWest = 1820 Polmont = 1821 PolsloeBridge = 1822 PondersEnd = 1823 Pontarddulais = 1824 PontefractBaghill = 1825 PontefractMonkhill = 1826 PontefractTanshelf = 1827 Pontlottyn = 1828 Pontyclun = 1829 PontYPant = 1830 PontypoolAndNewInn = 1831 Pontypridd = 1832 Poole = 1833 Poppleton = 1834 Portchester = 1838 PortGlasgow = 1835 Porth = 1839 Porthmadog = 1840 Portlethen = 1841 Portslade = 1842 PortsmouthAndSouthsea = 1843 PortsmouthArms = 1844 PortsmouthHarbour = 1845 PortSunlight = 1836 PortTalbotParkway = 1837 PossilparkAndParkhouse = 1846 PottersBar = 1847 PoultonLeFylde = 1848 Poynton = 1849 Prees = 1850 Prescot = 1851 Prestatyn = 1852 Prestbury = 1853 PrestonLancs = 1854 Prestonpans = 1856 PrestonPark = 1855 PrestwickInternationalAirport = 1857 PrestwickTown = 1858 PriesthillAndDarnley = 1859 PrincesRisborough = 1860 Prittlewell = 1861 Prudhoe = 1862 Pulborough = 1863 Purfleet = 1864 Purley = 1865 PurleyOaks = 1866 Putney = 1867 Pwllheli = 1868 PyeCorner = 1869 Pyle = 1870 QuakersYard = 1871 Queenborough = 1872 QueensParkGlasgow = 1873 QueensParkLondon = 1874 QueensRoadPeckham = 1875 QueenstownRoadBattersea = 1876 QuintrellDowns = 1877 RadcliffeOnTrent = 1878 Radlett = 1879 Radley = 1880 Radyr = 1881 Rainford = 1882 RainhamEssex = 1883 RainhamKent = 1884 Rainhill = 1885 Ramsgate = 1886 RamsgreaveAndWilpshire = 1887 Rannoch = 1888 Rauceby = 1889 RavenglassforEskdale = 1890 Ravensbourne = 1891 Ravensthorpe = 1892 Rawcliffe = 1893 Rayleigh = 1894 RaynesPark = 1895 Reading = 1896 ReadingWest = 1897 RectoryRoad = 1898 Redbridge = 1899 RedcarBritishSteel = 1900 RedcarCentral = 1901 RedcarEast = 1902 ReddishNorth = 1903 ReddishSouth = 1904 Redditch = 1905 Redhill = 1906 Redland = 1907 Redruth = 1908 ReedhamNorfolk = 1909 ReedhamSurrey = 1910 Reigate = 1911 Renton = 1912 Retford = 1913 Rhiwbina = 1914 RhooseCardiffInternationalAirport = 1915 Rhosneigr = 1916 Rhyl = 1917 Rhymney = 1918 Ribblehead = 1919 RiceLane = 1920 RichmondLondon = 1921 Rickmansworth = 1922 Riddlesdown = 1923 Ridgmont = 1924 RidingMill = 1925 RiscaAndPontymister = 1926 Rishton = 1927 Robertsbridge = 1928 Robroyston = 1929 Roby = 1930 Rochdale = 1931 Roche = 1932 Rochester = 1933 Rochford = 1934 RockFerry = 1935 Rogart = 1936 Rogerstone = 1937 Rolleston = 1938 RomanBridge = 1939 Romford = 1940 Romiley = 1941 Romsey = 1942 Roose = 1943 RoseGrove = 1944 RoseHillMarple = 1945 Rosyth = 1946 RotherhamCentral = 1947 Rotherhithe = 1948 RoughtonRoad = 1949 RowlandsCastle = 1950 RowleyRegis = 1951 RoyBridge = 1952 Roydon = 1953 Royston = 1954 Ruabon = 1955 Rufford = 1956 Rugby = 1957 RugeleyTown = 1958 RugeleyTrentValley = 1959 Runcorn = 1960 RuncornEast = 1961 Ruskington = 1962 Ruswarp = 1963 Rutherglen = 1964 RydeEsplanade = 1965 RydePierHead = 1966 RyderBrow = 1968 RydeStJohnsRoad = 1967 RyeHouse = 1970 RyeSussex = 1969 SalfordCentral = 1971 SalfordCrescent = 1972 SalfordsSurrey = 1973 Salhouse = 1974 Salisbury = 1975 Saltaire = 1976 Saltash = 1977 Saltburn = 1978 Saltcoats = 1979 Saltmarshe = 1980 Salwick = 1981 SampfordCourtenay = 1982 SandalAndAgbrigg = 1983 Sandbach = 1984 Sanderstead = 1985 Sandhills = 1986 SandhurstBerks = 1987 Sandling = 1988 Sandown = 1989 Sandplace = 1990 SandwellAndDudley = 1991 Sandwich = 1992 Sandy = 1993 SankeyforPenketh = 1994 Sanquhar = 1995 Sarn = 1996 Saundersfoot = 1997 Saunderton = 1998 Sawbridgeworth = 1999 Saxilby = 2000 Saxmundham = 2001 Scarborough = 2002 Scotscalder = 2003 Scotstounhill = 2004 Scunthorpe = 2005 SeafordSussex = 2007 SeaforthAndLitherland = 2008 Seaham = 2009 Seamer = 2010 SeaMills = 2006 Seascale = 2011 SeatonCarew = 2012 SeerGreenAndJordans = 2013 Selby = 2014 Selhurst = 2015 Sellafield = 2016 Selling = 2017 SellyOak = 2018 Settle = 2019 SevenKings = 2020 Sevenoaks = 2022 SevenSisters = 2021 SevernBeach = 2023 SevernTunnelJunction = 2024 Shadwell = 2025 ShalfordSurrey = 2026 Shanklin = 2027 Shawfair = 2028 Shawford = 2029 Shawlands = 2030 SheernessOnSea = 2031 Sheffield = 2032 ShelfordCambs = 2033 Shenfield = 2034 Shenstone = 2035 ShepherdsBush = 2036 ShepherdsWell = 2037 Shepley = 2038 Shepperton = 2039 Shepreth = 2040 Sherborne = 2041 SherburnInElmet = 2042 Sheringham = 2043 Shettleston = 2044 Shieldmuir = 2045 Shifnal = 2046 Shildon = 2047 Shiplake = 2048 ShipleyYorks = 2049 ShippeaHill = 2050 Shipton = 2051 Shirebrook = 2052 Shirehampton = 2053 Shireoaks = 2054 Shirley = 2055 Shoeburyness = 2056 Sholing = 2057 ShoreditchHighStreet = 2058 ShorehamBySea = 2060 ShorehamKent = 2059 Shortlands = 2061 Shotton = 2062 Shotts = 2063 Shrewsbury = 2064 Sidcup = 2065 Sileby = 2066 Silecroft = 2067 SilkstoneCommon = 2068 Silverdale = 2070 SilverStreet = 2069 Singer = 2071 Sittingbourne = 2072 Skegness = 2073 Skewen = 2074 Skipton = 2075 SladeGreen = 2076 Slaithwaite = 2077 Slateford = 2078 Sleaford = 2079 Sleights = 2080 Slough = 2081 SmallbrookJunction = 2083 SmallHeath = 2082 SmethwickGaltonBridge = 2084 SmethwickRolfeStreet = 2085 SmithyBridge = 2086 Snaith = 2087 Snodland = 2088 Snowdown = 2089 SoleStreet = 2090 Solihull = 2091 Somerleyton = 2092 SouthActon = 2093 Southall = 2108 SouthamptonAirportParkway = 2109 SouthamptonCentral = 2110 SouthBank = 2094 SouthBermondsey = 2095 Southbourne = 2111 Southbury = 2112 SouthCroydon = 2096 Southease = 2113 SouthElmsall = 2097 SouthendAirport = 2114 SouthendCentral = 2115 SouthendEast = 2116 SouthendVictoria = 2117 SouthGreenford = 2098 SouthGyle = 2099 SouthHampstead = 2100 SouthKenton = 2101 SouthMerton = 2102 SouthMilford = 2103 Southminster = 2118 Southport = 2119 SouthRuislip = 2104 SouthTottenham = 2105 Southwick = 2120 SouthWigston = 2106 SouthWoodhamFerrers = 2107 SowerbyBridge = 2121 Spalding = 2122 SpeanBridge = 2123 Spital = 2124 Spondon = 2125 SpoonerRow = 2126 Springburn = 2128 Springfield = 2129 SpringRoad = 2127 SquiresGate = 2130 Stafford = 2157 Staines = 2158 StAlbansAbbey = 2131 StAlbansCity = 2132 Stallingborough = 2159 Stalybridge = 2160 StamfordHill = 2162 StamfordLincs = 2161 StAndrewsRoad = 2133 StanfordLeHope = 2163 StanlowAndThornton = 2164 StAnnesOnSea = 2134 StanstedAirport = 2165 StanstedMountfitchet = 2166 Staplehurst = 2167 StapletonRoad = 2168 Starbeck = 2169 Starcross = 2170 StAustell = 2135 StaveleyCumbria = 2171 StBees = 2136 StBudeauxFerryRoad = 2137 StBudeauxVictoriaRoad = 2138 StColumbRoad = 2139 StDenys = 2140 Stechford = 2172 SteetonAndSilsden = 2173 Stepps = 2174 StErth = 2141 Stevenage = 2175 Stevenston = 2176 Stewartby = 2177 Stewarton = 2178 StGermans = 2142 StHelensCentral = 2143 StHelensJunction = 2144 StHelierSurrey = 2145 Stirling = 2179 StIvesCornwall = 2146 StJamesParkExeter = 2147 StJamesStreetWalthamstow = 2148 StJohnsLondon = 2149 StKeyneWishingWellHalt = 2150 StLeonardsWarriorSquare = 2151 StMargaretsHerts = 2152 StMargaretsLondon = 2153 StMaryCray = 2154 StMichaels = 2155 StNeots = 2156 Stockport = 2180 Stocksfield = 2181 Stocksmoor = 2182 Stockton = 2183 StokeMandeville = 2184 StokeNewington = 2185 StokeOnTrent = 2186 StonebridgePark = 2189 StoneCrossing = 2188 Stonegate = 2190 Stonehaven = 2191 Stonehouse = 2192 Stoneleigh = 2193 StoneStaffs = 2187 StourbridgeJunction = 2194 StourbridgeTown = 2195 Stow = 2196 Stowmarket = 2197 Stranraer = 2198 StratfordInternational = 2200 StratfordLondon = 2199 StratfordUponAvon = 2201 StratfordUponAvonParkway = 2202 Strathcarron = 2203 StrawberryHill = 2204 StreathamCommon = 2206 StreathamGreaterLondon = 2205 StreathamHill = 2207 Streethouse = 2208 Strines = 2209 Stromeferry = 2210 StroodKent = 2211 StroudGloucs = 2212 Sturry = 2213 Styal = 2214 SudburyAndHarrowRoad = 2215 SudburyHillHarrow = 2217 SudburySuffolk = 2216 SugarLoaf = 2218 Summerston = 2219 Sunbury = 2220 Sunderland = 2221 SundridgePark = 2222 Sunningdale = 2223 Sunnymeads = 2224 Surbiton = 2225 SurreyQuays = 2226 SuttonColdfield = 2228 SuttonCommon = 2229 SuttonParkway = 2230 SuttonSurrey = 2227 Swale = 2231 Swanley = 2232 Swanscombe = 2233 Swansea = 2234 Swanwick = 2235 Sway = 2236 Swaythling = 2237 Swinderby = 2238 SwindonWilts = 2239 Swineshead = 2240 SwintonManchester = 2241 SwintonSouthYorks = 2242 SydenhamHill = 2244 SydenhamLondon = 2243 SyonLane = 2245 Syston = 2246 Tackley = 2247 Tadworth = 2248 TaffsWell = 2249 Tain = 2250 Talsarnau = 2251 Talybont = 2252 TalYCafn = 2253 TameBridgeParkway = 2254 Tamworth = 2255 Taplow = 2256 TattenhamCorner = 2257 Taunton = 2258 Taynuilt = 2259 Teddington = 2260 TeesSideAirport = 2261 Teignmouth = 2262 TelfordCentral = 2263 Templecombe = 2264 Tenby = 2265 Teynham = 2266 ThamesDitton = 2267 Thatcham = 2268 ThattoHeath = 2269 Theale = 2272 TheHawthorns = 2270 TheLakesWarks = 2271 TheobaldsGrove = 2273 Thetford = 2274 Thirsk = 2275 Thornaby = 2276 ThorneNorth = 2277 ThorneSouth = 2278 Thornford = 2279 Thornliebank = 2280 ThorntonAbbey = 2281 Thorntonhall = 2283 ThorntonHeath = 2282 ThorpeBay = 2284 ThorpeCulvert = 2285 ThorpeLeSoken = 2286 ThreeBridges = 2287 ThreeOaks = 2288 Thurgarton = 2289 Thurnscoe = 2290 Thurso = 2291 Thurston = 2292 TilburyTown = 2293 TileHill = 2294 Tilehurst = 2295 Tipton = 2296 TirPhil = 2297 Tisbury = 2298 TivertonParkway = 2299 Todmorden = 2300 Tolworth = 2301 Tonbridge = 2303 Tondu = 2304 Tonfanau = 2305 TonPentre = 2302 Tonypandy = 2306 Tooting = 2307 Topsham = 2308 Torquay = 2309 Torre = 2310 Totnes = 2311 TottenhamHale = 2312 Totton = 2313 TownGreen = 2314 TraffordPark = 2315 Trefforest = 2316 TrefforestEstate = 2317 Trehafod = 2318 Treherbert = 2319 Treorchy = 2320 Trimley = 2321 Tring = 2322 TroedYRhiw = 2323 Troon = 2324 Trowbridge = 2325 Truro = 2326 Tulloch = 2327 TulseHill = 2328 TunbridgeWells = 2329 TurkeyStreet = 2330 TutburyAndHatton = 2331 Tweedbank = 2332 Twickenham = 2333 Twyford = 2334 TyCroes = 2335 TyGlas = 2336 Tygwyn = 2337 TyndrumLower = 2338 Tyseley = 2339 Tywyn = 2340 Uckfield = 2341 Uddingston = 2342 Ulceby = 2343 Ulleskelf = 2344 Ulverston = 2345 Umberleigh = 2346 UniversityBirmingham = 2347 Uphall = 2348 Upholland = 2349 Upminster = 2350 UpperHalliford = 2351 UpperHolloway = 2352 UpperTyndrum = 2353 UpperWarlingham = 2354 UptonMerseyside = 2355 Upwey = 2356 Urmston = 2357 Uttoxeter = 2358 Valley = 2359 Vauxhall = 2360 VirginiaWater = 2361 Waddon = 2362 Wadhurst = 2363 Wainfleet = 2364 WakefieldKirkgate = 2365 WakefieldWestgate = 2366 Walkden = 2367 WallaseyGroveRoad = 2368 WallaseyVillage = 2369 Wallington = 2370 Wallyford = 2371 Walmer = 2372 Walsall = 2373 Walsden = 2374 WalthamCross = 2375 WalthamstowCentral = 2376 WalthamstowQueensRoad = 2377 WaltonMerseyside = 2378 WaltonOnThames = 2379 WaltonOnTheNaze = 2380 Wanborough = 2381 WandsworthCommon = 2382 WandsworthRoad = 2383 WandsworthTown = 2384 WansteadPark = 2385 Wapping = 2386 Warblington = 2387 WarehamDorset = 2389 WareHerts = 2388 Wargrave = 2390 Warminster = 2391 Warnham = 2392 WarringtonBankQuay = 2393 WarringtonCentral = 2394 WarringtonWest = 2395 Warwick = 2396 WarwickParkway = 2397 Waterbeach = 2399 Wateringbury = 2400 WaterlooMerseyside = 2401 WaterOrton = 2398 WatfordHighStreet = 2402 WatfordJunction = 2403 WatfordNorth = 2404 Watlington = 2405 WattonAtStone = 2406 WaunGronPark = 2407 WavertreeTechnologyPark = 2408 Wedgwood = 2409 Weeley = 2410 Weeton = 2411 WelhamGreen = 2412 Welling = 2413 Wellingborough = 2414 WellingtonShropshire = 2415 Welshpool = 2416 WelwynGardenCity = 2417 WelwynNorth = 2418 Wem = 2419 WembleyCentral = 2420 WembleyStadium = 2421 WemyssBay = 2422 Wendover = 2423 Wennington = 2424 WestAllerton = 2425 WestBrompton = 2426 WestburyWilts = 2447 WestByfleet = 2427 WestCalder = 2428 Westcliff = 2448 WestcombePark = 2449 WestCroydon = 2429 WestDrayton = 2430 WestDulwich = 2431 WestEaling = 2432 Westenhanger = 2450 Westerfield = 2452 WesterHailes = 2451 Westerton = 2453 WestgateOnSea = 2454 WestHam = 2433 WestHampstead = 2434 WestHampsteadThameslink = 2435 WestHorndon = 2436 Westhoughton = 2455 WestKilbride = 2437 WestKirby = 2438 WestMalling = 2439 WestNorwood = 2440 WestonMilton = 2456 WestonSuperMare = 2457 WestRuislip = 2441 WestRunton = 2442 WestStLeonards = 2443 WestSutton = 2444 WestWickham = 2445 WestWorthing = 2446 Wetheral = 2458 Weybridge = 2459 Weymouth = 2460 WhaleyBridge = 2461 WhalleyLancs = 2462 Whatstandwell = 2463 Whifflet = 2464 Whimple = 2465 Whinhill = 2466 Whiston = 2467 Whitby = 2468 WhitchurchCardiff = 2469 WhitchurchHants = 2470 WhitchurchShropshire = 2471 Whitechapel = 2474 Whitecraigs = 2475 WhiteHartLane = 2472 Whitehaven = 2476 WhiteNotley = 2473 Whitland = 2477 WhitleyBridge = 2478 WhitlocksEnd = 2479 Whitstable = 2480 Whittlesea = 2481 WhittlesfordParkway = 2482 WhittonLondon = 2483 WhitwellDerbyshire = 2484 Whyteleafe = 2485 WhyteleafeSouth = 2486 Wick = 2487 Wickford = 2488 WickhamMarket = 2489 Widdrington = 2490 Widnes = 2491 WidneyManor = 2492 WiganNorthWestern = 2493 WiganWallgate = 2494 Wigton = 2495 Wildmill = 2496 WillesdenJunction = 2497 Williamwood = 2498 Willington = 2499 Wilmcote = 2500 Wilmslow = 2501 WilnecoteStaffs = 2502 Wimbledon = 2503 WimbledonChase = 2504 Winchelsea = 2505 Winchester = 2506 Winchfield = 2507 WinchmoreHill = 2508 Windermere = 2509 WindsorAndEtonCentral = 2510 WindsorAndEtonRiverside = 2511 Winnersh = 2512 WinnershTriangle = 2513 Winsford = 2514 Wishaw = 2515 Witham = 2516 Witley = 2517 WittonWestMidlands = 2518 Wivelsfield = 2519 Wivenhoe = 2520 WoburnSands = 2521 Woking = 2522 Wokingham = 2523 Woldingham = 2524 Wolverhampton = 2525 Wolverton = 2526 Wombwell = 2527 Woodbridge = 2530 WoodEnd = 2528 WoodgrangePark = 2531 Woodhall = 2532 Woodhouse = 2533 Woodlesford = 2534 Woodley = 2535 Woodmansterne = 2536 Woodsmoor = 2537 WoodStreet = 2529 Wool = 2538 Woolston = 2539 WoolwichArsenal = 2540 WoolwichDockyard = 2541 WoottonWawen = 2542 WorcesterForegateStreet = 2543 WorcesterPark = 2544 WorcestershireParkway = 2546 WorcesterShrubHill = 2545 Workington = 2547 Worksop = 2548 Worle = 2549 Worplesdon = 2550 Worstead = 2551 Worthing = 2552 Wrabness = 2553 Wraysbury = 2554 Wrenbury = 2555 Wressle = 2556 WrexhamCentral = 2557 WrexhamGeneral = 2558 Wye = 2559 Wylam = 2560 WyldeGreen = 2561 Wymondham = 2562 Wythall = 2563 Yalding = 2564 YardleyWood = 2565 Yarm = 2566 Yate = 2567 Yatton = 2568 Yeoford = 2569 YeovilJunction = 2570 YeovilPenMill = 2571 Yetminster = 2572 Ynyswen = 2573 Yoker = 2574 York = 2575 Yorton = 2576 YstradMynach = 2577 YstradRhondda = 2578"
  },
  "api/DarwinNet.Objects.StationBoard.html": {
    "href": "api/DarwinNet.Objects.StationBoard.html",
    "title": "Class StationBoard | Darwin.Net",
    "keywords": "Class StationBoard Namespace DarwinNet.Objects Assembly DarwinNet.dll Defines a station board located at a station public class StationBoard Inheritance object StationBoard Derived StationBoardWithDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AreServicesAvailable An optional value that indicates if services are currently available for this station board. If this value is present with the value \"false\" then no services will be returned in the service lists. This value may be set, for example, if access to a station has been closed to the public at short notice, even though the scheduled services are still running. It would be usual in such cases for one of the nrccMessages to describe why the list of services has been suppressed. public bool AreServicesAvailable { get; } Property Value bool BusServices An System.Collections.Generic.IList<T> of ServiceItem objects for the bus services appearing on the station board. If no services exist, this will contain zero items or be null. public IList<ServiceItem>? BusServices { get; } Property Value IList<ServiceItem> FerryServices An System.Collections.Generic.IList<T> of ServiceItem objects for the ferry services appearing on the station board. If no services exist, this will contain zero items or be null. public IList<ServiceItem>? FerryServices { get; } Property Value IList<ServiceItem> FilterLocationName If a filter was requested, the location name of the filter location. public string? FilterLocationName { get; } Property Value string FilterStation If a filter was requested, the Station of the filter location. public Station? FilterStation { get; } Property Value Station? FilterType If a filter was requested, the type of filter. public FilterType? FilterType { get; } Property Value FilterType? GeneratedAt The time at which the StationBoard was generated public DateTime GeneratedAt { get; } Property Value DateTime IsPlatformAvailable An optional value that indicates if platform information is available. If this value is present with the value \"true\" then platform information will be returned in the service lists. If this value is not present, or has the value \"false\", then the platform \"heading\" should be suppressed in the user interface for this station board. public bool? IsPlatformAvailable { get; } Property Value bool? LocationName The name of the location that the station board is for. public string LocationName { get; } Property Value string NrccMessages An optional list of textual messages that should be displayed with the station board. The messages are typically used to display important disruption information that applies to the location that the station board was for. public IList<string>? NrccMessages { get; } Property Value IList<string> Station The station for the station board. public Station Station { get; } Property Value Station TrainServices An System.Collections.Generic.IList<T> of ServiceItem objects for the train services appearing on the station board. If no services exist, this will contain zero items or be null. public IList<ServiceItem>? TrainServices { get; } Property Value IList<ServiceItem>"
  },
  "api/DarwinNet.Objects.StationBoardWithDetails.html": {
    "href": "api/DarwinNet.Objects.StationBoardWithDetails.html",
    "title": "Class StationBoardWithDetails | Darwin.Net",
    "keywords": "Class StationBoardWithDetails Namespace DarwinNet.Objects Assembly DarwinNet.dll Defines a station board located at a station with additional details public class StationBoardWithDetails : StationBoard Inheritance object StationBoard StationBoardWithDetails Inherited Members StationBoard.GeneratedAt StationBoard.LocationName StationBoard.Station StationBoard.FilterLocationName StationBoard.FilterStation StationBoard.FilterType StationBoard.NrccMessages StationBoard.IsPlatformAvailable object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AreServicesAvailable An optional value that indicates if services are currently available for this station board. If this value is present with the value \"false\" then no services will be returned in the service lists. This value may be set, for example, if access to a station has been closed to the public at short notice, even though the scheduled services are still running. It would be usual in such cases for one of the nrccMessages to describe why the list of services has been suppressed. public bool AreServicesAvailable { get; } Property Value bool BusServices An System.Collections.Generic.IList<T> of ServiceItemWithCallingPoints objects for the bus services appearing on the station board. If no services exist, this will contain zero items or be null. public IList<ServiceItemWithCallingPoints>? BusServices { get; } Property Value IList<ServiceItemWithCallingPoints> FerryServices An System.Collections.Generic.IList<T> of ServiceItemWithCallingPoints objects for the ferry services appearing on the station board. If no services exist, this will contain zero items or be null. public IList<ServiceItemWithCallingPoints>? FerryServices { get; } Property Value IList<ServiceItemWithCallingPoints> TrainServices An System.Collections.Generic.IList<T> of ServiceItemWithCallingPoints objects for the train services appearing on the station board. If no services exist, this will contain zero items or be null. public IList<ServiceItemWithCallingPoints>? TrainServices { get; } Property Value IList<ServiceItemWithCallingPoints>"
  },
  "api/DarwinNet.Objects.Toilet.html": {
    "href": "api/DarwinNet.Objects.Toilet.html",
    "title": "Enum Toilet | Darwin.Net",
    "keywords": "Enum Toilet Namespace DarwinNet.Objects Assembly DarwinNet.dll public enum Toilet Fields Accessible = 3 None = 1 Standard = 2 Unknown = 0"
  },
  "api/DarwinNet.Requests.html": {
    "href": "api/DarwinNet.Requests.html",
    "title": "Namespace DarwinNet.Requests | Darwin.Net",
    "keywords": "Namespace DarwinNet.Requests Classes Requests Represents a collection of methods for making requests to the Darwin API."
  },
  "api/DarwinNet.Requests.Requests.html": {
    "href": "api/DarwinNet.Requests.Requests.html",
    "title": "Class Requests | Darwin.Net",
    "keywords": "Class Requests Namespace DarwinNet.Requests Assembly DarwinNet.dll Represents a collection of methods for making requests to the Darwin API. public class Requests Inheritance object Requests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetArrivalBoardAsync(int, Station, TimeSpan, Station?, FilterType, TimeSpan?) Returns all public arrivals for the supplied station within a defined time window. public Task<StationBoard> GetArrivalBoardAsync(int numRows, Station station, TimeSpan timeWindow, Station? filterStation = null, FilterType filterType = FilterType.To, TimeSpan? timeOffset = null) Parameters numRows int The number of services to return in the resulting station board. Has to be between 0 and 150 exclusive. station Station The Station for which the request is being made. timeWindow TimeSpan How far into the past or future, in minutes (relative to timeOffset), to return services for. Has to be between -120 and 120 minutes exclusive. filterStation Station? The Station of either an origin or destination location to filter in. filterType FilterType The FilterType to apply. Filters services to include only those originating or terminating at the filterStation. Defaults to \"To\". timeOffset TimeSpan? An offset in minutes against the current time to provide the station board for. Has to be between -120 and 120 minutes exclusive. Returns Task<StationBoard> A StationBoard object containing the requested details. Exceptions System.ArgumentOutOfRangeException When numRows, timeWindow or timeOffset are out of range. GetArrivalBoardWithDetailsAsync(int, Station, TimeSpan, Station?, FilterType, TimeSpan?) Returns all public arrivals for the supplied station within a defined time window, including service details. public Task<StationBoardWithDetails> GetArrivalBoardWithDetailsAsync(int numRows, Station station, TimeSpan timeWindow, Station? filterStation = null, FilterType filterType = FilterType.To, TimeSpan? timeOffset = null) Parameters numRows int The number of services to return in the resulting station board. Has to be between 0 and 10 exclusive. station Station The Station for which the request is being made. timeWindow TimeSpan How far into the past or future, in minutes (relative to timeOffset), to return services for. Has to be between -120 and 120 minutes exclusive. filterStation Station? The Station of either an origin or destination location to filter in. filterType FilterType The FilterType to apply. Filters services to include only those originating or terminating at the filterStation. Defaults to \"To\". timeOffset TimeSpan? An offset in minutes against the current time to provide the station board for. Has to be between -120 and 120 minutes exclusive. Returns Task<StationBoardWithDetails> A StationBoardWithDetails object containing the requested details. Exceptions System.ArgumentOutOfRangeException When numRows, timeWindow or timeOffset are out of range. GetArrivalDepartureBoardAsync(int, Station, TimeSpan, Station?, FilterType, TimeSpan?) Returns all public arrivals and departures for a supplied station within a defined time window. public Task<StationBoard> GetArrivalDepartureBoardAsync(int numRows, Station station, TimeSpan timeWindow, Station? filterStation = null, FilterType filterType = FilterType.To, TimeSpan? timeOffset = null) Parameters numRows int The number of services to return in the resulting station board. Has to be between 0 and 150 exclusive. station Station The Station for which the request is being made. timeWindow TimeSpan How far into the past or future, in minutes (relative to timeOffset), to return services for. Has to be between -120 and 120 minutes exclusive. filterStation Station? The Station of either an origin or destination location to filter in. filterType FilterType The FilterType to apply. Filters services to include only those originating or terminating at the filterStation. Defaults to \"To\". timeOffset TimeSpan? An offset in minutes against the current time to provide the station board for. Has to be between -120 and 120 minutes exclusive. Returns Task<StationBoard> A StationBoard object containing the requested details. Exceptions System.ArgumentOutOfRangeException When numRows, timeWindow or timeOffset are out of range. GetArrivalDepartureBoardWithDetailsAsync(int, Station, TimeSpan, Station?, FilterType, TimeSpan?) Returns all public arrivals and departures for the supplied station within a defined time window, including service details. public Task<StationBoardWithDetails> GetArrivalDepartureBoardWithDetailsAsync(int numRows, Station station, TimeSpan timeWindow, Station? filterStation = null, FilterType filterType = FilterType.To, TimeSpan? timeOffset = null) Parameters numRows int The number of services to return in the resulting station board. Has to be between 0 and 10 exclusive. station Station The Station for which the request is being made. timeWindow TimeSpan How far into the past or future, in minutes (relative to timeOffset), to return services for. Has to be between -120 and 120 minutes exclusive. filterStation Station? The Station of either an origin or destination location to filter in. filterType FilterType The FilterType to apply. Filters services to include only those originating or terminating at the filterStation. Defaults to \"To\". timeOffset TimeSpan? An offset in minutes against the current time to provide the station board for. Has to be between -120 and 120 minutes exclusive. Returns Task<StationBoardWithDetails> A StationBoardWithDetails object containing the requested details. Exceptions System.ArgumentOutOfRangeException When numRows, timeWindow or timeOffset are out of range. GetDepartureBoardAsync(int, Station, TimeSpan, Station?, FilterType, TimeSpan?) Returns all public departures for the supplied station within a defined time window. public Task<StationBoard> GetDepartureBoardAsync(int numRows, Station station, TimeSpan timeWindow, Station? filterStation = null, FilterType filterType = FilterType.To, TimeSpan? timeOffset = null) Parameters numRows int The number of services to return in the resulting station board. Has to be between 0 and 150 exclusive. station Station The Station for which the request is being made. timeWindow TimeSpan How far into the past or future, in minutes (relative to timeOffset), to return services for. Has to be between -120 and 120 minutes exclusive. filterStation Station? The Station of either an origin or destination location to filter in. filterType FilterType The FilterType to apply. Filters services to include only those originating or terminating at the filterStation. Defaults to \"To\". timeOffset TimeSpan? An offset in minutes against the current time to provide the station board for. Has to be between -120 and 120 minutes exclusive. Returns Task<StationBoard> A StationBoard object containing the requested details. Exceptions System.ArgumentOutOfRangeException When numRows, timeWindow or timeOffset are out of range. GetDepartureBoardWithDetailsAsync(int, Station, TimeSpan, Station?, FilterType, TimeSpan?) Returns all public departures for the supplied station within a defined time window, including service details. public Task<StationBoardWithDetails> GetDepartureBoardWithDetailsAsync(int numRows, Station station, TimeSpan timeWindow, Station? filterStation = null, FilterType filterType = FilterType.To, TimeSpan? timeOffset = null) Parameters numRows int The number of services to return in the resulting station board. Has to be between 0 and 10 exclusive. station Station The Station for which the request is being made. timeWindow TimeSpan How far into the past or future, in minutes (relative to timeOffset), to return services for. Has to be between -120 and 120 minutes exclusive. filterStation Station? The Station of either an origin or destination location to filter in. filterType FilterType The FilterType to apply. Filters services to include only those originating or terminating at the filterStation. Defaults to \"To\". timeOffset TimeSpan? An offset in minutes against the current time to provide the station board for. Has to be between -120 and 120 minutes exclusive. Returns Task<StationBoardWithDetails> A StationBoardWithDetails object containing the requested details. Exceptions System.ArgumentOutOfRangeException When numRows, timeWindow or timeOffset are out of range. GetFastestDeparturesAsync(Station, IList<Station>, TimeSpan, TimeSpan?) Returns the public departure for the supplied station a defined time window to the locations specified in the filter with the earliest arrival time at the filtered location. public Task<DeparturesBoard> GetFastestDeparturesAsync(Station station, IList<Station> filterList, TimeSpan timeWindow, TimeSpan? timeOffset = null) Parameters station Station The Station for which the request is being made. filterList IList<Station> A list of Station values of the destinations location to filter. At least 1 but not greater than 15 must be supplied. timeWindow TimeSpan How far into the past or future, in minutes (relative to timeOffset), to return services for. Has to be between -120 and 120 minutes exclusive. timeOffset TimeSpan? An offset in minutes against the current time to provide the station board for. Has to be between -120 and 120 minutes exclusive. Returns Task<DeparturesBoard> A DeparturesBoard object containing the requested details. Exceptions System.ArgumentOutOfRangeException When timeWindow, filterList or timeOffset are out of range. GetFastestDeparturesWithDetailsAsync(Station, IList<Station>, TimeSpan, TimeSpan?) Returns the public departure for the supplied station a defined time window to the locations specified in the filter with the earliest arrival time at the filtered location, including service details. public Task<DeparturesBoardWithDetails> GetFastestDeparturesWithDetailsAsync(Station station, IList<Station> filterList, TimeSpan timeWindow, TimeSpan? timeOffset = null) Parameters station Station The Station for which the request is being made. filterList IList<Station> A list of Station values of the destinations location to filter. At least 1 but not greater than 10 must be supplied. timeWindow TimeSpan How far into the past or future, in minutes (relative to timeOffset), to return services for. Has to be between -120 and 120 minutes exclusive. timeOffset TimeSpan? An offset in minutes against the current time to provide the station board for. Has to be between -120 and 120 minutes exclusive. Returns Task<DeparturesBoardWithDetails> A DeparturesBoardWithDetails object containing the requested details. Exceptions System.ArgumentOutOfRangeException When timeWindow, filterList or timeOffset are out of range. GetNextDeparturesAsync(Station, IList<Station>, TimeSpan, TimeSpan?) Returns the next public departure for the supplied station within a defined time window to the locations specified in the filter. public Task<DeparturesBoard> GetNextDeparturesAsync(Station station, IList<Station> filterList, TimeSpan timeWindow, TimeSpan? timeOffset = null) Parameters station Station The Station for which the request is being made. filterList IList<Station> A list of Station values of the destinations location to filter. At least 1 but not greater than 15 must be supplied. timeWindow TimeSpan How far into the past or future, in minutes (relative to timeOffset), to return services for. Has to be between -120 and 120 minutes exclusive. timeOffset TimeSpan? An offset in minutes against the current time to provide the station board for. Has to be between -120 and 120 minutes exclusive. Returns Task<DeparturesBoard> A DeparturesBoard object containing the requested details. Exceptions System.ArgumentOutOfRangeException When timeWindow, filterList or timeOffset are out of range. GetNextDeparturesWithDetailsAsync(Station, IList<Station>, TimeSpan, TimeSpan?) Returns the next public departure for the supplied station within a defined time window to the locations specified in the filter, including service details. public Task<DeparturesBoardWithDetails> GetNextDeparturesWithDetailsAsync(Station station, IList<Station> filterList, TimeSpan timeWindow, TimeSpan? timeOffset = null) Parameters station Station The Station for which the request is being made. filterList IList<Station> A list of Station values of the destinations location to filter. At least 1 but not greater than 15 must be supplied. timeWindow TimeSpan How far into the past or future, in minutes (relative to timeOffset), to return services for. Has to be between -120 and 120 minutes exclusive. timeOffset TimeSpan? An offset in minutes against the current time to provide the station board for. Has to be between -120 and 120 minutes exclusive. Returns Task<DeparturesBoardWithDetails> A DeparturesBoardWithDetails object containing the requested details. Exceptions System.ArgumentOutOfRangeException When timeWindow, filterList or timeOffset are out of range. GetServiceDetailsAsync(string) Returns service details for a specific service identified by a station board. These details are supplied relative to the station board from which the serviceID field value was generated. Service details are only available while the service appears on the station board from which it was obtained. This is normally for two minutes after it is expected to have departed, or after a terminal arrival. public Task<ServiceDetails> GetServiceDetailsAsync(string serviceId) Parameters serviceId string The service ID of the service to request the details of. The service ID is obtained from a service listed in a StationBoard object returned from any other request. Returns Task<ServiceDetails> A ServiceDetails object containing the requested details."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "API Reference | Darwin.Net",
    "keywords": "API Reference Welcome to the Darwin.Net API documentation. You will find namespaces, and within those classes, related to Darwin.Net."
  },
  "articles/getting_started/build.html": {
    "href": "articles/getting_started/build.html",
    "title": "Build Locally | Darwin.Net",
    "keywords": "Build Locally To get a local copy built, follow these simple example steps. Obtain an API key from National Rail Enquiries Clone the repository git clone https://github.com/rhys-wootton/Darwin.Net.git Create an app.config file within the Darwin.Net project and add the following <?xml version=\"1.0\" encoding=\"utf-8\" ?> <configuration> <appSettings> <add key=\"DarwinApiKey\" value=\"YOUR_API_KEY\" /> <add key=\"DarwinUrl\" value=\"https://lite.realtime.nationalrail.co.uk/OpenLDBWS/ldb12.asmx\"/> <add key=\"DarwinActionNameUrl\" value=\"http://thalesgroup.com/RTTI/2021-11-01/ldb/\"/> <add key=\"DarwinTokenTypeUrl\" value=\"http://thalesgroup.com/RTTI/2013-11-28/Token/types\"/> </appSettings> </configuration> Build the project"
  },
  "articles/getting_started/using.html": {
    "href": "articles/getting_started/using.html",
    "title": "Using Darwin.Net | Darwin.Net",
    "keywords": "Using Darwin.Net To get started, this single line of code will give you access to all the requests that Darwin.Net can make: Darwin.Net.Darwin darwin = new Darwin.Net.Darwin(); From here, you are able to call some of the following requests: Get up to 10 arrivals at a station for the next 90 minutes int maxArrivals = 10; Station station = Station.LondonBridge; TimeSpan timeWindow = TimeSpan.FromMinutes(90); StationBoard response = await darwin.Requests.GetArrivalBoardAsync(maxArrivals, station, timeWindow); Get up to 5 departures at a station within the last hour with specific calling points int maxArrivals = 5; Station station = Station.GlasgowCentral; TimeSpan timeWindow = TimeSpan.FromMinutes(60); TimeSpan offset = TimeSpan.FromMinutes(-60); StationBoardWithDetails response = await darwin.Requests.GetDepartureBoardWithDetailsAsync(maxArrivals, station, timeWindow, timeOffset: offset); Get the next fastest services from a station to a list of station within the next 30 minutes Station station = Station.LondonEuston; List<Station> stationList = new List<Station>() { Station.Coventry, Station.WatfordJunction, Station.MiltonKeynesCentral }; TimeSpan timeWindow = TimeSpan.FromMinutes(30); DeparturesBoardWithDetails response = await darwin.Requests.GetFastestDeparturesWithDetailsAsync(station, stationList, timeWindow); Get specific services details int maxArrivals = 5; Station station = Station.GlasgowCentral; TimeSpan timeWindow = TimeSpan.FromMinutes(60); TimeSpan offset = TimeSpan.FromMinutes(-60); StationBoard response = await darwin.Requests.GetArrivalBoardAsync(maxArrivals, station, timeWindow, timeOffset: offset); ServiceDetails service = await darwin.Requests.GetServiceDetailsAsync(response.TrainServices[0].RetailServiceId);"
  },
  "articles/preamble.html": {
    "href": "articles/preamble.html",
    "title": "Preamble | Darwin.Net",
    "keywords": "Preamble To utilize this wrapper, it's essential to have a solid grasp of Object Oriented Programming, the C# programming language, and Task-based Asynchronous Pattern. It is also advised that you have a good understanding of the Darwin system used by National Rail UK, and what content it can deliver depending on what you request. If you're a beginner to C# or programming in general, using this library may pose a challenge. However, there's a wealth of resources available to help you learn the language. Microsoft offers a comprehensive page dedicated to such resources: https://dotnet.microsoft.com/en-us/learn/csharp. Supported Platforms Darwin.Net targets .NET Standard 2.1, allowing you to utilise it within many different implementations. However, support is only provided to specific platforms. Platform/Framework Supported? Notes .NET ✔️ .NET Core 3.1 and .NET 5.0 should work. .NET 6.0 LTS and .NET 7.0 are supported. .NET Framework ⚠️ .NET Framework 4.6.1 through 4.8 should work fine, though it is recommended that you use the latest or LTS version of .NET instead. Mono ❌️ Mono has numerous flaws that can break things without warning. If you need a cross-platform runtime, use .NET. Wine ❌️ Wine is a compatibility layer that allows Windows applications to run on Unix-like operating systems. It does not support .NET Standard 2.1 natively, and Darwin.Net does not provide support for it as a platform. If you aim to use Darwin.Net on a platform that isn't supported, you will find it harder to get support for any issues that may arise. Therefore, it is recommended that you use the .NET platform wherever you can, and .NET Framework as a fallback legacy option."
  },
  "index.html": {
    "href": "index.html",
    "title": "Darwin.Net Documentation | Darwin.Net",
    "keywords": "Darwin.Net Documentation Darwin.Net (D#+) is a powerful and user-friendly C# wrapper for the National Rail UK Darwin OpenLDBWS API. Getting Started New users are recommended to head over to articles for quick start guides, tutorials, and examples of use. Once you've gotten through the articles, head on over to the API Documentation for all classes and methods provided by Darwin.Net. Source and Contributors Darwin.Net is licensed under GNU Affero General Public License v3.0 License, as detailed in the license found in the repository. The repository containing the source code for this library can be found here. Contributions are welcomed."
  }
}