{
  "api/DarwinNet.Darwin.html": {
    "href": "api/DarwinNet.Darwin.html",
    "title": "Class Darwin | Darwin.Net",
    "keywords": "Class Darwin Namespace DarwinNet Assembly DarwinNet.dll Represents the main class for accessing Darwin API services. public class Darwin Inheritance object Darwin Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Darwin(string) Initializes a new instance of the Darwin class with default configurations. public Darwin(string apiKey) Parameters apiKey string Your API key to access the service Properties Requests The collection of request methods that can be used to make requests to the Darwin API. public Requests Requests { get; } Property Value Requests"
  },
  "api/DarwinNet.Exceptions.html": {
    "href": "api/DarwinNet.Exceptions.html",
    "title": "Namespace DarwinNet.Exceptions | Darwin.Net",
    "keywords": "Namespace DarwinNet.Exceptions Classes InvalidDarwinDataException The exception that is thrown when an invalid value is encountered in a Darwin response. StationCrsNullException The exception that is thrown when a CRS StringValue is not attached to a Station enumeration value."
  },
  "api/DarwinNet.Exceptions.InvalidDarwinDataException.html": {
    "href": "api/DarwinNet.Exceptions.InvalidDarwinDataException.html",
    "title": "Class InvalidDarwinDataException | Darwin.Net",
    "keywords": "Class InvalidDarwinDataException Namespace DarwinNet.Exceptions Assembly DarwinNet.dll The exception that is thrown when an invalid value is encountered in a Darwin response. public class InvalidDarwinDataException : Exception, ISerializable Inheritance object Exception InvalidDarwinDataException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InvalidDarwinDataException(string) Initializes a new instance of the InvalidDarwinDataException class with a specified parameter. public InvalidDarwinDataException(string param) Parameters param string The name of the parameter that contains an invalid value."
  },
  "api/DarwinNet.Exceptions.StationCrsNullException.html": {
    "href": "api/DarwinNet.Exceptions.StationCrsNullException.html",
    "title": "Class StationCrsNullException | Darwin.Net",
    "keywords": "Class StationCrsNullException Namespace DarwinNet.Exceptions Assembly DarwinNet.dll The exception that is thrown when a CRS StringValue is not attached to a Station enumeration value. public class StationCrsNullException : Exception, ISerializable Inheritance object Exception StationCrsNullException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StationCrsNullException(Station) Initializes a new instance of the StationCrsNullException class with a specified Station enumeration value. public StationCrsNullException(Station station) Parameters station Station The Station enumeration value that does not have a CRS StringValue. StationCrsNullException(Station?) Initializes a new instance of the StationCrsNullException class with a nullable Station enumeration value. public StationCrsNullException(Station? station) Parameters station Station? The nullable Station enumeration value that does not have a CRS StringValue."
  },
  "api/DarwinNet.html": {
    "href": "api/DarwinNet.html",
    "title": "Namespace DarwinNet | Darwin.Net",
    "keywords": "Namespace DarwinNet Classes Darwin Represents the main class for accessing Darwin API services."
  },
  "api/DarwinNet.Objects.CallingPoint.html": {
    "href": "api/DarwinNet.Objects.CallingPoint.html",
    "title": "Class CallingPoint | Darwin.Net",
    "keywords": "Class CallingPoint Namespace DarwinNet.Objects Assembly DarwinNet.dll Defines a calling point of a station in a journey public class CallingPoint Inheritance object CallingPoint Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ActualTime The estimated time of the service at this location. The time will be either an arrival or departure time, depending on whether it is in the subsequent or previous calling point list. Will only be present if EstimatedTime is not present. public (string? Text, DateTime? Time)? ActualTime { get; } Property Value (string Text, DateTime? Time)? AdhocAlerts A list of Adhoc Alerts (strings) for this CallingPoint. If there are no alerts, it will be null. public IList<string>? AdhocAlerts { get; } Property Value IList<string> DoesTrainDetachAtFront True if the service detaches units from the front at this location. public bool? DoesTrainDetachAtFront { get; } Property Value bool? EstimatedTime The estimated time of the service at this location. The time will be either an arrival or departure time, depending on whether it is in the subsequent or previous calling point list. Will only be present if ActualTime is not present. public (string? Text, DateTime? Time)? EstimatedTime { get; } Property Value (string Text, DateTime? Time)? IsCancelled A flag to indicate that this service is cancelled at this location. public bool? IsCancelled { get; } Property Value bool? LocationName The display name of this location. public string LocationName { get; } Property Value string ScheduleTime The scheduled time of the service at this location. The time will be either an arrival or departure time, depending on whether it is in the subsequent or previous calling point list. public (string? Text, DateTime? Time)? ScheduleTime { get; } Property Value (string Text, DateTime? Time)? Station The station the train is scheduled at public Station Station { get; } Property Value Station TrainLength The train length (number of units) at this location. If not supplied, or zero, the length is unknown. public int? TrainLength { get; } Property Value int?"
  },
  "api/DarwinNet.Objects.CoachClass.html": {
    "href": "api/DarwinNet.Objects.CoachClass.html",
    "title": "Enum CoachClass | Darwin.Net",
    "keywords": "Enum CoachClass Namespace DarwinNet.Objects Assembly DarwinNet.dll public enum CoachClass Fields First = 0 Mixed = 1 Standard = 2"
  },
  "api/DarwinNet.Objects.CoachData.html": {
    "href": "api/DarwinNet.Objects.CoachData.html",
    "title": "Class CoachData | Darwin.Net",
    "keywords": "Class CoachData Namespace DarwinNet.Objects Assembly DarwinNet.dll Provides details about a specific coach on a train public class CoachData Inheritance object CoachData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CoachClass The class of coach, where known. First, Mixed or Standard. Other classes may be introduced in the future. public CoachClass CoachClass { get; } Property Value CoachClass CoachNumber The number/identifier for this coach, e.g. \"A\" or \"12\". Maximum of two characters. public string CoachNumber { get; } Property Value string Loading The loading value (0-100) for the coach. public int? Loading { get; } Property Value int? LoadingSpecified Specifies whether loading has been specified or not. public bool? LoadingSpecified { get; } Property Value bool? Toilet A Toilet enum representing a toilet on a coach public Toilet? Toilet { get; } Property Value Toilet?"
  },
  "api/DarwinNet.Objects.DepartureItem.html": {
    "href": "api/DarwinNet.Objects.DepartureItem.html",
    "title": "Class DepartureItem | Darwin.Net",
    "keywords": "Class DepartureItem Namespace DarwinNet.Objects Assembly DarwinNet.dll Defines a departure item for a train public class DepartureItem Inheritance object DepartureItem Derived DepartureItemWithCallingPoints Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Services A IList<T> of ServiceItem related to the Station. public IList<ServiceItem> Services { get; } Property Value IList<ServiceItem> Station The station that the DepartureItem represents public Station Station { get; } Property Value Station"
  },
  "api/DarwinNet.Objects.DepartureItemWithCallingPoints.html": {
    "href": "api/DarwinNet.Objects.DepartureItemWithCallingPoints.html",
    "title": "Class DepartureItemWithCallingPoints | Darwin.Net",
    "keywords": "Class DepartureItemWithCallingPoints Namespace DarwinNet.Objects Assembly DarwinNet.dll Defines a departure item for a train public class DepartureItemWithCallingPoints : DepartureItem Inheritance object DepartureItem DepartureItemWithCallingPoints Inherited Members DepartureItem.Station object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Services A IList<T> of ServiceItemWithCallingPoints related to the Station. public IList<ServiceItemWithCallingPoints> Services { get; } Property Value IList<ServiceItemWithCallingPoints>"
  },
  "api/DarwinNet.Objects.DeparturesBoard.html": {
    "href": "api/DarwinNet.Objects.DeparturesBoard.html",
    "title": "Class DeparturesBoard | Darwin.Net",
    "keywords": "Class DeparturesBoard Namespace DarwinNet.Objects Assembly DarwinNet.dll Defines a departure board for a station public class DeparturesBoard Inheritance object DeparturesBoard Derived DeparturesBoardWithDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AreServicesAvailable An optional value that indicates if services are currently available for this station board. If this value is present with the value \"false\" then no services will be returned in the service lists. This value may be set, for example, if access to a station has been closed to the public at short notice, even though the scheduled services are still running. It would be usual in such cases for one of the nrccMessages to describe why the list of services has been suppressed. public bool AreServicesAvailable { get; } Property Value bool Departures An IList<T> of DepartureItem for each service that is to appear on the departures board. A DepartureItem will exist for each CRS code requested in the filter but if no information is available the ServiceItem part will be empty. public IList<DepartureItem> Departures { get; } Property Value IList<DepartureItem> FilterLocationName If a filter was requested, the location name of the filter location. public string? FilterLocationName { get; } Property Value string FilterStation If a filter was requested, the CRS code of the filter location. public Station? FilterStation { get; } Property Value Station? FilterType If a filter was requested, the type of filter. public FilterType? FilterType { get; } Property Value FilterType? GeneratedAt The time at which the DeparturesBoard was generated public DateTime GeneratedAt { get; } Property Value DateTime IsPlatformAvailable An optional value that indicates if platform information is available. If this value is present with the value \"true\" then platform information will be returned in the service lists. If this value is not present, or has the value \"false\", then the platform \"heading\" should be suppressed in the user interface for this station board. public bool? IsPlatformAvailable { get; } Property Value bool? LocationName The name of the location that the station board is for. public string LocationName { get; } Property Value string NrccMessages An optional list of textual messages that should be displayed with the station board. public IList<string>? NrccMessages { get; } Property Value IList<string> Station The station in the departures board. public Station Station { get; } Property Value Station"
  },
  "api/DarwinNet.Objects.DeparturesBoardWithDetails.html": {
    "href": "api/DarwinNet.Objects.DeparturesBoardWithDetails.html",
    "title": "Class DeparturesBoardWithDetails | Darwin.Net",
    "keywords": "Class DeparturesBoardWithDetails Namespace DarwinNet.Objects Assembly DarwinNet.dll Defines a departure board for station with additional details public class DeparturesBoardWithDetails : DeparturesBoard Inheritance object DeparturesBoard DeparturesBoardWithDetails Inherited Members DeparturesBoard.GeneratedAt DeparturesBoard.LocationName DeparturesBoard.Station DeparturesBoard.FilterLocationName DeparturesBoard.FilterStation DeparturesBoard.FilterType DeparturesBoard.NrccMessages DeparturesBoard.IsPlatformAvailable DeparturesBoard.AreServicesAvailable object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Departures An IList<T> of DepartureItemWithCallingPoints for each service that is to appear on the departures board. A DepartureItemWithCallingPoints will exist for each CRS code requested in the filter but if no information is available the ServiceItemWithCallingPoints part will be empty. public IList<DepartureItemWithCallingPoints> Departures { get; } Property Value IList<DepartureItemWithCallingPoints>"
  },
  "api/DarwinNet.Objects.FilterType.html": {
    "href": "api/DarwinNet.Objects.FilterType.html",
    "title": "Enum FilterType | Darwin.Net",
    "keywords": "Enum FilterType Namespace DarwinNet.Objects Assembly DarwinNet.dll public enum FilterType Fields From = 1 To = 0"
  },
  "api/DarwinNet.Objects.FormationData.html": {
    "href": "api/DarwinNet.Objects.FormationData.html",
    "title": "Class FormationData | Darwin.Net",
    "keywords": "Class FormationData Namespace DarwinNet.Objects Assembly DarwinNet.dll Provides details about the formation of a train public class FormationData Inheritance object FormationData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Coaches A collection of CoachData objects related to this formation. public IList<CoachData> Coaches { get; } Property Value IList<CoachData>"
  },
  "api/DarwinNet.Objects.html": {
    "href": "api/DarwinNet.Objects.html",
    "title": "Namespace DarwinNet.Objects | Darwin.Net",
    "keywords": "Namespace DarwinNet.Objects Classes CallingPoint Defines a calling point of a station in a journey CoachData Provides details about a specific coach on a train DepartureItem Defines a departure item for a train DepartureItemWithCallingPoints Defines a departure item for a train DeparturesBoard Defines a departure board for a station DeparturesBoardWithDetails Defines a departure board for station with additional details FormationData Provides details about the formation of a train ServiceDetails Defines a service details response ServiceItem Defines a service item ServiceItemWithCallingPoints Defines a train service with lists of CallingPoint ServiceLocation Provides a service location for a train. StationBoard Defines a station board located at a station StationBoardWithDetails Defines a station board located at a station with additional details Enums CoachClass FilterType ServiceType Station Toilet"
  },
  "api/DarwinNet.Objects.ServiceDetails.html": {
    "href": "api/DarwinNet.Objects.ServiceDetails.html",
    "title": "Class ServiceDetails | Darwin.Net",
    "keywords": "Class ServiceDetails Namespace DarwinNet.Objects Assembly DarwinNet.dll Defines a service details response public class ServiceDetails Inheritance object ServiceDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ActualTimeArrival An optional DateTime specifying the Actual Time of Arrival (ATA) of the service at the station board location. public (string? Text, DateTime? Time)? ActualTimeArrival { get; } Property Value (string Text, DateTime? Time)? ActualTimeDeparture An optional DateTime specifying the Actual Time of Departure (ATD) of the service at the station board location. public (string? Text, DateTime? Time)? ActualTimeDeparture { get; } Property Value (string Text, DateTime? Time)? AdhocAlerts A list of Adhoc Alerts (strings) for this CallingPoint. If there are no alerts, it will be null. public IList<string>? AdhocAlerts { get; } Property Value IList<string> CancellationReason A cancellation reason for this service. public string? CancellationReason { get; } Property Value string DelayReason A delay reason for this service. public string? DelayReason { get; } Property Value string DiversionReason The reason for a diversion. public string? DiversionReason { get; } Property Value string DivertedVia The location of the diversion. public string? DivertedVia { get; } Property Value string DoesTrainDetachAtFront True if the service detaches units from the front at this location. public bool? DoesTrainDetachAtFront { get; } Property Value bool? EstimatedTimeArrival An optional DateTime specifying the Estimated Time of Arrival (ETA) of the service at the station board location. public (string? Text, DateTime? Time)? EstimatedTimeArrival { get; } Property Value (string Text, DateTime? Time)? EstimatedTimeDeparture An optional DateTime specifying the Estimated Time of Departure (ETD) of the service at the station board location. public (string? Text, DateTime? Time)? EstimatedTimeDeparture { get; } Property Value (string Text, DateTime? Time)? Formation Contains FormationData for this ServiceDetails, if any. public FormationData? Formation { get; } Property Value FormationData GeneratedAt The time at which the ServiceDetails was generated public DateTime GeneratedAt { get; } Property Value DateTime IsCancelled A flag to indicate that this service is cancelled at this location. public bool IsCancelled { get; } Property Value bool IsReverseFormation True if the service is operating in the reverse of its normal formation. public bool? IsReverseFormation { get; } Property Value bool? LocationName The display name of the departure board location that these service details were accessed from. public string LocationName { get; } Property Value string Operator The name of the Train Operating Company that operates the service. public string Operator { get; } Property Value string OperatorCode The code of the Train Operating Company that operates the service. public string OperatorCode { get; } Property Value string OverdueMessage If an expected movement report has been missed, this will contain a message describing the missed movement. public string? OverdueMessage { get; } Property Value string Platform An optional platform number for the service at this location. This will only be present where available and where IsPlatformAvailable value is \"true\". public string? Platform { get; } Property Value string PreviousCallingPoints An IList<T> of IList<T> of previous CallingPoint objects relative to the location of this service. public IList<IList<CallingPoint>>? PreviousCallingPoints { get; } Property Value IList<IList<CallingPoint>> RetailServiceId The Retail Service ID of the service, if known. public string? RetailServiceId { get; } Property Value string ScheduledTimeArrival An optional DateTime specifying the Scheduled Time of Arrival (STA) of the service at the station board location. public (string? Text, DateTime? Time)? ScheduledTimeArrival { get; } Property Value (string Text, DateTime? Time)? ScheduledTimeDeparture An optional DateTime specifying the Scheduled Time of Departure (STD) of the service at the station board location. public (string? Text, DateTime? Time)? ScheduledTimeDeparture { get; } Property Value (string Text, DateTime? Time)? ServiceType The type of service (train, bus, ferry) that this item represents. Note that real-time information (e.g. eta, etd, ata, atd, etc.) is only available and present for train services. public ServiceType ServiceType { get; } Property Value ServiceType Station The station in the service details. public Station Station { get; } Property Value Station SubsequentCallingPoints An IList<T> of IList<T> of subsequent CallingPoint objects relative to the location of this service. public IList<IList<CallingPoint>>? SubsequentCallingPoints { get; } Property Value IList<IList<CallingPoint>> TrainLength The train length (number of units) at this location. If not supplied, or zero, the length is unknown. public int? TrainLength { get; } Property Value int?"
  },
  "api/DarwinNet.Objects.ServiceItem.html": {
    "href": "api/DarwinNet.Objects.ServiceItem.html",
    "title": "Class ServiceItem | Darwin.Net",
    "keywords": "Class ServiceItem Namespace DarwinNet.Objects Assembly DarwinNet.dll Defines a service item public class ServiceItem Inheritance object ServiceItem Derived ServiceItemWithCallingPoints Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AdhocAlerts A list of Adhoc Alerts (strings) for this CallingPoint. If there are no alerts, it will be null. public IList<string>? AdhocAlerts { get; } Property Value IList<string> CancellationReason A cancellation reason for this service. public string? CancellationReason { get; } Property Value string CurrentDestinations An optional IList<T> of ServiceLocation giving live/current destinations of this service which is not starting at original cancelled destinations. public IList<ServiceLocation>? CurrentDestinations { get; } Property Value IList<ServiceLocation> CurrentOrigins An optional IList<T> of ServiceLocation giving live/current origins of this service which is not starting at original cancelled origins. public IList<ServiceLocation>? CurrentOrigins { get; } Property Value IList<ServiceLocation> DelayReason A delay reason for this service. public string? DelayReason { get; } Property Value string Destination A IList<T> of ServiceLocation giving original destinations of this service. public IList<ServiceLocation> Destination { get; } Property Value IList<ServiceLocation> DoesTrainDetachAtFront True if the service detaches units from the front at this location. public bool? DoesTrainDetachAtFront { get; } Property Value bool? EstimatedTimeArrival An optional Tuple of string and DateTime specifying the Estimated Time of Arrival (ETA) of the service at the station board location. If not null, one of the value is present. public (string? Text, DateTime? Time)? EstimatedTimeArrival { get; } Property Value (string Text, DateTime? Time)? EstimatedTimeDeparture An optional Tuple of string and DateTime specifying the Estimated Time of Departure (ETD) of the service at the station board location. If not null, one of the value is present. public (string? Text, DateTime? Time)? EstimatedTimeDeparture { get; } Property Value (string Text, DateTime? Time)? FilterLocationCancelled A flag to indicate that this service is cancelled at this location. public bool? FilterLocationCancelled { get; } Property Value bool? Formation Contains FormationData for this ServiceItem, if any. public FormationData? Formation { get; } Property Value FormationData IsCircularRoute If this value is present and has the value \"true\" then the service is operating on a circular route through the network and will call again at this location later on its journey. public bool? IsCircularRoute { get; } Property Value bool? IsReverseFormation True if the service is operating in the reverse of its normal formation. public bool? IsReverseFormation { get; } Property Value bool? Operator S The name of the Train Operating Company that operates the service. public string Operator { get; } Property Value string OperatorCode The code of the Train Operating Company that operates the service. public string OperatorCode { get; } Property Value string Origin A IList<T> of ServiceLocation giving original origins of this service. public IList<ServiceLocation> Origin { get; } Property Value IList<ServiceLocation> Platform An optional platform number for the service at this location. This will only be present where available and where the IsPlatformAvailable value is \"true\". public string? Platform { get; } Property Value string RetailServiceId The Retail Service ID of the service, if known. public string? RetailServiceId { get; } Property Value string ScheduledTimeArrival An optional Tuple of string and DateTime specifying the Scheduled Time of Arrival (STA) of the service at the station board location. If not null, one of the value is present. public (string? Text, DateTime? Time)? ScheduledTimeArrival { get; } Property Value (string Text, DateTime? Time)? ScheduledTimeDeparture An optional Tuple of string and DateTime specifying the Scheduled Time of Departure (STD) of the service at the station board location. If not null, one of the value is present. public (string? Text, DateTime? Time)? ScheduledTimeDeparture { get; } Property Value (string Text, DateTime? Time)? ServiceId The unique service identifier of this service relative to the station board on which it is displayed. This value can be passed to GetServiceDetails to obtain the full details of the individual service. public string ServiceId { get; } Property Value string ServiceType The type of service (train, bus, ferry) that this item represents. Note that real-time information (e.g. eta, etd, ata, atd, etc.) is only available and present for train services. public ServiceType ServiceType { get; } Property Value ServiceType TrainLength The train length (number of units) at this location. If not supplied, or zero, the length is unknown. public int? TrainLength { get; } Property Value int?"
  },
  "api/DarwinNet.Objects.ServiceItemWithCallingPoints.html": {
    "href": "api/DarwinNet.Objects.ServiceItemWithCallingPoints.html",
    "title": "Class ServiceItemWithCallingPoints | Darwin.Net",
    "keywords": "Class ServiceItemWithCallingPoints Namespace DarwinNet.Objects Assembly DarwinNet.dll Defines a train service with lists of CallingPoint public class ServiceItemWithCallingPoints : ServiceItem Inheritance object ServiceItem ServiceItemWithCallingPoints Inherited Members ServiceItem.RetailServiceId ServiceItem.Origin ServiceItem.Destination ServiceItem.CurrentOrigins ServiceItem.CurrentDestinations ServiceItem.ScheduledTimeArrival ServiceItem.EstimatedTimeArrival ServiceItem.ScheduledTimeDeparture ServiceItem.EstimatedTimeDeparture ServiceItem.Platform ServiceItem.Operator ServiceItem.OperatorCode ServiceItem.IsCircularRoute ServiceItem.FilterLocationCancelled ServiceItem.ServiceType ServiceItem.TrainLength ServiceItem.DoesTrainDetachAtFront ServiceItem.IsReverseFormation ServiceItem.CancellationReason ServiceItem.DelayReason ServiceItem.ServiceId ServiceItem.AdhocAlerts ServiceItem.Formation object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties PreviousCallingPoints A IList<T> of previous CallingPoint objects relative to the location of this service. public IList<CallingPoint>? PreviousCallingPoints { get; } Property Value IList<CallingPoint> SubsequentCallingPoints A IList<T> of subsequent CallingPoint objects relative to the location of this service. public IList<CallingPoint>? SubsequentCallingPoints { get; } Property Value IList<CallingPoint>"
  },
  "api/DarwinNet.Objects.ServiceLocation.html": {
    "href": "api/DarwinNet.Objects.ServiceLocation.html",
    "title": "Class ServiceLocation | Darwin.Net",
    "keywords": "Class ServiceLocation Namespace DarwinNet.Objects Assembly DarwinNet.dll Provides a service location for a train. public class ServiceLocation Inheritance object ServiceLocation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AssocIsCancelled Defines if the origin or destination can no longer be reached because the association has been cancelled. public bool? AssocIsCancelled { get; } Property Value bool? FutureChangeTo A ServiceType specifying service type (Bus/Ferry/Train) to which will be changed in the future. public ServiceType? FutureChangeTo { get; } Property Value ServiceType? LocationName The name of the location that the station board is for. public string LocationName { get; } Property Value string Station The station in the service location. public Station Station { get; } Property Value Station Via An optional via string that should be displayed after the location, to indicate further information about an ambiguous route. Note that vias are only present for ServiceLocation objects that appear in destination lists. public string? Via { get; } Property Value string"
  },
  "api/DarwinNet.Objects.ServiceType.html": {
    "href": "api/DarwinNet.Objects.ServiceType.html",
    "title": "Enum ServiceType | Darwin.Net",
    "keywords": "Enum ServiceType Namespace DarwinNet.Objects Assembly DarwinNet.dll public enum ServiceType Fields Bus = 0 Ferry = 1 Train = 2"
  },
  "api/DarwinNet.Objects.Station.html": {
    "href": "api/DarwinNet.Objects.Station.html",
    "title": "Enum Station | Darwin.Net",
    "keywords": "Enum Station Namespace DarwinNet.Objects Assembly DarwinNet.dll public enum Station Fields AbbeyWood = 0 Aber = 1 Abercynon = 2 Aberdare = 3 Aberdeen = 4 Aberdour = 5 Aberdovey = 6 Abererch = 7 Abergavenny = 8 AbergelePensarn = 9 Aberystwyth = 10 AbingdonBus = 11 Accrington = 12 Achanalt = 13 Achnasheen = 14 Achnashellach = 15 Acklington = 16 Acle = 17 AcocksGreen = 18 ActonBridge = 19 ActonCentral = 20 ActonMainLine = 21 AdderleyPark = 22 Addiewell = 23 Addlestone = 24 Adisham = 25 AdlingtonCheshire = 26 AdlingtonLancashire = 27 Adwick = 28 Aigburth = 29 Ainsdale = 30 Aintree = 31 Airbles = 32 Airdrie = 33 AlbanyPark = 34 Albrighton = 35 AlderleyEdge = 36 Aldermaston = 37 Aldershot = 38 Aldrington = 39 AlexandraPalace = 40 AlexandraParade = 41 Alexandria = 42 Alfreton = 43 AllensWest = 44 Alloa = 45 Alness = 46 Alnmouth = 47 Alresford = 48 Alsager = 49 Althorne = 50 Althorpe = 51 Altnabreac = 52 Alton = 53 AltonTowersBus = 54 Altrincham = 55 Alvechurch = 56 Ambergate = 57 Amberley = 58 Amersham = 59 Ammanford = 60 AmpfieldSchoolBus = 61 AmsterdamCs = 62 Ancaster = 63 Anderston = 64 Andover = 65 Anerley = 66 AngelRoad = 67 Angmering = 68 Annan = 69 Anniesland = 70 AnsdellFairhaven = 71 ApperleyBridge = 72 Appleby = 73 AppledoreKent = 74 Appleford = 75 AppleyBridge = 76 Apsley = 77 Arbroath = 78 Ardgay = 79 Ardlui = 80 ArdrossanHarbour = 81 ArdrossanSouthBeach = 82 ArdrossanTown = 83 Ardwick = 84 ArgyleStreet = 85 Arisaig = 86 Arlesey = 87 Armadale = 88 ArmadaleBus = 89 Armathwaite = 90 Arnside = 91 Arram = 92 ArrocharTarbet = 93 Arundel = 94 Ascot = 95 AscottUnderWychwood = 96 Ash = 97 Ashburys = 99 AshchurchForTewkesbury = 100 Ashfield = 101 AshfordInternational = 103 AshfordSurrey = 102 Ashley = 104 Ashtead = 105 AshtonUnderLyne = 106 Ashurst = 107 AshurstNewForest = 108 AshVale = 98 AshwellMorden = 109 Askam = 110 Aslockton = 111 Aspatria = 112 AspleyGuise = 113 Aston = 114 Atherstone = 115 Atherton = 116 Attadale = 117 Attenborough = 118 AttercliffeTram = 119 Attleborough = 120 Auchinleck = 121 AudleyEnd = 122 AughtonPark = 123 AveburyBus = 124 Aviemore = 125 Avignon = 126 Avoncliff = 127 Avonmouth = 128 Axminster = 129 Aylesbury = 130 AylesburyValeParkway = 131 Aylesford = 132 Aylesham = 133 Ayr = 134 Bache = 135 Baglan = 136 Bagshot = 137 Baildon = 138 Baillieston = 139 BakerStreetUnderground = 140 BakewellBus = 141 Balcombe = 142 Baldock = 143 Balham = 144 Balloch = 145 Balmossie = 146 BamberBridge = 147 Bamford = 148 Banavie = 149 Banbury = 150 BangorGwynedd = 151 BankHall = 152 Banstead = 153 Barassie = 154 BarbicanUnderground = 155 BardonMill = 156 BareLane = 157 Bargeddie = 158 Bargoed = 159 Barking = 160 BarkingRiverside = 161 BarkingUnderground = 162 Barlaston = 163 BarlastonOrchardPlaceBus = 164 Barming = 165 Barmouth = 166 Barnehurst = 167 Barnes = 168 BarnesBridge = 169 Barnetby = 170 Barnham = 171 Barnhill = 172 Barnsley = 173 BarnsleyBus = 174 Barnstaple = 175 BarntGreen = 176 BaronsCourtUnderground = 177 Barrhead = 178 Barrhill = 179 BarrowHaven = 180 BarrowInFurness = 181 BarrowUponSoar = 182 Barry = 183 BarryDocks = 184 BarryIsland = 185 BarryLinks = 186 BartonOnHumber = 187 Basildon = 188 Basingstoke = 189 BatBall = 190 BathBusStation = 191 Bathgate = 193 BathSpa = 192 Batley = 194 Battersby = 195 BatterseaPark = 196 Battle = 197 Battlesbridge = 198 Bayford = 199 Beaconsfield = 200 Bearley = 201 Bearsden = 202 Bearsted = 203 Beasdale = 204 BeaulieuRoad = 205 Beauly = 206 Bebington = 207 Beccles = 208 BeckenhamHill = 209 BeckenhamJunction = 210 Bedford = 211 BedfordBus = 212 BedfordStJohns = 213 Bedhampton = 214 Bedminster = 215 Bedworth = 216 Bedwyn = 217 Beeston = 218 Bekesbourne = 219 BelfastDonegallQuayBus = 220 BelfastPort = 221 BelleVue = 222 Bellgrove = 223 Bellingham = 224 Bellshill = 225 Belmont = 226 Belper = 227 Beltring = 228 Belvedere = 229 Bempton = 230 Benfleet = 232 BenRhydding = 231 Bentham = 233 BentleyHampshire = 234 BentleySouthYorkshire = 235 BentonTWMetro = 236 BereAlston = 237 BereFerrers = 238 Berkhamsted = 239 Berkswell = 240 BermudaParkNuneaton = 241 BerneyArms = 242 BerryBrow = 243 Berrylands = 244 BerwickSussex = 245 BerwickUponTweed = 246 BescarLane = 247 BescotStadium = 248 Betchworth = 249 BethnalGreen = 250 BetwsYCoed = 251 Beverley = 252 Bexhill = 253 Bexley = 254 Bexleyheath = 255 BicesterBus = 256 BicesterNorth = 257 BicesterVillage = 258 Bickley = 259 Bidston = 260 Biggleswade = 261 Bilbrook = 262 Billericay = 263 Billingham = 264 Billingshurst = 265 Bingham = 266 Bingley = 267 Birchgrove = 268 BirchingtonOnSea = 269 Birchwood = 270 Birkbeck = 271 Birkdale = 272 BirkenheadCentral = 273 BirkenheadNorth = 274 BirkenheadPark = 275 BirminghamAirportBus = 276 BirminghamInternational = 277 BirminghamMoorStreet = 278 BirminghamNecBus = 279 BirminghamNewStreet = 280 BirminghamSnowHill = 281 BishopAuckland = 282 Bishopbriggs = 283 BishopsLydeard = 284 BishopsLydeardBus = 285 BishopsStortford = 286 Bishopstone = 287 Bishopton = 288 Bitterne = 289 Blackburn = 290 Blackheath = 291 BlackhorseRoad = 292 BlackpoolNorth = 293 BlackpoolPleasureBeach = 294 BlackpoolSouth = 295 Blackridge = 296 Blackrod = 297 Blackwater = 298 BlackwoodBus = 299 BlaenauFfestiniog = 300 BlairAtholl = 301 Blairhill = 302 Blakedown = 304 BlakeStreet = 303 Blantyre = 305 Blaydon = 306 Bleasby = 307 Bletchley = 308 Bloxwich = 309 BloxwichNorth = 310 BlundellsandsCrosby = 311 BlytheBridge = 312 BoatOfGartenPostOffBus = 313 BodminParkway = 314 BodminTsbBankBus = 315 Bodorgan = 316 BognorRegis = 317 Bogston = 318 Bolton = 319 BoltonOnDearne = 320 BondStreet = 321 Bookham = 322 Bootle = 323 BootleNewStrand = 324 BootleOrielRoad = 325 Bordesley = 326 BordonCampBus = 327 BoroughGreenWrotham = 328 Borth = 329 Bosham = 330 Boston = 331 Botley = 332 Bottesford = 333 BourgStMaurice = 334 BourneEnd = 335 Bournemouth = 336 BournemouthHurnAirportBus = 337 Bournville = 338 BowBrickhill = 339 BowesPark = 341 Bowling = 342 BowStreet = 340 BoxhillWesthumble = 343 Bracknell = 344 BradfordForsterSquare = 345 BradfordInterchange = 346 BradfordOnAvon = 347 Brading = 348 Braintree = 349 BraintreeFreeport = 350 Bramhall = 351 BramleyHampshire = 352 BramleyWestYorkshire = 353 BramptonCumbria = 354 BramptonSuffolk = 355 Branchton = 356 Brandon = 357 Branksome = 358 Braystones = 359 BreconSquareBus = 360 Bredbury = 361 Breich = 362 BrentCrossWest = 363 Brentford = 364 Brentwood = 365 BricketWood = 366 Bridgend = 369 BridgeOfAllan = 367 BridgeOfOrchy = 368 Bridgeton = 370 Bridgwater = 371 Bridlington = 372 Brierfield = 373 Brigg = 374 Brighouse = 375 Brighton = 376 Brimsdown = 377 Brinnington = 378 BristolIntlAirportBus = 379 BristolParkway = 380 BristolTempleGateBus = 381 BristolTempleMeads = 382 Brithdir = 383 BritishSteelRedcar = 384 BritonFerry = 385 Brixton = 386 Broadbottom = 388 BroadGreen = 387 Broadstairs = 389 Brockenhurst = 390 Brockholes = 391 Brockley = 392 BrockleyWhinsTWMetro = 393 BrodickBus = 394 Bromborough = 395 BromboroughRake = 396 BromleyCross = 397 BromleyNorth = 398 BromleySouth = 399 Bromsgrove = 400 Brondesbury = 401 BrondesburyPark = 402 BrookmansPark = 403 Brookwood = 404 Broome = 405 Broomfleet = 406 Brora = 407 Brough = 408 BroughtyFerry = 409 Broxbourne = 410 BruceGrove = 411 Brundall = 412 BrundallGardens = 413 Brunstane = 414 Brunswick = 415 BrusselsMidi = 416 Bruton = 417 Bryn = 418 Buckenham = 419 BuckinghamBus = 420 Buckley = 421 Bucknell = 422 BuckshawParkway = 423 BudeStrandBus = 424 Bugle = 425 BuilthRoad = 426 Bulwell = 427 Bures = 428 BurgessHill = 429 BurleyInWharfedale = 431 BurleyPark = 430 Burnage = 432 Burneside = 433 Burnham = 434 BurnhamMarketBus = 435 BurnhamOnCrouch = 436 BurnleyBarracks = 437 BurnleyCentral = 438 BurnleyManchesterRoad = 439 Burnside = 440 Burntisland = 441 BurscoughBridge = 442 BurscoughJunction = 443 Bursledon = 444 BurtonJoyce = 445 BurtonOnTrent = 446 BuryMetrolinkBus = 447 BuryStEdmunds = 448 Busby = 449 Bushey = 451 BushHillPark = 450 ButlersLane = 452 Buxted = 453 Buxton = 454 BuxtonBus = 455 ByfleetNewHaw = 456 Bynea = 457 Cadoxton = 458 CaerauParkBus = 459 CaerauSquareBus = 460 Caergwrle = 461 Caerphilly = 462 Caersws = 463 CairnyanPort = 464 CalaisFrethun = 465 Caldercruix = 466 Caldicot = 467 CaledonianRdBarnsbury = 468 CallingtonBus = 469 CalneBus = 470 Calstock = 471 Camberley = 473 Camborne = 474 Cambridge = 475 CambridgeBus = 476 CambridgeHeath = 477 CambridgeNorth = 478 Cambuslang = 479 CamdenRoad = 480 CamDursley = 472 Camelon = 481 CanadaWater = 482 CanaryWharfElizabethLine = 483 Canley = 484 CannaBus = 485 Cannock = 486 Canonbury = 487 CanterburyEast = 488 CanterburyWest = 489 Cantley = 490 Capenhurst = 491 CarbisBay = 492 CarbrookTram = 493 Cardenden = 494 CardiffBay = 495 CardiffCentral = 496 CardiffCentralBusStn = 497 CardiffIntlAirportBus = 498 CardiffQueenStreet = 499 Cardonald = 500 Cardross = 501 Carfin = 502 Cark = 503 Carlisle = 504 Carlton = 505 Carluke = 506 Carmarthen = 507 Carmyle = 508 Carnforth = 509 Carnoustie = 510 Carntyne = 511 CarpendersPark = 512 Carrbridge = 513 Carshalton = 514 CarshaltonBeeches = 515 Carstairs = 516 Cartsdyke = 517 CastleBarPark = 518 CastlebayBarraBus = 522 CastleCary = 519 Castleford = 523 CastleHowardBus = 520 CastleSquareTram = 521 Castleton = 524 CastletonMoor = 525 Caterham = 526 Catford = 527 CatfordBridge = 528 Cathays = 529 Cathcart = 530 Cattal = 531 CatterickCampCentreBus = 532 CatterickGarrisonBus = 533 CatterickGarrisonTescoBus = 534 Causeland = 535 CefnYBedd = 536 ChadwellHeath = 537 ChaffordHundred = 538 ChalfontLatimer = 539 Chalkwell = 540 ChandlersFord = 541 ChapelEnLeFrith = 542 Chapeltown = 543 Chapleton = 544 ChappelWakesColne = 545 Charing = 546 CharingCrossGlasgow = 547 Charlbury = 548 Charlton = 549 Chartham = 550 ChassenRoad = 551 Chatelherault = 552 Chatham = 553 Chathill = 554 ChatsworthHouseBus = 555 CheadleHulme = 556 Cheam = 557 Cheddington = 558 Chelford = 559 Chelmsford = 560 Chelsfield = 561 CheltenhamSpa = 562 Chepstow = 563 CherryTree = 564 Chertsey = 565 Cheshunt = 566 ChessingtonNorth = 567 ChessingtonSouth = 568 Chester = 569 Chesterfield = 572 ChesterLeStreet = 571 ChesterRoad = 570 ChestfieldSwalecliffe = 573 Chetnole = 574 Chichester = 575 Chilham = 576 Chilworth = 577 Chingford = 578 Chinley = 579 ChinnorBus = 580 Chippenham = 581 ChippenhamBathRoadBus = 582 ChippenhamNewRoadBus = 583 ChippingNortonWestStBus = 584 Chipstead = 585 Chirk = 586 Chislehurst = 587 Chiswick = 588 Cholsey = 589 Chorley = 590 Chorleywood = 591 Christchurch = 592 ChristsHospital = 593 ChurchFenton = 595 ChurchOswaldtwistle = 594 ChurchStretton = 596 Cilmeri = 597 CityThameslink = 598 ClactonOnSea = 599 Clandon = 600 ClaphamHighStreet = 602 ClaphamJunction = 603 ClaphamNorthYorkshire = 601 Clapton = 604 ClarbestonRoad = 605 Clarkston = 606 Claverdon = 607 Claygate = 608 Cleethorpes = 609 Cleland = 610 Clifton = 611 CliftonDown = 612 Clitheroe = 613 ClockHouse = 614 Clunderwen = 615 Clydebank = 616 CoatbridgeCentral = 617 CoatbridgeSunnyside = 618 Coatdyke = 619 CobhamStokeDAbernon = 620 CockermouthBus = 621 CockfostersUnderground = 622 Codsall = 623 Cogan = 624 Colchester = 625 ColchesterTown = 626 ColeshillParkway = 627 CollBus = 628 Collingham = 629 Collington = 630 Colne = 631 ColonsayBus = 632 Colwall = 633 ColwynBay = 634 Combe = 635 Commondale = 636 Congleton = 637 Conisbrough = 638 ConnelFerry = 639 CononBridge = 640 Cononley = 641 ConwayPark = 642 Conwy = 643 CoodenBeach = 644 Cookham = 645 Cooksbridge = 646 CoombeJunctionHalt = 647 Copplestone = 648 Corbridge = 649 Corby = 650 CorbyGeorgeStreetBus = 651 CorfeCastle = 652 Corkerhill = 653 Corkickle = 654 Corpach = 655 Corrour = 656 CorshamBus = 657 Coryton = 658 Coseley = 659 Cosford = 660 Cosham = 661 Cottingham = 662 Cottingley = 663 CoulsdonSouth = 664 CoulsdonTown = 665 Coventry = 666 CoventryArena = 667 Cowden = 668 Cowdenbeath = 669 CradleyHeath = 670 Craigendoran = 671 CraignureMullBus = 672 Cramlington = 673 CranbrookDevon = 674 CravenArms = 675 Crawley = 676 Crayford = 677 Crediton = 678 Cressing = 679 Cressington = 680 Creswell = 681 Crewe = 682 Crewkerne = 683 CrewsHill = 684 Crianlarich = 685 Criccieth = 686 CricketInnRoadTram = 687 Cricklewood = 688 Croftfoot = 689 CroftonPark = 690 Cromer = 691 Cromford = 692 Crookston = 693 Crossflatts = 695 CrossGates = 694 Crosshill = 696 Crosskeys = 697 Crossmyloof = 698 Croston = 699 CrouchHill = 700 Crowborough = 701 Crowhurst = 702 Crowle = 703 Crowthorne = 704 CroxleyUnderground = 705 Croy = 706 CrystalPalace = 707 Cuddington = 708 Cuffley = 709 CuldroseRnasBus = 710 Culham = 711 CullomptonBus = 712 Culrain = 713 Cumbernauld = 714 CumbraeSlipBus = 715 Cupar = 716 Curriehill = 717 CustomHouse = 718 Cuxton = 719 Cwmbach = 720 Cwmbran = 721 Cynghordy = 722 DagenhamDock = 723 DagenhamEastUnderground = 724 DaisyHill = 725 DalgetyBay = 726 Dalmally = 727 Dalmarnock = 728 Dalmeny = 729 Dalmuir = 730 Dalreoch = 731 Dalry = 732 Dalston = 733 DalstonJunction = 734 DalstonKingsland = 735 Dalton = 736 Dalwhinnie = 737 Danby = 738 Danescourt = 739 Danzey = 740 DarfieldBus = 741 Darlington = 742 Darnall = 743 Darsham = 744 Dartford = 745 DartmouthBus = 746 Darton = 747 Darwen = 748 Datchet = 749 Davenport = 750 Dawlish = 751 DawlishWarren = 752 Deal = 753 Dean = 754 DeanLane = 755 Deansgate = 756 Deganwy = 757 Deighton = 758 Delamere = 759 DenbyDale = 760 Denham = 761 DenhamGolfClub = 762 DenmarkHill = 763 Dent = 764 Denton = 765 Deptford = 766 Derby = 767 DerbyRoad = 768 DerehamMarketPlaceBus = 769 Derker = 770 DevizesBus = 771 Devonport = 772 Dewsbury = 773 DidcotParkway = 774 DigbySowton = 775 DiltonMarsh = 776 DinasPowys = 777 DinasRhondda = 778 DingleRoad = 779 Dingwall = 780 Dinsdale = 781 Dinting = 782 Disley = 783 Diss = 784 Dockyard = 785 Dodworth = 786 Dolau = 787 Doleham = 788 Dolgarrog = 789 Dolwyddelan = 790 Doncaster = 791 DoncasterNorthBusStn = 792 DorchesterSouth = 793 DorchesterWest = 794 Dore = 795 Dorking = 796 DorkingDeepdene = 797 DorkingWest = 798 Dormans = 799 Dorridge = 800 DouglasIsleOfMan = 801 DoveHoles = 802 Dovercourt = 804 DoverPriory = 803 DoveyJunction = 805 DownhamMarket = 806 DraytonGreen = 807 DraytonPark = 808 Drem = 809 Driffield = 810 Drigg = 811 DroitwichSpa = 812 Dronfield = 813 Drumchapel = 814 Drumfrochar = 815 Drumgelloch = 816 Drumry = 817 DublinFerryport = 818 DublinPortStena = 819 Duddeston = 820 DudleyPort = 821 Duffield = 822 Duirinish = 823 DukeStreet = 824 Dullingham = 825 DumbartonCentral = 826 DumbartonEast = 827 Dumbreck = 828 Dumfries = 829 DumptonPark = 830 Dunbar = 832 Dunblane = 833 Duncraig = 834 Dundee = 835 DunfermlineQueenMargaret = 836 DunfermlineTown = 837 DunkeldBirnam = 838 DunLaoghaire = 831 Dunlop = 839 DunoonBus = 840 DunrobinCastle = 841 DunsBus = 842 DunstableBus = 843 DunsterBus = 844 Dunston = 845 DuntonGreen = 846 Durham = 847 DurringtonOnSea = 848 Dyce = 849 DyffrynArdudwy = 850 Eaglescliffe = 851 EalingBroadway = 852 Earlestown = 854 Earley = 855 EarlSCourtUnderground = 853 Earlsfield = 856 EarlstonBordersBus = 857 EarlswoodSurrey = 858 EarlswoodWestMidlands = 859 EastBoldonTWMetro = 860 Eastbourne = 874 Eastbrook = 875 EastCroydon = 861 EastDidsbury = 862 EastDulwich = 863 Easterhouse = 876 EastFarleigh = 864 EastGarforth = 865 EastGrinstead = 866 EasthamRake = 877 EastKilbride = 867 Eastleigh = 878 EastLinton = 868 EastMalling = 869 EastMidlandsAirportBus = 870 EastMidlandsParkway = 871 Eastrington = 879 EastTilbury = 872 EastWorthing = 873 EbbsfleetInternational = 880 EbbwValeParkway = 881 EbbwValeTown = 882 Eccles = 883 EcclesRoad = 884 EcclestonPark = 885 Edale = 886 Edenbridge = 890 EdenbridgeTown = 891 EdenCampBus = 887 EdenPark = 888 EdenProjectBus = 889 EdgeHill = 892 Edinburgh = 893 EdinburghAirportBusOrTram = 894 EdinburghBusStation = 895 EdinburghGateway = 896 EdinburghPark = 897 EdmontonGreen = 898 EffinghamJunction = 899 Eggesford = 900 Egham = 901 Egton = 902 EiggBus = 903 ElephantCastle = 904 ElephantCastleUnderground = 905 Elgin = 906 EllesmerePort = 907 ElmersEnd = 908 ElmsteadWoods = 909 Elmswell = 910 Elsecar = 911 Elsenham = 912 ElstreeBorehamwood = 913 Eltham = 914 EltonOrston = 915 Ely = 916 EmersonPark = 917 Emsworth = 918 EnerglynChurchillPark = 919 EnfieldChase = 920 EnfieldLock = 921 EnfieldTown = 922 Entwistle = 923 Epsom = 924 EpsomDowns = 925 Erdington = 926 Eridge = 927 Erith = 928 Esher = 929 Eskbank = 930 EssexRoad = 931 Etchingham = 932 EuxtonBalshawLane = 933 Evesham = 934 EwellEast = 935 EwellWest = 936 ExeterAirportBus = 937 ExeterCentral = 938 ExeterStDavids = 939 ExeterStThomas = 940 ExhibitionCentre = 941 Exmouth = 942 Exton = 943 Eynsford = 944 EynshamChurchBus = 945 Failsworth = 946 Fairbourne = 947 Fairfield = 948 Fairlie = 949 Fairwater = 950 Falconwood = 951 FalkirkGrahamston = 952 FalkirkHigh = 953 FallsOfCruachan = 954 Falmer = 955 FalmouthDocks = 956 FalmouthTown = 957 Fareham = 958 FarnboroughMain = 959 FarnboroughNorth = 960 Farncombe = 961 Farnham = 962 FarninghamRoad = 963 Farnworth = 964 Farringdon = 965 Fauldhouse = 966 Faversham = 967 Faygate = 968 Fazakerley = 969 Fearn = 970 Featherstone = 971 Felixstowe = 972 FellgateTWMetro = 973 Feltham = 974 Feniton = 975 FennyStratford = 976 Fernhill = 977 Ferriby = 978 Ferryside = 979 Ffairfach = 980 Filey = 981 FiltonAbbeyWood = 982 FinchleyRoadFrognal = 983 FinsburyPark = 984 Finstock = 985 FishbourneWestSussex = 986 Fishersgate = 987 FishguardGoodwick = 988 FishguardHarbour = 989 Fiskerton = 990 FitzalanSquareTram = 991 Fitzwilliam = 992 FiveWays = 993 FlamingoLandBus = 994 Fleet = 995 Flimby = 996 Flint = 997 Flitwick = 998 Flixton = 999 FloweryField = 1000 FolkestoneCentral = 1001 FolkestoneHarbourBus = 1002 FolkestoneWest = 1003 Ford = 1004 ForestGate = 1005 ForestHill = 1006 Formby = 1007 Forres = 1008 Forsinard = 1009 FortMatilda = 1010 FortWilliam = 1011 FourOaks = 1012 FoweyBus = 1013 Foxfield = 1014 Foxton = 1015 Frant = 1016 Fratton = 1017 Freshfield = 1018 Freshford = 1019 Frimley = 1020 FrintonOnSea = 1021 Frizinghall = 1022 Frodsham = 1023 Frome = 1024 FromeTownBus = 1025 Fulwell = 1026 FurnessVale = 1027 FurzePlatt = 1028 GainsboroughCentral = 1029 GainsboroughLeaRoad = 1030 Galashiels = 1031 GalashielsBus = 1032 Garelochhead = 1033 Garforth = 1034 Gargrave = 1035 Garrowhill = 1036 Garscadden = 1037 Garsdale = 1038 GarstonHertfordshire = 1039 Garswood = 1040 Gartcosh = 1041 GarthMidGlamorgan = 1042 GarthPowys = 1043 Garve = 1044 Gathurst = 1045 Gatley = 1046 GatwickAirport = 1047 GeorgemasJunction = 1048 GerrardsCross = 1049 GideaPark = 1050 Giffnock = 1051 Giggleswick = 1052 Gilberdyke = 1053 GilfachFargoed = 1054 GillinghamDorset = 1055 GillinghamKent = 1056 Gilshochill = 1057 GipsyHill = 1058 Girvan = 1059 Glaisdale = 1060 GlanConwy = 1061 GlasgowAirportBus = 1062 GlasgowCentral = 1063 GlasgowQueenStreet = 1064 Glasshoughton = 1065 GlastonburyBus = 1066 Glazebrook = 1067 Gleneagles = 1068 Glenfinnan = 1069 Glengarnock = 1070 GlenrothesWithThornton = 1071 Glossop = 1072 Gloucester = 1073 Glynde = 1074 Goathland = 1075 Gobowen = 1076 Godalming = 1077 Godley = 1078 Godstone = 1079 Goldthorpe = 1080 GoldthorpeBus = 1081 GolfStreet = 1082 Golspie = 1083 Gomshall = 1084 Goodmayes = 1085 Goole = 1086 Goostrey = 1087 GordonHill = 1088 Gorebridge = 1089 GoringBySea = 1091 GoringStreatley = 1090 Gorton = 1092 GospelOak = 1093 Gourock = 1094 GourockPierBus = 1095 Gowerton = 1096 Goxhill = 1097 GrangemouthBus = 1100 GrangeOverSands = 1099 GrangePark = 1098 Grangetown = 1101 Grantham = 1102 Grateley = 1103 GravellyHill = 1104 Gravesend = 1105 Grays = 1106 GreatAyton = 1107 GreatBentley = 1108 GreatChesterford = 1109 GreatCoates = 1110 GreatMalvern = 1111 GreatMissenden = 1112 GreatYarmouth = 1113 Greenbank = 1116 Greenfaulds = 1117 Greenfield = 1118 Greenford = 1119 GreenhitheForBluewater = 1120 GreenLane = 1114 GreenockCentral = 1121 GreenockWest = 1122 GreenRoad = 1115 Greenwich = 1123 GretnaGreen = 1124 GrimsbyDocks = 1125 GrimsbyTown = 1126 Grindleford = 1127 GroombridgeBus = 1128 Grosmont = 1129 GrovePark = 1130 GuideBridge = 1131 Guildford = 1132 Guiseley = 1133 Gunnersbury = 1134 Gunnislake = 1135 Gunton = 1136 Gwersyllt = 1137 GypsyLane = 1138 Habrough = 1139 Hackbridge = 1140 HackneyCentral = 1141 HackneyDowns = 1142 HackneyWick = 1143 HaddenhamThameParkway = 1144 Haddiscoe = 1145 Hadfield = 1146 HadleyWood = 1147 HagFold = 1148 Haggerston = 1149 Hagley = 1150 Hairmyres = 1151 Hale = 1152 Halesworth = 1153 Halewood = 1154 Halifax = 1155 HallGreen = 1156 Halling = 1159 HallIThWood = 1157 HallRoad = 1158 Haltwhistle = 1160 Hamble = 1162 HamiltonCentral = 1163 HamiltonSquare = 1164 HamiltonWest = 1165 HammersmithUnderground = 1166 Hammerton = 1167 HampdenPark = 1168 HampsteadHeath = 1169 Hampton = 1170 HamptonCourt = 1171 HamptonInArden = 1173 HamptonWick = 1172 Hamstead = 1174 HamStreet = 1161 Hamworthy = 1175 Hanborough = 1176 Handforth = 1177 HanleyBus = 1178 Hanwell = 1179 Hapton = 1180 Harlech = 1181 Harlesden = 1182 HarlingRoad = 1183 Harlington = 1184 HarlowMill = 1185 HarlowTown = 1186 HaroldWood = 1187 Harpenden = 1188 Harrietsham = 1189 Harringay = 1190 HarringayGreenLanes = 1191 Harrington = 1192 Harrogate = 1193 HarrowOnTheHill = 1195 HarrowWealdstone = 1194 Hartford = 1196 Hartlebury = 1197 Hartlepool = 1198 Hartwood = 1199 HarwichInternational = 1200 HarwichTown = 1201 Haslemere = 1202 Hassocks = 1203 Hastings = 1204 HatchEnd = 1205 Hatfield = 1206 HatfieldPeverel = 1208 HatfieldStainforth = 1207 Hathersage = 1209 Hattersley = 1210 Hatton = 1211 HattonCrossBus = 1212 Havant = 1213 Havenhouse = 1214 Haverfordwest = 1215 Hawarden = 1216 HawardenBridge = 1217 HawickBus = 1218 Hawkhead = 1219 HaworthBus = 1220 HaydonBridge = 1221 HaydonsRoad = 1222 HayesHarlington = 1224 HayesKent = 1223 Hayle = 1225 Haymarket = 1226 HaywardsHeath = 1227 HazelGrove = 1228 Headcorn = 1229 Headingley = 1230 HeadstoneLane = 1231 HealdGreen = 1232 Healing = 1233 HeathHighLevel = 1234 HeathLowLevel = 1235 HeathrowAirportT123 = 1237 HeathrowAirportT1Bus = 1236 HeathrowAirportT2Bus = 1238 HeathrowAirportT3Bus = 1239 HeathrowAirportT4 = 1240 HeathrowAirportT4Bus = 1241 HeathrowAirportT5 = 1242 HeathrowAirportT5Bus = 1243 HeathrowCentralBusStn = 1244 HeatonChapel = 1245 HebdenBridge = 1246 Heckington = 1247 HedgeEnd = 1248 Hednesford = 1249 Heighington = 1250 HelensburghCentral = 1251 HelensburghUpper = 1252 Hellifield = 1253 Helmsdale = 1254 Helsby = 1255 HelstonBus = 1256 HemelHempstead = 1257 Hendon = 1258 Hengoed = 1259 HenleyInArden = 1260 HenleyOnThames = 1261 Hensall = 1262 Hereford = 1263 HerneBay = 1264 HerneHill = 1265 Hersham = 1266 HertfordEast = 1267 HertfordNorth = 1268 Hessle = 1269 Heswall = 1270 Hever = 1271 Heworth = 1272 HeworthTWMetro = 1273 Hexham = 1274 Heyford = 1275 HeyshamPort = 1276 Higham = 1281 HighamsPark = 1282 HighBarnet = 1277 HighbridgeBurnham = 1283 HighBrooms = 1278 HighburyIslington = 1284 HighStreet = 1279 Hightown = 1285 HighWycombe = 1280 Hildenborough = 1286 Hillfoot = 1287 HillingtonEast = 1288 HillingtonWest = 1289 Hillside = 1290 Hilsea = 1291 HinchleyWood = 1292 Hinckley = 1293 Hindley = 1294 HintonAdmiral = 1295 HirwaunBus = 1296 Hitchin = 1297 HitherGreen = 1298 Hockley = 1299 HoekVanHolland = 1300 Hollingbourne = 1301 Hollinwood = 1302 HolmesChapel = 1303 Holmwood = 1304 HolsworthyBus = 1305 HoltonHeath = 1306 Holyhead = 1307 Holytown = 1308 Homerton = 1309 Honeybourne = 1310 Honiton = 1311 Honley = 1312 HonorOakPark = 1313 Hook = 1314 Hooton = 1315 HopeDerbyshire = 1316 HopeFlintshire = 1317 HoptonHeath = 1318 Horden = 1319 Horley = 1320 HornbeamPark = 1321 Hornsey = 1322 Horsforth = 1323 Horsham = 1324 Horsley = 1325 HortonInRibblesdale = 1326 HorwichParkway = 1327 Hoscar = 1328 HoughGreen = 1329 Hounslow = 1330 Hove = 1331 HovetonWroxham = 1332 Howden = 1334 Howwood = 1335 HowWood = 1333 Hoxton = 1336 Hoylake = 1337 HubbertsBridge = 1338 Hucknall = 1339 Huddersfield = 1340 Hull = 1341 HullBus = 1342 HumphreyPark = 1343 Huncoat = 1344 Hungerford = 1345 Hunmanby = 1346 HunstantonBus = 1347 Huntingdon = 1348 Huntly = 1349 HuntsCross = 1350 HursleyPostOfficeBus = 1351 HurstGreen = 1352 HuttonCranswick = 1353 Huyton = 1354 HydeCentral = 1355 HydeNorth = 1356 HydeParkTram = 1357 Hykeham = 1358 HykehamCrossroadsBus = 1359 Hyndland = 1360 Hythe = 1361 HytheWatersideBus = 1362 Ibm = 1363 Ifield = 1364 Ilford = 1365 Ilkeston = 1366 Ilkley = 1367 ImperialWharf = 1368 Ince = 1369 InceElton = 1370 Ingatestone = 1371 Insch = 1372 Invergordon = 1373 Invergowrie = 1374 Inverkeithing = 1375 Inverkip = 1376 Inverness = 1377 InvernessAirport = 1378 Invershin = 1379 Inverurie = 1380 Ipswich = 1381 Irlam = 1382 Irvine = 1383 Isleworth = 1384 Islip = 1385 Iver = 1386 Ivybridge = 1387 JamesCook = 1388 JamesStreet = 1389 JewelleryQuarter = 1390 Johnston = 1391 Johnstone = 1392 Jordanhill = 1393 Kearsley = 1394 Kearsney = 1395 Keighley = 1396 Keith = 1397 Kelvedon = 1398 Kelvindale = 1399 Kemble = 1400 KempstonHardwick = 1401 KemptonPark = 1402 Kemsing = 1403 Kemsley = 1404 Kendal = 1405 Kenilworth = 1406 Kenley = 1407 Kennett = 1408 Kennishead = 1409 KensalGreen = 1410 KensalRise = 1411 KensingtonHighStUnderground = 1412 KensingtonOlympia = 1413 KentHouse = 1414 KentishTown = 1415 KentishTownWest = 1416 Kenton = 1417 KentsBank = 1418 KeswickBusStation = 1419 Kettering = 1420 KetteringBus = 1421 KewBridge = 1422 KewGardens = 1423 Keyham = 1424 Keynsham = 1425 Kidbrooke = 1426 Kidderminster = 1427 Kidsgrove = 1428 Kidwelly = 1429 KilburnHighRoad = 1430 KilcregganBus = 1431 Kildale = 1432 Kildonan = 1433 Kilgetty = 1434 Kilmarnock = 1435 Kilmaurs = 1436 Kilpatrick = 1437 Kilwinning = 1438 Kinbrace = 1439 Kingham = 1440 Kinghorn = 1441 KingsbridgeBus = 1449 Kingsknowe = 1450 KingsLangley = 1442 KingsLynn = 1443 KingsLynnBusStation = 1444 KingsNorton = 1445 KingsNympton = 1446 KingsPark = 1447 KingsSutton = 1448 Kingston = 1451 Kingswear = 1452 Kingswood = 1453 Kingussie = 1454 Kintbury = 1455 Kintore = 1456 KirbyCross = 1457 Kirkby = 1459 KirkbyInAshfield = 1460 KirkbyInFurness = 1462 KirkbyStephen = 1461 Kirkcaldy = 1463 Kirkconnel = 1464 Kirkdale = 1465 KirkhamWesham = 1466 Kirkhill = 1467 Kirknewton = 1468 KirkSandall = 1458 KirkstallForge = 1469 Kirkwood = 1470 KirtonLindsey = 1471 KivetonBridge = 1472 KivetonPark = 1473 Knaresborough = 1474 Knebworth = 1475 Knighton = 1476 Knockholt = 1477 Knottingley = 1478 Knucklas = 1479 Knutsford = 1480 KyleakinSkyeBus = 1482 KyleOfLochalsh = 1481 Ladybank = 1483 Ladywell = 1484 Laindon = 1485 Lairg = 1486 Lake = 1487 Lakenheath = 1488 Lamphey = 1489 Lanark = 1490 Lancaster = 1491 Lancing = 1492 Landywood = 1493 Langbank = 1494 Langho = 1495 LangholmBus = 1496 Langley = 1497 LangleyGreen = 1498 LangleyMill = 1499 Langside = 1500 Langwathby = 1501 LangwithWhaleyThorns = 1502 Lapford = 1503 Lapworth = 1504 Larbert = 1505 Largs = 1506 Larkhall = 1507 LarneHarbourBus = 1508 LauncestonBus = 1509 Laurencekirk = 1510 LawrenceHill = 1511 Layton = 1512 LazonbyKirkoswald = 1513 LeaBridge = 1514 Leagrave = 1517 LeaGreen = 1515 LeaHall = 1516 Lealholm = 1518 LeamingtonSpa = 1519 Leasowe = 1520 Leatherhead = 1521 Ledbury = 1522 Lee = 1523 Leeds = 1524 LeedsBradfordAirportBus = 1525 LeedsFestivalBus = 1526 LeedsWhitehallBus = 1527 Leicester = 1528 LeighKent = 1529 LeighOnSea = 1530 LeightonBuzzard = 1531 Lelant = 1532 LelantSaltings = 1533 Lenham = 1534 Lenzie = 1535 Leominster = 1536 LetchworthGardenCity = 1537 Leuchars = 1538 Levenshulme = 1539 Levisham = 1540 Lewes = 1541 Lewisham = 1542 Leyland = 1543 LeytonMidlandRoad = 1544 LeytonstoneHighRoad = 1545 LichfieldCity = 1546 LichfieldTrentValley = 1547 Lidlington = 1548 LilleEurope = 1549 Limehouse = 1550 LincolnBusStation = 1551 LincolnCentral = 1552 LindfordBus = 1553 Lingfield = 1554 Lingwood = 1555 Linlithgow = 1556 Liphook = 1557 Liskeard = 1558 LismoreBus = 1559 Liss = 1560 LisvaneThornhill = 1561 Littleborough = 1564 Littlehampton = 1565 Littlehaven = 1566 LittleKimble = 1562 Littleport = 1567 LittleSutton = 1563 LiverpoolCentral = 1568 LiverpoolLandingStage = 1569 LiverpoolLimeStreet = 1570 LiverpoolSouthParkway = 1571 LivingstonNorth = 1572 LivingstonSouth = 1573 Llanaber = 1574 Llanbedr = 1575 LlanbisterRoad = 1576 Llanbradach = 1577 Llandaf = 1578 Llandanwg = 1579 Llandecwyn = 1580 Llandeilo = 1581 Llandovery = 1582 Llandrindod = 1583 Llandudno = 1584 LlandudnoJunction = 1585 Llandybie = 1586 Llanelli = 1587 Llanfairfechan = 1588 Llanfairpwll = 1589 Llangadog = 1590 Llangammarch = 1591 Llangennech = 1592 Llangynllo = 1593 Llanharan = 1594 Llanhilleth = 1595 Llanishen = 1596 Llanrwst = 1597 Llansamlet = 1598 LlantwitMajor = 1599 Llanwrda = 1600 Llanwrtyd = 1601 Llwyngwril = 1602 Llwynypia = 1603 Lochailort = 1606 LochAwe = 1604 LochboisdaleSouthUistBus = 1607 LochEilOutwardBound = 1605 Locheilside = 1608 Lochgelly = 1609 Lochluichart = 1610 LochmaddyNorthUistBus = 1611 Lochwinnoch = 1612 Lockerbie = 1613 Lockwood = 1614 LondonBlackfriars = 1615 LondonBridge = 1616 LondonCannonStreet = 1617 LondonCharingCross = 1618 LondonEuston = 1619 LondonFenchurchStreet = 1620 LondonFields = 1621 LondonKingsCross = 1622 LondonLiverpoolStreet = 1623 LondonMarylebone = 1624 LondonPaddington = 1625 LondonRoadBrighton = 1626 LondonRoadGuildford = 1627 LondonStPancrasIntl = 1628 LondonVictoria = 1629 LondonWaterloo = 1630 LondonWaterlooEast = 1631 Longbeck = 1635 Longbridge = 1636 LongBuckby = 1632 Longcross = 1637 LongEaton = 1633 Longfield = 1638 Longniddry = 1639 Longport = 1640 LongPreston = 1634 Longton = 1641 Looe = 1642 Lostock = 1643 LostockGralam = 1644 LostockHall = 1645 Lostwithiel = 1646 Loughborough = 1647 LoughboroughJunction = 1648 Lowdham = 1650 LowerSydenham = 1651 Lowestoft = 1652 LowMoor = 1649 Ludlow = 1653 Luton = 1654 LutonAirportBus = 1656 LutonAirportParkway = 1657 LutonBus = 1655 Luxulyan = 1658 Lydney = 1659 Lye = 1660 LymingtonPier = 1661 LymingtonTown = 1662 LympstoneCommando = 1663 LympstoneVillage = 1664 LynehamCampBus = 1665 Lytham = 1666 Macclesfield = 1667 Machynlleth = 1668 Maesteg = 1669 MaestegEwennyRoad = 1670 Maghull = 1671 MaghullNorth = 1672 Maidenhead = 1674 MaidenNewton = 1673 MaidstoneBarracks = 1675 MaidstoneEast = 1676 MaidstoneWest = 1677 MaldenManor = 1678 Mallaig = 1679 Malton = 1680 MalvernLink = 1681 ManchesterAirport = 1682 ManchesterOxfordRoad = 1683 ManchesterPiccadilly = 1684 ManchesterUnitedFc = 1685 ManchesterVictoria = 1686 Manea = 1687 Manningtree = 1688 Manorbier = 1691 ManorPark = 1689 ManorRoad = 1690 Manors = 1692 ManorsTWMetro = 1693 Mansfield = 1694 MansfieldWoodhouse = 1695 March = 1696 Marden = 1697 Margate = 1698 MarketHarborough = 1699 MarketRasen = 1700 Markinch = 1701 MarksTey = 1702 MarlboroughBus = 1703 Marlow = 1704 MarneLaVallee = 1705 Marple = 1706 Marsden = 1707 MarseilleStCharles = 1708 MarshBarton = 1709 Marske = 1710 MarstonGreen = 1711 MartinMill = 1712 MartinsHeron = 1713 Marton = 1714 Maryhill = 1715 Maryland = 1716 Maryport = 1717 Matlock = 1718 MatlockBath = 1719 MauldethRoad = 1720 MaxwellPark = 1721 Maybole = 1722 MazeHill = 1723 Meadowhall = 1724 Meldreth = 1725 Melksham = 1726 MelkshamMarketPlaceBus = 1727 MelroseBus = 1728 Melton = 1729 MeltonMowbray = 1730 Menheniot = 1731 Menston = 1732 Meols = 1733 MeolsCop = 1734 Meopham = 1735 MeridianWater = 1736 Merryton = 1737 Merstham = 1738 MerthyrTydfil = 1739 MerthyrVale = 1740 Metheringham = 1741 MetroCentre = 1742 MevagisseyBus = 1743 Mexborough = 1744 Micheldever = 1745 Micklefield = 1746 Middlesbrough = 1747 Middlewood = 1748 Midgham = 1749 MidsomerNortonBus = 1750 MilfordHaven = 1752 MilfordSurrey = 1751 MillbrookBedfordshire = 1755 MillbrookHampshire = 1756 MillfieldTWMetro = 1757 MillHillBroadway = 1754 MillHillLancashire = 1753 MillikenPark = 1758 Millom = 1759 MillsHill = 1760 Milngavie = 1761 Milnrow = 1762 MiltonKeynesCentral = 1763 Minehead = 1764 MineheadBus = 1765 MineheadButlinsBus = 1766 Minffordd = 1767 Minster = 1768 Mirfield = 1769 Mistley = 1770 MitchamEastfields = 1771 MitchamJunction = 1772 Mobberley = 1773 Monifieth = 1774 MonksRisborough = 1775 Montpelier = 1776 Montrose = 1777 Moorfields = 1778 Moorgate = 1779 Moorside = 1780 Moorthorpe = 1781 Morar = 1782 MorchardRoad = 1783 MordenSouth = 1784 Morecambe = 1785 MoretonDorset = 1786 MoretonhampsteadBus = 1789 MoretonInMarsh = 1788 MoretonMerseyside = 1787 MorfaMawddach = 1790 Morley = 1791 Morpeth = 1792 Mortimer = 1793 Mortlake = 1794 MosesGate = 1795 Mossley = 1797 MossleyHill = 1798 Mosspark = 1799 MossSide = 1796 Moston = 1800 Motherwell = 1801 MotspurPark = 1802 Mottingham = 1803 MottisfontDunbridge = 1804 Mouldsworth = 1805 Moulsecoomb = 1806 MountainAsh = 1809 MountFlorida = 1807 MountVernon = 1808 MuckBus = 1810 Muirend = 1812 MuirOfOrd = 1811 Musselburgh = 1813 Mytholmroyd = 1814 Nafferton = 1815 NailseaBackwell = 1816 Nairn = 1817 Nantwich = 1818 Narberth = 1819 Narborough = 1820 NavigationRoad = 1821 Neath = 1822 NeedhamMarket = 1823 Neilston = 1824 Nelson = 1825 Neston = 1826 Netherfield = 1827 Nethertown = 1828 Netley = 1829 NewarkCastle = 1848 NewarkNorthGate = 1849 NewBarnet = 1830 NewBeckenham = 1831 Newbridge = 1850 NewBrighton = 1832 Newbury = 1851 NewburyParkUnderground = 1852 NewburyRacecourse = 1853 Newcastle = 1854 NewcastleAirport = 1855 NewcastleCentralMetro = 1856 NewClee = 1833 Newcourt = 1857 Newcraighall = 1858 NewCross = 1834 NewCrossGate = 1835 NewCumnock = 1836 NewEltham = 1837 NewhavenHarbour = 1859 NewhavenMarineBus = 1860 NewhavenTown = 1861 NewHey = 1838 NewHolland = 1839 NewHythe = 1840 Newington = 1862 NewLane = 1841 NewMalden = 1842 Newmarket = 1863 NewMillsCentral = 1843 NewMillsNewtown = 1844 NewMilton = 1845 NewportEssex = 1864 NewportSouthWales = 1865 NewPudsey = 1846 Newquay = 1866 NewSouthgate = 1847 Newstead = 1867 Newton = 1868 NewtonAbbot = 1869 NewtonAycliffe = 1870 NewtonForHyde = 1871 Newtongrange = 1875 NewtonLeWillows = 1873 Newtonmore = 1876 NewtonOnAyr = 1874 NewtonStCyres = 1872 NewtownPowys = 1877 NinianPark = 1878 Nitshill = 1879 Norbiton = 1880 Norbury = 1881 NormansBay = 1882 Normanton = 1883 Northallerton = 1894 Northampton = 1895 NorthBerwick = 1884 NorthCamp = 1885 NorthDulwich = 1886 NorthFambridge = 1887 Northfield = 1896 Northfleet = 1897 NorthLlanrwst = 1888 NortholtPark = 1898 NorthQueensferry = 1889 NorthRoad = 1890 NorthSheen = 1891 NorthumberlandPark = 1899 NorthWalsham = 1892 NorthWembley = 1893 Northwich = 1900 NortonBridge = 1901 NortonBridgeBus = 1902 Norwich = 1903 NorwoodJunction = 1904 Nottingham = 1905 Nuneaton = 1906 Nunhead = 1907 NunnerySquareTram = 1908 Nunthorpe = 1909 Nutbourne = 1910 Nutfield = 1911 NutfieldMemorialHallBus = 1912 Oakengates = 1913 Oakham = 1914 OakleighPark = 1915 OakwoodLulEnfield = 1916 Oban = 1917 Ockendon = 1918 Ockley = 1919 Okehampton = 1920 OkehamptonBus = 1921 OldfieldPark = 1925 OldhamMumps = 1926 OldhamWerneth = 1927 OldHill = 1922 OldRoan = 1923 OldStreet = 1924 Olton = 1928 Ore = 1929 Ormskirk = 1930 Orpington = 1931 Orrell = 1932 OrrellPark = 1933 Otford = 1934 OtleyBusStation = 1935 OultonBroadNorth = 1936 OultonBroadSouth = 1937 OundleMarketPlaceBus = 1938 Outwood = 1939 Overpool = 1940 Overton = 1941 OxenholmeLakeDistrict = 1942 Oxenhope = 1943 Oxford = 1944 OxfordParkway = 1945 Oxshott = 1946 Oxted = 1947 PaddockWood = 1948 Padgate = 1949 PadstowBusTerminus = 1950 Paignton = 1951 PaisleyCanal = 1952 PaisleyGilmourStreet = 1953 PaisleyStJames = 1954 PallionTWMetro = 1955 PalmersGreen = 1956 Pangbourne = 1957 Pannal = 1958 Pantyffynnon = 1959 Par = 1960 Parbold = 1962 ParBus = 1961 ParisNord = 1963 Parkgate = 1966 ParkLaneBus = 1964 ParkstoneDorset = 1967 ParkStreet = 1965 ParsonStreet = 1968 Partick = 1969 Parton = 1970 Patchway = 1971 Patricroft = 1972 Patterton = 1973 Peartree = 1974 PeckhamRye = 1975 PeeblesBusStop = 1976 Pegswood = 1977 PelawTWMetro = 1978 Pemberton = 1979 PembreyBurryPort = 1980 Pembroke = 1981 PembrokeDock = 1982 PembrokeDockFerryTerm = 1983 Penally = 1985 Penarth = 1986 Pencoed = 1987 Pengam = 1988 PengeEast = 1989 PengeWest = 1990 Penhelig = 1991 Penistone = 1992 Penkridge = 1993 Penmaenmawr = 1994 Penmere = 1995 Penrhiwceiber = 1996 Penrhyndeudraeth = 1997 Penrith = 1998 Penryn = 1999 Pensarn = 2000 Penshurst = 2001 PentreBach = 2002 PenYBont = 1984 Penychain = 2003 Penyffordd = 2004 PenywaunBus = 2005 Penzance = 2006 PerranporthBus = 2007 Perranwell = 2008 PerryBarr = 2009 Pershore = 2010 Perth = 2011 Peterborough = 2012 PeterboroughQueensgateBus = 2013 Petersfield = 2014 PettsWood = 2015 PevenseyBay = 2017 PevenseyWestham = 2016 Pewsey = 2018 PiccadillyCircusUnderground = 2019 Pickering = 2020 PickeringEastgateBus = 2021 Pilning = 2022 Pinhoe = 2023 Pitlochry = 2024 Pitsea = 2025 Plaistow = 2026 Pleasington = 2027 Plockton = 2028 Pluckley = 2029 Plumley = 2030 Plumpton = 2031 Plumstead = 2032 Plymouth = 2033 PlymouthSaltashRoadBus = 2034 Pokesdown = 2035 Polegate = 2036 Polesworth = 2037 PollokshawsEast = 2038 PollokshawsWest = 2039 PollokshieldsEast = 2040 PollokshieldsWest = 2041 Polmont = 2042 PolsloeBridge = 2043 PondersEnd = 2044 Pontarddulais = 2046 PontefractBaghill = 2047 PontefractMonkhill = 2048 PontefractTanshelf = 2049 Pontlottyn = 2050 Pontyclun = 2051 PontYPant = 2045 PontypoolNewInn = 2052 Pontypridd = 2053 Poole = 2054 Poppleton = 2055 Portchester = 2059 PortGlasgow = 2056 Porth = 2060 PorthcawlBus = 2061 Porthmadog = 2062 PorthmadogHarbourBus = 2063 Portlethen = 2064 Portslade = 2065 PortsmouthArms = 2067 PortsmouthHarbour = 2068 PortsmouthSouthsea = 2066 PortSunlight = 2057 PortTalbotParkway = 2058 PossilparkParkhouse = 2069 PottersBar = 2070 PoultonLeFylde = 2071 Poynton = 2072 Prees = 2073 Prescot = 2074 Prestatyn = 2075 Prestbury = 2076 Preston = 2077 PrestonCSFerry = 2078 Prestonpans = 2080 PrestonPark = 2079 PrestwichMetrolinkBus = 2081 PrestwickIntlAirport = 2082 PrestwickTown = 2083 PriesthillDarnley = 2084 PrincesRisborough = 2085 PrincetownBus = 2086 Prittlewell = 2087 PrivateCharter = 2088 Prudhoe = 2089 Pulborough = 2090 Purfleet = 2091 Purley = 2092 PurleyOaks = 2093 Putney = 2094 Pwllheli = 2095 PyeCorner = 2096 Pyle = 2097 QuaintonRoad = 2098 QuakersYard = 2099 Queenborough = 2100 QueensParkGlasgow = 2101 QueensParkLondon = 2102 QueensRoadPeckham = 2103 QueenstownRoadBattersea = 2104 QuintrellDowns = 2105 RadcliffeMetrolinkBus = 2107 RadcliffeNottinghamshire = 2106 Radlett = 2108 Radley = 2109 RadstockBus = 2110 Radyr = 2111 Rainford = 2112 RainhamEssex = 2113 RainhamKent = 2114 Rainhill = 2115 Ramsgate = 2116 RamsgateHarbourBus = 2117 RamsgreaveWilpshire = 2118 Rannoch = 2119 Rauceby = 2120 RavenglassForEskdale = 2121 Ravensbourne = 2122 Ravensthorpe = 2123 Rawcliffe = 2124 Rayleigh = 2125 RaynesPark = 2126 Reading = 2127 ReadingWest = 2128 RectoryRoad = 2129 Redbridge = 2130 RedcarCentral = 2131 RedcarEast = 2132 ReddishNorth = 2133 ReddishSouth = 2134 Redditch = 2135 Redhill = 2136 Redland = 2137 Redruth = 2138 ReedhamNorfolk = 2139 ReedhamSurrey = 2140 RegentCentreBus = 2141 Reigate = 2142 Renton = 2143 Reston = 2144 Retford = 2145 RhigosBus = 2146 Rhiwbina = 2147 RhooseCardiffIntlAirport = 2148 Rhosneigr = 2149 RhumBus = 2150 Rhyl = 2151 Rhymney = 2152 RhymneyTredegarBus = 2153 Ribblehead = 2154 RiceLane = 2155 Richmond = 2156 RichmondNthYorksBus = 2157 Rickmansworth = 2158 Riddlesdown = 2159 Ridgmont = 2160 RidingMill = 2161 RiscaPontymister = 2162 Rishton = 2163 Robertsbridge = 2164 RobinHoodAirportBus = 2165 Robroyston = 2166 Roby = 2167 Rochdale = 2168 Roche = 2169 Rochester = 2170 Rochford = 2171 RockFerry = 2172 Rogart = 2173 Rogerstone = 2174 Rolleston = 2175 RomanBridge = 2176 Romford = 2177 Romiley = 2178 Romsey = 2179 RomseyBusStation = 2180 Roose = 2181 RoseGrove = 2182 RoseHillMarple = 2183 RosslareEuroport = 2184 Rosyth = 2185 RotherhamCentral = 2186 Rotherhithe = 2187 RothesayButeBus = 2188 RoughtonRoad = 2189 RowlandsCastle = 2190 RowleyRegis = 2191 RoyBridge = 2192 Roydon = 2193 Royston = 2194 Ruabon = 2195 Rufford = 2196 Rugby = 2197 RugeleyTown = 2198 RugeleyTrentValley = 2199 Runcorn = 2200 RuncornEast = 2201 Ruskington = 2202 Ruswarp = 2203 Rutherglen = 2204 RydeEsplanade = 2205 RydePierHead = 2206 RyderBrow = 2208 RydeStJohnsRoad = 2207 Rye = 2209 RyeHouse = 2210 SaleMetrolinkBus = 2211 SalfordCentral = 2212 SalfordCrescent = 2213 Salfords = 2214 Salhouse = 2215 Salisbury = 2216 Saltaire = 2217 Saltash = 2218 Saltburn = 2219 Saltcoats = 2220 Saltmarshe = 2221 Salwick = 2222 SampfordCourtenay = 2223 SandalAgbrigg = 2224 Sandbach = 2225 Sanderstead = 2226 Sandhills = 2227 Sandhurst = 2228 Sandling = 2229 Sandown = 2230 Sandplace = 2231 SandringhamBus = 2232 SandwellDudley = 2233 Sandwich = 2234 Sandy = 2235 SankeyForPenketh = 2236 Sanquhar = 2237 Sarn = 2238 Saundersfoot = 2239 Saunderton = 2240 Sawbridgeworth = 2241 Saxilby = 2242 Saxmundham = 2243 Scarborough = 2244 Scotscalder = 2245 Scotstounhill = 2246 ScrabsterBus = 2247 Scunthorpe = 2248 SeaburnTWMetro = 2250 Seaford = 2251 SeaforthLitherland = 2252 Seaham = 2253 Seamer = 2254 SeaMills = 2249 Seascale = 2255 SeatonCarew = 2256 SeatonDevonBus = 2257 SeerGreen = 2258 Selby = 2259 Selhurst = 2260 SelkirkBus = 2261 Sellafield = 2262 Selling = 2263 SellyOak = 2264 Settle = 2265 SevenKings = 2266 Sevenoaks = 2268 SevenSisters = 2267 SevernBeach = 2269 SevernTunnelJunction = 2270 Shadwell = 2271 ShaftesburyTownHallBus = 2272 Shalford = 2273 Shanklin = 2274 ShawCrompton = 2275 Shawfair = 2276 Shawford = 2277 Shawlands = 2278 SheernessOnSea = 2279 Sheffield = 2280 SheffieldArenaTram = 2281 SheffieldCathedralTram = 2282 Shelford = 2283 Shenfield = 2284 Shenstone = 2285 ShepherdsBush = 2286 ShepherdsWell = 2287 Shepley = 2288 Shepperton = 2289 Shepreth = 2290 Sherborne = 2291 SherburnInElmet = 2292 Sheringham = 2293 Shettleston = 2294 Shieldmuir = 2295 Shifnal = 2296 Shildon = 2297 Shiplake = 2298 Shipley = 2299 ShippeaHill = 2300 Shipton = 2301 Shirebrook = 2302 Shirehampton = 2303 Shireoaks = 2304 Shirley = 2305 Shoeburyness = 2306 Sholing = 2307 ShoreditchHighStreet = 2308 ShorehamBySea = 2310 ShorehamKent = 2309 Shortlands = 2311 Shotton = 2312 Shotts = 2313 Shrewsbury = 2314 Sidcup = 2315 Sileby = 2316 Silecroft = 2317 SilkstoneCommon = 2318 Silverdale = 2320 SilverStreet = 2319 Singer = 2321 Sittingbourne = 2322 Skegness = 2323 Skewen = 2324 Skipton = 2325 SladeGreen = 2326 Slaithwaite = 2327 Slateford = 2328 Sleaford = 2329 Sleights = 2330 Slough = 2331 SmallbrookJunction = 2333 SmallHeath = 2332 SmethwickGaltonBridge = 2334 SmethwickRolfeStreet = 2335 SmithyBridge = 2336 Snaith = 2337 Snodland = 2338 Snowdown = 2339 Soham = 2340 SoleStreet = 2341 Solihull = 2342 Somerleyton = 2343 SouthActon = 2344 Southall = 2361 SouthamptonAirportParkway = 2362 SouthamptonCentral = 2363 SouthamptonEasternDocks = 2364 SouthamptonTownQuayBus = 2365 SouthamptonWesternDocks = 2366 SouthBank = 2345 SouthBermondsey = 2346 Southbourne = 2367 Southbury = 2368 SouthCroydon = 2347 Southease = 2369 SouthElmsall = 2348 SouthendAirport = 2370 SouthendCentral = 2371 SouthendEast = 2372 SouthendVictoria = 2373 SouthGosforthTWMetro = 2349 SouthGreenford = 2350 SouthGyle = 2351 SouthHampstead = 2352 SouthHyltonTWMetro = 2353 SouthKenton = 2354 SouthMerton = 2355 SouthMilford = 2356 Southminster = 2374 Southport = 2375 SouthportLordStreetBus = 2376 SouthRuislip = 2357 SouthseaHoverportBus = 2377 SouthTottenham = 2358 SouthwellBus = 2378 Southwick = 2379 SouthWigston = 2359 SouthWoodhamFerrers = 2360 SowerbyBridge = 2380 Spalding = 2381 SpeanBridge = 2382 Spital = 2383 Spondon = 2384 SpoonerRow = 2385 Springburn = 2387 Springfield = 2388 SpringRoad = 2386 SquiresGate = 2389 StadiumOfLightTWMetro = 2420 Stafford = 2421 Staines = 2422 StAlbans = 2390 StAlbansAbbey = 2391 Stallingborough = 2423 Stalybridge = 2424 Stamford = 2425 StamfordHill = 2426 StAndrewsBus = 2392 StAndrewsRoad = 2393 StanfordLeHope = 2427 Stanhope = 2428 StanlowThornton = 2429 StAnnesOnTheSea = 2394 StanstedAirport = 2430 StanstedAirportBusStop = 2431 StanstedMountfitchet = 2432 Staplehurst = 2433 StapletonRoad = 2434 Starbeck = 2435 Starcross = 2436 StAustell = 2395 Staveley = 2437 StBees = 2396 StBudeauxFerryRoad = 2397 StBudeauxVictoriaRoad = 2398 StColumbRoad = 2399 StDenys = 2400 Stechford = 2438 SteetonSilsden = 2439 Stepps = 2440 StErth = 2401 Stevenage = 2441 Stevenston = 2442 Stewartby = 2443 Stewarton = 2444 StGermans = 2402 StHelensCentral = 2403 StHelensJunction = 2404 StHelier = 2405 Stirling = 2445 StIves = 2406 StJamesPark = 2409 StJamesStreet = 2408 StJamesTWMetro = 2407 StJohns = 2410 StKeyneWishingWellHalt = 2411 StLeonardsWarriorSquare = 2412 StMargaretsHertfordshire = 2413 StMargaretsLondon = 2414 StMaryCray = 2415 StMichaels = 2416 StNeots = 2417 StNeotsBus = 2418 Stockport = 2446 Stocksfield = 2447 Stocksmoor = 2448 Stockton = 2449 StokeMandeville = 2450 StokeNewington = 2451 StokeOnTrent = 2452 Stone = 2453 StonebridgePark = 2457 StoneCrossing = 2454 StoneCrownStreetBus = 2455 Stonegate = 2458 StoneGranvilleSquareBus = 2456 Stonehaven = 2459 Stonehouse = 2460 Stoneleigh = 2461 StornowayLewisBus = 2462 StourbridgeJunction = 2463 StourbridgeTown = 2464 Stow = 2465 Stowmarket = 2466 StPetersTWMetro = 2419 Stranraer = 2467 StranraerWestPierBus = 2468 StratfordInternational = 2470 StratfordLondon = 2469 StratfordParkway = 2471 StratfordUponAvon = 2472 Strathcarron = 2473 StrawberryHill = 2474 Streatham = 2475 StreathamCommon = 2476 StreathamHill = 2477 StreetBus = 2478 Streethouse = 2479 StretfordMetrolinkBus = 2480 Strines = 2481 Stromeferry = 2482 Strood = 2483 Stroud = 2484 Sturry = 2485 Styal = 2486 Sudbury = 2487 SudburyHarrowRoad = 2488 SudburyHillHarrow = 2489 SugarLoaf = 2490 Summerston = 2491 Sunbury = 2492 Sunderland = 2493 SundridgePark = 2494 Sunningdale = 2495 Sunnymeads = 2496 Surbiton = 2497 SurreyQuays = 2498 SuttonColdfield = 2500 SuttonCommon = 2501 SuttonLondon = 2499 SuttonParkway = 2502 SwaffhamTouristInfCtrBus = 2503 Swale = 2504 Swanley = 2505 Swanscombe = 2506 Swansea = 2507 SwanseaDocksBus = 2508 Swanwick = 2509 Sway = 2510 Swaythling = 2511 Swinderby = 2512 SwinderbyA46RoundaboutBus = 2513 Swindon = 2514 SwindonBusStation = 2515 Swineshead = 2516 SwintonManchester = 2517 SwintonSouthYorkshire = 2518 Sydenham = 2519 SydenhamHill = 2520 SyonLane = 2521 Syston = 2522 Tackley = 2523 Tadworth = 2524 TaffsWell = 2525 Tain = 2526 Talsarnau = 2528 Talybont = 2529 TalYCafn = 2527 TameBridgeParkway = 2530 Tamworth = 2531 TanYBwlchBus = 2532 Taplow = 2533 TarbertHarrisBus = 2534 TattenhamCorner = 2535 Taunton = 2536 TauntonBus = 2537 TavistockBus = 2538 Taynuilt = 2539 Teddington = 2540 TeesSideAirport = 2542 TeesValleyAirportBus = 2541 Teignmouth = 2543 TelfordCentral = 2544 Templecombe = 2545 Tenby = 2546 Teynham = 2547 ThamesDitton = 2548 Thatcham = 2549 ThattoHeath = 2550 Theale = 2553 TheHawthorns = 2551 TheLakes = 2552 TheobaldsGrove = 2554 Thetford = 2555 Thirsk = 2556 Thornaby = 2557 ThorneNorth = 2558 ThorneSouth = 2559 Thornford = 2560 Thornliebank = 2561 ThorntonAbbey = 2562 Thorntonhall = 2564 ThorntonHeath = 2563 ThorpeBay = 2565 ThorpeCulvert = 2566 ThorpeLeSoken = 2567 ThreeBridges = 2568 ThreeOaks = 2569 Thurgarton = 2570 Thurnscoe = 2571 Thurso = 2572 Thurston = 2573 TilburyRiversideBus = 2574 TilburyTown = 2575 TileHill = 2576 Tilehurst = 2577 TinsleyMeadowhallTram = 2578 TintagelBus = 2579 Tipton = 2580 TireeBus = 2582 TirPhil = 2581 Tisbury = 2583 TivertonBus = 2584 TivertonParkway = 2585 TobermoryMullBus = 2586 Todmorden = 2587 Tolworth = 2588 Tonbridge = 2590 Tondu = 2591 Tonfanau = 2592 TonPentre = 2589 Tonypandy = 2593 Tooting = 2594 Topsham = 2595 Torquay = 2596 Torre = 2597 Totnes = 2598 TottenhamCourtRoad = 2599 TottenhamHale = 2600 Totton = 2601 TowerHillUnderground = 2602 TownGreen = 2603 TraffordPark = 2604 TrecynonBus = 2605 Trefforest = 2606 TrefforestEstate = 2607 Trehafod = 2608 Treherbert = 2609 Treorchy = 2610 Trimley = 2611 Tring = 2612 TroedYRhiw = 2613 Troon = 2614 Trowbridge = 2615 Truro = 2616 Tulloch = 2617 TulseHill = 2618 TunbridgeWells = 2619 TurkeyStreet = 2620 TurnhamGreenUnderground = 2621 TurnpikeLane = 2622 TutburyHatton = 2623 Tweedbank = 2624 Twickenham = 2625 Twyford = 2626 TyCroes = 2627 TyGlas = 2628 Tygwyn = 2629 TyndrumLower = 2630 TynemouthTWMetro = 2631 Tyseley = 2632 Tywyn = 2633 Uckfield = 2634 Uddingston = 2635 UigSkyeBus = 2636 Ulceby = 2637 UllapoolBus = 2638 Ulleskelf = 2639 Ulverston = 2640 Umberleigh = 2641 University = 2642 UniversityTWMetro = 2643 Uphall = 2644 Upholland = 2645 Upminster = 2646 UpminsterUnderground = 2647 UpperHalliford = 2648 UpperHolloway = 2649 UpperTyndrum = 2650 UpperWarlingham = 2651 Upton = 2652 Upwey = 2653 Urmston = 2654 Uttoxeter = 2655 Valley = 2656 ValleyCentertainmentTram = 2657 Vauxhall = 2658 VirginiaWater = 2659 Waddon = 2660 WadebridgeBusStation = 2661 Wadhurst = 2662 Wainfleet = 2663 WakefieldKirkgate = 2664 WakefieldWestgate = 2665 Walkden = 2666 WallaseyGroveRoad = 2667 WallaseyVillage = 2668 WallingfordMarketPlaceBus = 2669 Wallington = 2670 Wallyford = 2671 Walmer = 2672 Walsall = 2673 Walsden = 2674 WalthamCross = 2675 WalthamstowCentral = 2676 WalthamstowQueensRoad = 2677 WaltonMerseyside = 2678 WaltonOnThames = 2679 WaltonOnTheNaze = 2680 Wanborough = 2681 WandsworthCommon = 2682 WandsworthRoad = 2683 WandsworthTown = 2684 WansteadPark = 2685 WantageBus = 2686 Wapping = 2687 Warblington = 2688 Ware = 2689 Wareham = 2690 Wargrave = 2691 Warminster = 2692 Warnham = 2693 WarringtonBankQuay = 2694 WarringtonCentral = 2695 WarringtonWest = 2696 Warwick = 2697 WarwickParkway = 2698 WarwickUniversityBus = 2699 WatchetBus = 2700 Waterbeach = 2702 Wateringbury = 2703 WaterlooMerseyside = 2704 WaterlooUnderground = 2705 WaterOrton = 2701 WatfordHighStreet = 2706 WatfordJunction = 2707 WatfordNorth = 2708 Watlington = 2709 WattonAtStone = 2710 WaunGronPark = 2711 WavertreeTechPark = 2712 Wedgwood = 2713 WedgwoodOldRoadBridgeBus = 2714 Weeley = 2715 Weeton = 2716 WelhamGreen = 2717 Welling = 2718 Wellingborough = 2719 WellingtonShropshire = 2720 WellsBus = 2721 WellsNextTheSeaBus = 2722 Welshpool = 2723 WelwynGardenCity = 2724 WelwynNorth = 2725 Wem = 2726 WembleyCentral = 2727 WembleyStadium = 2728 WemyssBay = 2729 Wendover = 2730 Wennington = 2731 WestAllerton = 2732 WestBrompton = 2733 Westbury = 2754 WestburyBus = 2755 WestByfleet = 2734 WestCalder = 2735 Westcliff = 2756 WestcombePark = 2757 WestCroydon = 2736 WestDrayton = 2737 WestDulwich = 2738 WestEaling = 2739 Westenhanger = 2758 Westerfield = 2760 WesterHailes = 2759 Westerton = 2761 WestgateOnSea = 2762 WestHam = 2740 WestHampstead = 2741 WestHampsteadThameslink = 2742 WestHorndon = 2743 Westhoughton = 2763 WestKilbride = 2744 WestKirby = 2745 WestMalling = 2746 WestNorwood = 2747 WestonMilton = 2764 WestonSuperMare = 2765 WestRuislip = 2748 WestRunton = 2749 WestStLeonards = 2750 WestSutton = 2751 WestWickham = 2752 WestWorthing = 2753 Wetheral = 2766 Weybridge = 2767 Weymouth = 2768 WeymouthQuayBus = 2769 WhaleyBridge = 2770 Whalley = 2771 Whatstandwell = 2772 Whifflet = 2773 Whimple = 2774 Whinhill = 2775 Whiston = 2776 Whitby = 2777 WhitbyBusStation = 2778 WhitchurchGlamorgan = 2779 WhitchurchHampshire = 2780 WhitchurchShropshire = 2781 Whitechapel = 2784 Whitecraigs = 2785 WhiteHartLane = 2782 Whitehaven = 2786 WhitehillPrinceOfWalesBus = 2787 WhiteNotley = 2783 Whitland = 2788 WhitleyBridge = 2789 WhitlocksEnd = 2790 Whitstable = 2791 Whittlesea = 2792 WhittlesfordParkway = 2793 Whitton = 2794 Whitwell = 2795 Whyteleafe = 2796 WhyteleafeSouth = 2797 Wick = 2798 Wickford = 2799 WickhamMarket = 2800 Widdrington = 2801 Widnes = 2802 WidneyManor = 2803 WiganNorthWestern = 2804 WiganWallgate = 2805 Wigton = 2806 Wildmill = 2807 WillesdenJunction = 2808 Williamwood = 2809 Willington = 2810 Wilmcote = 2811 Wilmslow = 2812 Wilnecote = 2813 Wimbledon = 2814 WimbledonChase = 2815 Winchelsea = 2816 Winchester = 2817 Winchfield = 2818 WinchmoreHill = 2819 Windermere = 2820 WindsorEtonCentral = 2821 WindsorEtonRiverside = 2822 Winnersh = 2823 WinnershTriangle = 2824 Winsford = 2825 WisbechHorsefairBus = 2826 Wishaw = 2827 Witham = 2828 Witley = 2829 WitneyMarketPlaceBus = 2830 Witton = 2831 Wivelsfield = 2832 Wivenhoe = 2833 WoburnSands = 2834 Woking = 2835 Wokingham = 2836 Woldingham = 2837 Wolverhampton = 2838 Wolverton = 2839 Wombwell = 2840 Woodbridge = 2843 WoodburnRoadTram = 2844 WoodEnd = 2841 WoodgrangePark = 2845 Woodhall = 2846 Woodhouse = 2847 Woodlesford = 2848 Woodley = 2849 WoodleyHuntersInnBus = 2850 Woodmansterne = 2851 Woodsmoor = 2852 WoodStreet = 2842 Wool = 2853 Woolston = 2854 WoolwichArsenal = 2856 WoolwichDockyard = 2857 WoolwichElizabethLine = 2855 WoottonBassettBus = 2858 WoottonWawen = 2859 WorcesterForegateStreet = 2860 WorcesterPark = 2861 WorcestershireParkway = 2863 WorcesterShrubHill = 2862 Workington = 2864 WorkingtonBusStation = 2865 Worksop = 2866 Worle = 2867 Worplesdon = 2868 Worstead = 2869 Worthing = 2870 Wrabness = 2871 Wraysbury = 2872 Wrenbury = 2873 Wressle = 2874 WrexhamCentral = 2875 WrexhamGeneral = 2876 Wye = 2877 Wylam = 2878 WyldeGreen = 2879 Wymondham = 2880 Wythall = 2881 Yalding = 2882 YardleyWood = 2883 Yarm = 2884 YarmouthIsleOfWight = 2885 Yate = 2886 Yatton = 2887 Yeoford = 2888 YeovilBusStation = 2889 YeovilJunction = 2890 YeovilPenMill = 2891 Yetminster = 2892 Ynyswen = 2893 Yoker = 2894 York = 2895 Yorton = 2896 YstradMynach = 2897 YstradRhondda = 2898"
  },
  "api/DarwinNet.Objects.StationBoard.html": {
    "href": "api/DarwinNet.Objects.StationBoard.html",
    "title": "Class StationBoard | Darwin.Net",
    "keywords": "Class StationBoard Namespace DarwinNet.Objects Assembly DarwinNet.dll Defines a station board located at a station public class StationBoard Inheritance object StationBoard Derived StationBoardWithDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AreServicesAvailable An optional value that indicates if services are currently available for this station board. If this value is present with the value \"false\" then no services will be returned in the service lists. This value may be set, for example, if access to a station has been closed to the public at short notice, even though the scheduled services are still running. It would be usual in such cases for one of the nrccMessages to describe why the list of services has been suppressed. public bool AreServicesAvailable { get; } Property Value bool BusServices An IList<T> of ServiceItem objects for the bus services appearing on the station board. If no services exist, this will contain zero items or be null. public IList<ServiceItem>? BusServices { get; } Property Value IList<ServiceItem> FerryServices An IList<T> of ServiceItem objects for the ferry services appearing on the station board. If no services exist, this will contain zero items or be null. public IList<ServiceItem>? FerryServices { get; } Property Value IList<ServiceItem> FilterLocationName If a filter was requested, the location name of the filter location. public string? FilterLocationName { get; } Property Value string FilterStation If a filter was requested, the Station of the filter location. public Station? FilterStation { get; } Property Value Station? FilterType If a filter was requested, the type of filter. public FilterType? FilterType { get; } Property Value FilterType? GeneratedAt The time at which the StationBoard was generated public DateTime GeneratedAt { get; } Property Value DateTime IsPlatformAvailable An optional value that indicates if platform information is available. If this value is present with the value \"true\" then platform information will be returned in the service lists. If this value is not present, or has the value \"false\", then the platform \"heading\" should be suppressed in the user interface for this station board. public bool? IsPlatformAvailable { get; } Property Value bool? LocationName The name of the location that the station board is for. public string LocationName { get; } Property Value string NrccMessages An optional list of textual messages that should be displayed with the station board. The messages are typically used to display important disruption information that applies to the location that the station board was for. public IList<string>? NrccMessages { get; } Property Value IList<string> Station The station for the station board. public Station Station { get; } Property Value Station TrainServices An IList<T> of ServiceItem objects for the train services appearing on the station board. If no services exist, this will contain zero items or be null. public IList<ServiceItem>? TrainServices { get; } Property Value IList<ServiceItem>"
  },
  "api/DarwinNet.Objects.StationBoardWithDetails.html": {
    "href": "api/DarwinNet.Objects.StationBoardWithDetails.html",
    "title": "Class StationBoardWithDetails | Darwin.Net",
    "keywords": "Class StationBoardWithDetails Namespace DarwinNet.Objects Assembly DarwinNet.dll Defines a station board located at a station with additional details public class StationBoardWithDetails : StationBoard Inheritance object StationBoard StationBoardWithDetails Inherited Members StationBoard.GeneratedAt StationBoard.LocationName StationBoard.Station StationBoard.FilterLocationName StationBoard.FilterStation StationBoard.FilterType StationBoard.NrccMessages StationBoard.IsPlatformAvailable object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AreServicesAvailable An optional value that indicates if services are currently available for this station board. If this value is present with the value \"false\" then no services will be returned in the service lists. This value may be set, for example, if access to a station has been closed to the public at short notice, even though the scheduled services are still running. It would be usual in such cases for one of the nrccMessages to describe why the list of services has been suppressed. public bool AreServicesAvailable { get; } Property Value bool BusServices An IList<T> of ServiceItemWithCallingPoints objects for the bus services appearing on the station board. If no services exist, this will contain zero items or be null. public IList<ServiceItemWithCallingPoints>? BusServices { get; } Property Value IList<ServiceItemWithCallingPoints> FerryServices An IList<T> of ServiceItemWithCallingPoints objects for the ferry services appearing on the station board. If no services exist, this will contain zero items or be null. public IList<ServiceItemWithCallingPoints>? FerryServices { get; } Property Value IList<ServiceItemWithCallingPoints> TrainServices An IList<T> of ServiceItemWithCallingPoints objects for the train services appearing on the station board. If no services exist, this will contain zero items or be null. public IList<ServiceItemWithCallingPoints>? TrainServices { get; } Property Value IList<ServiceItemWithCallingPoints>"
  },
  "api/DarwinNet.Objects.Toilet.html": {
    "href": "api/DarwinNet.Objects.Toilet.html",
    "title": "Enum Toilet | Darwin.Net",
    "keywords": "Enum Toilet Namespace DarwinNet.Objects Assembly DarwinNet.dll public enum Toilet Fields Accessible = 3 None = 1 Standard = 2 Unknown = 0"
  },
  "api/DarwinNet.Requests.html": {
    "href": "api/DarwinNet.Requests.html",
    "title": "Namespace DarwinNet.Requests | Darwin.Net",
    "keywords": "Namespace DarwinNet.Requests Classes Requests Represents a collection of methods for making requests to the Darwin API."
  },
  "api/DarwinNet.Requests.Requests.html": {
    "href": "api/DarwinNet.Requests.Requests.html",
    "title": "Class Requests | Darwin.Net",
    "keywords": "Class Requests Namespace DarwinNet.Requests Assembly DarwinNet.dll Represents a collection of methods for making requests to the Darwin API. public class Requests Inheritance object Requests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetArrivalBoardAsync(int, Station, TimeSpan, Station?, FilterType, TimeSpan?) Returns all public arrivals for the supplied station within a defined time window. public Task<StationBoard> GetArrivalBoardAsync(int numRows, Station station, TimeSpan timeWindow, Station? filterStation = null, FilterType filterType = FilterType.To, TimeSpan? timeOffset = null) Parameters numRows int The number of services to return in the resulting station board. Has to be between 0 and 150 exclusive. station Station The Station for which the request is being made. timeWindow TimeSpan How far into the past or future, in minutes (relative to timeOffset), to return services for. Has to be between -120 and 120 minutes exclusive. filterStation Station? The Station of either an origin or destination location to filter in. filterType FilterType The FilterType to apply. Filters services to include only those originating or terminating at the filterStation. Defaults to \"To\". timeOffset TimeSpan? An offset in minutes against the current time to provide the station board for. Has to be between -120 and 120 minutes exclusive. Returns Task<StationBoard> A StationBoard object containing the requested details. Exceptions ArgumentOutOfRangeException When numRows, timeWindow or timeOffset are out of range. StationCrsNullException When station or filterStation do not have a CRS code associated with them. InvalidEnumArgumentException When filterType doesn't have a valid string value associated with it. GetArrivalBoardWithDetailsAsync(int, Station, TimeSpan, Station?, FilterType, TimeSpan?) Returns all public arrivals for the supplied station within a defined time window, including service details. public Task<StationBoardWithDetails> GetArrivalBoardWithDetailsAsync(int numRows, Station station, TimeSpan timeWindow, Station? filterStation = null, FilterType filterType = FilterType.To, TimeSpan? timeOffset = null) Parameters numRows int The number of services to return in the resulting station board. Has to be between 0 and 10 exclusive. station Station The Station for which the request is being made. timeWindow TimeSpan How far into the past or future, in minutes (relative to timeOffset), to return services for. Has to be between -120 and 120 minutes exclusive. filterStation Station? The Station of either an origin or destination location to filter in. filterType FilterType The FilterType to apply. Filters services to include only those originating or terminating at the filterStation. Defaults to \"To\". timeOffset TimeSpan? An offset in minutes against the current time to provide the station board for. Has to be between -120 and 120 minutes exclusive. Returns Task<StationBoardWithDetails> A StationBoardWithDetails object containing the requested details. Exceptions ArgumentOutOfRangeException When numRows, timeWindow or timeOffset are out of range. StationCrsNullException When station or filterStation do not have a CRS code associated with them. InvalidEnumArgumentException When filterType doesn't have a valid string value associated with it. GetArrivalDepartureBoardAsync(int, Station, TimeSpan, Station?, FilterType, TimeSpan?) Returns all public arrivals and departures for a supplied station within a defined time window. public Task<StationBoard> GetArrivalDepartureBoardAsync(int numRows, Station station, TimeSpan timeWindow, Station? filterStation = null, FilterType filterType = FilterType.To, TimeSpan? timeOffset = null) Parameters numRows int The number of services to return in the resulting station board. Has to be between 0 and 150 exclusive. station Station The Station for which the request is being made. timeWindow TimeSpan How far into the past or future, in minutes (relative to timeOffset), to return services for. Has to be between -120 and 120 minutes exclusive. filterStation Station? The Station of either an origin or destination location to filter in. filterType FilterType The FilterType to apply. Filters services to include only those originating or terminating at the filterStation. Defaults to \"To\". timeOffset TimeSpan? An offset in minutes against the current time to provide the station board for. Has to be between -120 and 120 minutes exclusive. Returns Task<StationBoard> A StationBoard object containing the requested details. Exceptions ArgumentOutOfRangeException When numRows, timeWindow or timeOffset are out of range. StationCrsNullException When station or filterStation do not have a CRS code associated with them. InvalidEnumArgumentException When filterType doesn't have a valid string value associated with it. GetArrivalDepartureBoardWithDetailsAsync(int, Station, TimeSpan, Station?, FilterType, TimeSpan?) Returns all public arrivals and departures for the supplied station within a defined time window, including service details. public Task<StationBoardWithDetails> GetArrivalDepartureBoardWithDetailsAsync(int numRows, Station station, TimeSpan timeWindow, Station? filterStation = null, FilterType filterType = FilterType.To, TimeSpan? timeOffset = null) Parameters numRows int The number of services to return in the resulting station board. Has to be between 0 and 10 exclusive. station Station The Station for which the request is being made. timeWindow TimeSpan How far into the past or future, in minutes (relative to timeOffset), to return services for. Has to be between -120 and 120 minutes exclusive. filterStation Station? The Station of either an origin or destination location to filter in. filterType FilterType The FilterType to apply. Filters services to include only those originating or terminating at the filterStation. Defaults to \"To\". timeOffset TimeSpan? An offset in minutes against the current time to provide the station board for. Has to be between -120 and 120 minutes exclusive. Returns Task<StationBoardWithDetails> A StationBoardWithDetails object containing the requested details. Exceptions ArgumentOutOfRangeException When numRows, timeWindow or timeOffset are out of range. StationCrsNullException When station or filterStation do not have a CRS code associated with them. InvalidEnumArgumentException When filterType doesn't have a valid string value associated with it. GetDepartureBoardAsync(int, Station, TimeSpan, Station?, FilterType, TimeSpan?) Returns all public departures for the supplied station within a defined time window. public Task<StationBoard> GetDepartureBoardAsync(int numRows, Station station, TimeSpan timeWindow, Station? filterStation = null, FilterType filterType = FilterType.To, TimeSpan? timeOffset = null) Parameters numRows int The number of services to return in the resulting station board. Has to be between 0 and 150 exclusive. station Station The Station for which the request is being made. timeWindow TimeSpan How far into the past or future, in minutes (relative to timeOffset), to return services for. Has to be between -120 and 120 minutes exclusive. filterStation Station? The Station of either an origin or destination location to filter in. filterType FilterType The FilterType to apply. Filters services to include only those originating or terminating at the filterStation. Defaults to \"To\". timeOffset TimeSpan? An offset in minutes against the current time to provide the station board for. Has to be between -120 and 120 minutes exclusive. Returns Task<StationBoard> A StationBoard object containing the requested details. Exceptions ArgumentOutOfRangeException When numRows, timeWindow or timeOffset are out of range. StationCrsNullException When station or filterStation do not have a CRS code associated with them. InvalidEnumArgumentException When filterType doesn't have a valid string value associated with it. GetDepartureBoardWithDetailsAsync(int, Station, TimeSpan, Station?, FilterType, TimeSpan?) Returns all public departures for the supplied station within a defined time window, including service details. public Task<StationBoardWithDetails> GetDepartureBoardWithDetailsAsync(int numRows, Station station, TimeSpan timeWindow, Station? filterStation = null, FilterType filterType = FilterType.To, TimeSpan? timeOffset = null) Parameters numRows int The number of services to return in the resulting station board. Has to be between 0 and 10 exclusive. station Station The Station for which the request is being made. timeWindow TimeSpan How far into the past or future, in minutes (relative to timeOffset), to return services for. Has to be between -120 and 120 minutes exclusive. filterStation Station? The Station of either an origin or destination location to filter in. filterType FilterType The FilterType to apply. Filters services to include only those originating or terminating at the filterStation. Defaults to \"To\". timeOffset TimeSpan? An offset in minutes against the current time to provide the station board for. Has to be between -120 and 120 minutes exclusive. Returns Task<StationBoardWithDetails> A StationBoardWithDetails object containing the requested details. Exceptions ArgumentOutOfRangeException When numRows, timeWindow or timeOffset are out of range. StationCrsNullException When station or filterStation do not have a CRS code associated with them. InvalidEnumArgumentException When filterType doesn't have a valid string value associated with it. GetFastestDeparturesAsync(Station, IList<Station>, TimeSpan, TimeSpan?) Returns the public departure for the supplied station a defined time window to the locations specified in the filter with the earliest arrival time at the filtered location. public Task<DeparturesBoard> GetFastestDeparturesAsync(Station station, IList<Station> filterList, TimeSpan timeWindow, TimeSpan? timeOffset = null) Parameters station Station The Station for which the request is being made. filterList IList<Station> A list of Station values of the destinations location to filter. At least 1 but not greater than 15 must be supplied. timeWindow TimeSpan How far into the past or future, in minutes (relative to timeOffset), to return services for. Has to be between -120 and 120 minutes exclusive. timeOffset TimeSpan? An offset in minutes against the current time to provide the station board for. Has to be between -120 and 120 minutes exclusive. Returns Task<DeparturesBoard> A DeparturesBoard object containing the requested details. Exceptions ArgumentOutOfRangeException When timeWindow, filterList or timeOffset are out of range. StationCrsNullException When station or filterStation do not have a CRS code associated with them. GetFastestDeparturesWithDetailsAsync(Station, IList<Station>, TimeSpan, TimeSpan?) Returns the public departure for the supplied station a defined time window to the locations specified in the filter with the earliest arrival time at the filtered location, including service details. public Task<DeparturesBoardWithDetails> GetFastestDeparturesWithDetailsAsync(Station station, IList<Station> filterList, TimeSpan timeWindow, TimeSpan? timeOffset = null) Parameters station Station The Station for which the request is being made. filterList IList<Station> A list of Station values of the destinations location to filter. At least 1 but not greater than 10 must be supplied. timeWindow TimeSpan How far into the past or future, in minutes (relative to timeOffset), to return services for. Has to be between -120 and 120 minutes exclusive. timeOffset TimeSpan? An offset in minutes against the current time to provide the station board for. Has to be between -120 and 120 minutes exclusive. Returns Task<DeparturesBoardWithDetails> A DeparturesBoardWithDetails object containing the requested details. Exceptions ArgumentOutOfRangeException When timeWindow, filterList or timeOffset are out of range. StationCrsNullException When station or filterStation do not have a CRS code associated with them. GetNextDeparturesAsync(Station, IList<Station>, TimeSpan, TimeSpan?) Returns the next public departure for the supplied station within a defined time window to the locations specified in the filter. public Task<DeparturesBoard> GetNextDeparturesAsync(Station station, IList<Station> filterList, TimeSpan timeWindow, TimeSpan? timeOffset = null) Parameters station Station The Station for which the request is being made. filterList IList<Station> A list of Station values of the destinations location to filter. At least 1 but not greater than 15 must be supplied. timeWindow TimeSpan How far into the past or future, in minutes (relative to timeOffset), to return services for. Has to be between -120 and 120 minutes exclusive. timeOffset TimeSpan? An offset in minutes against the current time to provide the station board for. Has to be between -120 and 120 minutes exclusive. Returns Task<DeparturesBoard> A DeparturesBoard object containing the requested details. Exceptions ArgumentOutOfRangeException When timeWindow, filterList or timeOffset are out of range. StationCrsNullException When station or filterStation do not have a CRS code associated with them. GetNextDeparturesWithDetailsAsync(Station, IList<Station>, TimeSpan, TimeSpan?) Returns the next public departure for the supplied station within a defined time window to the locations specified in the filter, including service details. public Task<DeparturesBoardWithDetails> GetNextDeparturesWithDetailsAsync(Station station, IList<Station> filterList, TimeSpan timeWindow, TimeSpan? timeOffset = null) Parameters station Station The Station for which the request is being made. filterList IList<Station> A list of Station values of the destinations location to filter. At least 1 but not greater than 15 must be supplied. timeWindow TimeSpan How far into the past or future, in minutes (relative to timeOffset), to return services for. Has to be between -120 and 120 minutes exclusive. timeOffset TimeSpan? An offset in minutes against the current time to provide the station board for. Has to be between -120 and 120 minutes exclusive. Returns Task<DeparturesBoardWithDetails> A DeparturesBoardWithDetails object containing the requested details. Exceptions ArgumentOutOfRangeException When timeWindow, filterList or timeOffset are out of range. StationCrsNullException When station or filterStation do not have a CRS code associated with them. GetServiceDetailsAsync(string) Returns service details for a specific service identified by a station board. These details are supplied relative to the station board from which the serviceID field value was generated. Service details are only available while the service appears on the station board from which it was obtained. This is normally for two minutes after it is expected to have departed, or after a terminal arrival. public Task<ServiceDetails> GetServiceDetailsAsync(string serviceId) Parameters serviceId string The service ID of the service to request the details of. The service ID is obtained from a service listed in a StationBoard object returned from any other request. Returns Task<ServiceDetails> A ServiceDetails object containing the requested details."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "API Reference | Darwin.Net",
    "keywords": "API Reference Welcome to the Darwin.Net API documentation. You will find namespaces, and within those classes, related to Darwin.Net."
  },
  "articles/getting_started/build.html": {
    "href": "articles/getting_started/build.html",
    "title": "Build Locally | Darwin.Net",
    "keywords": "Build Locally To get a local copy built, follow these simple example steps. Obtain an API key from National Rail Enquiries Clone the repository git clone https://github.com/rhys-wootton/Darwin.Net.git Create an app.config file within the Darwin.Net project and add the following <?xml version=\"1.0\" encoding=\"utf-8\" ?> <configuration> <appSettings> <add key=\"DarwinApiKey\" value=\"YOUR_API_KEY\" /> <add key=\"DarwinUrl\" value=\"https://lite.realtime.nationalrail.co.uk/OpenLDBWS/ldb12.asmx\"/> <add key=\"DarwinActionNameUrl\" value=\"http://thalesgroup.com/RTTI/2021-11-01/ldb/\"/> <add key=\"DarwinTokenTypeUrl\" value=\"http://thalesgroup.com/RTTI/2013-11-28/Token/types\"/> </appSettings> </configuration> Build the project"
  },
  "articles/getting_started/using.html": {
    "href": "articles/getting_started/using.html",
    "title": "Using Darwin.Net | Darwin.Net",
    "keywords": "Using Darwin.Net To get started, this single line of code will give you access to all the requests that Darwin.Net can make: Darwin.Net.Darwin darwin = new Darwin.Net.Darwin(); From here, you are able to call some of the following requests: Get up to 10 arrivals at a station for the next 90 minutes int maxArrivals = 10; Station station = Station.LondonBridge; TimeSpan timeWindow = TimeSpan.FromMinutes(90); StationBoard response = await darwin.Requests.GetArrivalBoardAsync(maxArrivals, station, timeWindow); Get up to 5 departures at a station within the last hour with specific calling points int maxArrivals = 5; Station station = Station.GlasgowCentral; TimeSpan timeWindow = TimeSpan.FromMinutes(60); TimeSpan offset = TimeSpan.FromMinutes(-60); StationBoardWithDetails response = await darwin.Requests.GetDepartureBoardWithDetailsAsync(maxArrivals, station, timeWindow, timeOffset: offset); Get the next fastest services from a station to a list of station within the next 30 minutes Station station = Station.LondonEuston; List<Station> stationList = new List<Station>() { Station.Coventry, Station.WatfordJunction, Station.MiltonKeynesCentral }; TimeSpan timeWindow = TimeSpan.FromMinutes(30); DeparturesBoardWithDetails response = await darwin.Requests.GetFastestDeparturesWithDetailsAsync(station, stationList, timeWindow); Get specific services details int maxArrivals = 5; Station station = Station.GlasgowCentral; TimeSpan timeWindow = TimeSpan.FromMinutes(60); TimeSpan offset = TimeSpan.FromMinutes(-60); StationBoard response = await darwin.Requests.GetArrivalBoardAsync(maxArrivals, station, timeWindow, timeOffset: offset); ServiceDetails service = await darwin.Requests.GetServiceDetailsAsync(response.TrainServices[0].RetailServiceId);"
  },
  "articles/preamble.html": {
    "href": "articles/preamble.html",
    "title": "Preamble | Darwin.Net",
    "keywords": "Preamble To utilize this wrapper, it's essential to have a solid grasp of Object Oriented Programming, the C# programming language, and Task-based Asynchronous Pattern. It is also advised that you have a good understanding of the Darwin system used by National Rail UK, and what content it can deliver depending on what you request. If you're a beginner to C# or programming in general, using this library may pose a challenge. However, there's a wealth of resources available to help you learn the language. Microsoft offers a comprehensive page dedicated to such resources: https://dotnet.microsoft.com/en-us/learn/csharp. Supported Platforms Darwin.Net targets .NET Standard 2.1, allowing you to utilise it within many different implementations. However, support is only provided to specific platforms. Platform/Framework Supported? Notes .NET ✔️ .NET Core 3.1 and .NET 5.0 should work. .NET 6.0 LTS and .NET 7.0 are supported. .NET Framework ⚠️ .NET Framework 4.6.1 through 4.8 should work fine, though it is recommended that you use the latest or LTS version of .NET instead. Mono ❌️ Mono has numerous flaws that can break things without warning. If you need a cross-platform runtime, use .NET. Wine ❌️ Wine is a compatibility layer that allows Windows applications to run on Unix-like operating systems. It does not support .NET Standard 2.1 natively, and Darwin.Net does not provide support for it as a platform. If you aim to use Darwin.Net on a platform that isn't supported, you will find it harder to get support for any issues that may arise. Therefore, it is recommended that you use the .NET platform wherever you can, and .NET Framework as a fallback legacy option."
  },
  "index.html": {
    "href": "index.html",
    "title": "Darwin.Net Documentation | Darwin.Net",
    "keywords": "Darwin.Net Documentation Darwin.Net (D#+) is a powerful and user-friendly C# wrapper for the National Rail UK Darwin OpenLDBWS API. Source and Contributors Darwin.Net is licensed under GNU Affero General Public License v3.0 License, as detailed in the license found in the repository. The repository containing the source code for this library can be found here. Contributions are welcomed."
  }
}