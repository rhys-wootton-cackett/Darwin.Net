### YamlMime:ManagedReference
items:
- uid: Darwin.Net.Objects.StationBoardWithDetails
  commentId: T:Darwin.Net.Objects.StationBoardWithDetails
  id: StationBoardWithDetails
  parent: Darwin.Net.Objects
  children:
  - Darwin.Net.Objects.StationBoardWithDetails.AreServicesAvailable
  - Darwin.Net.Objects.StationBoardWithDetails.BusServices
  - Darwin.Net.Objects.StationBoardWithDetails.FerryServices
  - Darwin.Net.Objects.StationBoardWithDetails.TrainServices
  langs:
  - csharp
  - vb
  name: StationBoardWithDetails
  nameWithType: StationBoardWithDetails
  fullName: Darwin.Net.Objects.StationBoardWithDetails
  type: Class
  source:
    remote:
      path: Darwin.Net/Objects/StationBoardWithDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: StationBoardWithDetails
    path: ../Darwin.Net/Objects/StationBoardWithDetails.cs
    startLine: 13
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nDefines a station board located at a station with additional details\n"
  example: []
  syntax:
    content: 'public class StationBoardWithDetails : StationBoard'
    content.vb: Public Class StationBoardWithDetails Inherits StationBoard
  inheritance:
  - System.Object
  - Darwin.Net.Objects.StationBoard
  inheritedMembers:
  - Darwin.Net.Objects.StationBoard.GeneratedAt
  - Darwin.Net.Objects.StationBoard.LocationName
  - Darwin.Net.Objects.StationBoard.Station
  - Darwin.Net.Objects.StationBoard.FilterLocationName
  - Darwin.Net.Objects.StationBoard.FilterStation
  - Darwin.Net.Objects.StationBoard.FilterType
  - Darwin.Net.Objects.StationBoard.NrccMessages
  - Darwin.Net.Objects.StationBoard.IsPlatformAvailable
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Darwin.Net.Objects.StationBoardWithDetails.AreServicesAvailable
  commentId: P:Darwin.Net.Objects.StationBoardWithDetails.AreServicesAvailable
  id: AreServicesAvailable
  parent: Darwin.Net.Objects.StationBoardWithDetails
  langs:
  - csharp
  - vb
  name: AreServicesAvailable
  nameWithType: StationBoardWithDetails.AreServicesAvailable
  fullName: Darwin.Net.Objects.StationBoardWithDetails.AreServicesAvailable
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/StationBoardWithDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: AreServicesAvailable
    path: ../Darwin.Net/Objects/StationBoardWithDetails.cs
    startLine: 21
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nAn optional value that indicates if services are currently available for this station board. If this value is present with the value &quot;false&quot; then no services will be returned in the service lists. \nThis value may be set, for example, if access to a station has been closed to the public at short notice, even though the scheduled services are still running. \nIt would be usual in such cases for one of the nrccMessages to describe why the list of services has been suppressed.\n"
  example: []
  syntax:
    content: public bool AreServicesAvailable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AreServicesAvailable As Boolean
  overload: Darwin.Net.Objects.StationBoardWithDetails.AreServicesAvailable*
- uid: Darwin.Net.Objects.StationBoardWithDetails.TrainServices
  commentId: P:Darwin.Net.Objects.StationBoardWithDetails.TrainServices
  id: TrainServices
  parent: Darwin.Net.Objects.StationBoardWithDetails
  langs:
  - csharp
  - vb
  name: TrainServices
  nameWithType: StationBoardWithDetails.TrainServices
  fullName: Darwin.Net.Objects.StationBoardWithDetails.TrainServices
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/StationBoardWithDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: TrainServices
    path: ../Darwin.Net/Objects/StationBoardWithDetails.cs
    startLine: 26
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nAn <xref href=\"System.Collections.Generic.IList%601\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"Darwin.Net.Objects.ServiceItemWithCallingPoints\" data-throw-if-not-resolved=\"false\"></xref> objects for the train services appearing on the station board. If no services exist, this will contain zero items or be null.\n"
  example: []
  syntax:
    content: public IList<ServiceItemWithCallingPoints>? TrainServices { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Darwin.Net.Objects.ServiceItemWithCallingPoints}
    content.vb: Public Property TrainServices As IList(Of ServiceItemWithCallingPoints)
  overload: Darwin.Net.Objects.StationBoardWithDetails.TrainServices*
- uid: Darwin.Net.Objects.StationBoardWithDetails.BusServices
  commentId: P:Darwin.Net.Objects.StationBoardWithDetails.BusServices
  id: BusServices
  parent: Darwin.Net.Objects.StationBoardWithDetails
  langs:
  - csharp
  - vb
  name: BusServices
  nameWithType: StationBoardWithDetails.BusServices
  fullName: Darwin.Net.Objects.StationBoardWithDetails.BusServices
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/StationBoardWithDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: BusServices
    path: ../Darwin.Net/Objects/StationBoardWithDetails.cs
    startLine: 31
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nAn <xref href=\"System.Collections.Generic.IList%601\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"Darwin.Net.Objects.ServiceItemWithCallingPoints\" data-throw-if-not-resolved=\"false\"></xref> objects for the bus services appearing on the station board. If no services exist, this will contain zero items or be null.\n"
  example: []
  syntax:
    content: public IList<ServiceItemWithCallingPoints>? BusServices { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Darwin.Net.Objects.ServiceItemWithCallingPoints}
    content.vb: Public Property BusServices As IList(Of ServiceItemWithCallingPoints)
  overload: Darwin.Net.Objects.StationBoardWithDetails.BusServices*
- uid: Darwin.Net.Objects.StationBoardWithDetails.FerryServices
  commentId: P:Darwin.Net.Objects.StationBoardWithDetails.FerryServices
  id: FerryServices
  parent: Darwin.Net.Objects.StationBoardWithDetails
  langs:
  - csharp
  - vb
  name: FerryServices
  nameWithType: StationBoardWithDetails.FerryServices
  fullName: Darwin.Net.Objects.StationBoardWithDetails.FerryServices
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/StationBoardWithDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: FerryServices
    path: ../Darwin.Net/Objects/StationBoardWithDetails.cs
    startLine: 36
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nAn <xref href=\"System.Collections.Generic.IList%601\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"Darwin.Net.Objects.ServiceItemWithCallingPoints\" data-throw-if-not-resolved=\"false\"></xref> objects for the ferry services appearing on the station board. If no services exist, this will contain zero items or be null.\n"
  example: []
  syntax:
    content: public IList<ServiceItemWithCallingPoints>? FerryServices { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Darwin.Net.Objects.ServiceItemWithCallingPoints}
    content.vb: Public Property FerryServices As IList(Of ServiceItemWithCallingPoints)
  overload: Darwin.Net.Objects.StationBoardWithDetails.FerryServices*
references:
- uid: Darwin.Net.Objects
  commentId: N:Darwin.Net.Objects
  name: Darwin.Net.Objects
  nameWithType: Darwin.Net.Objects
  fullName: Darwin.Net.Objects
  spec.csharp:
  - uid: Darwin
    name: Darwin
  - name: .
  - uid: Darwin.Net
    name: Net
  - name: .
  - uid: Darwin.Net.Objects
    name: Objects
  spec.vb:
  - uid: Darwin
    name: Darwin
  - name: .
  - uid: Darwin.Net
    name: Net
  - name: .
  - uid: Darwin.Net.Objects
    name: Objects
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Darwin.Net.Objects.StationBoard
  commentId: T:Darwin.Net.Objects.StationBoard
  parent: Darwin.Net.Objects
  name: StationBoard
  nameWithType: StationBoard
  fullName: Darwin.Net.Objects.StationBoard
- uid: Darwin.Net.Objects.StationBoard.GeneratedAt
  commentId: P:Darwin.Net.Objects.StationBoard.GeneratedAt
  parent: Darwin.Net.Objects.StationBoard
  name: GeneratedAt
  nameWithType: StationBoard.GeneratedAt
  fullName: Darwin.Net.Objects.StationBoard.GeneratedAt
- uid: Darwin.Net.Objects.StationBoard.LocationName
  commentId: P:Darwin.Net.Objects.StationBoard.LocationName
  parent: Darwin.Net.Objects.StationBoard
  name: LocationName
  nameWithType: StationBoard.LocationName
  fullName: Darwin.Net.Objects.StationBoard.LocationName
- uid: Darwin.Net.Objects.StationBoard.Station
  commentId: P:Darwin.Net.Objects.StationBoard.Station
  parent: Darwin.Net.Objects.StationBoard
  name: Station
  nameWithType: StationBoard.Station
  fullName: Darwin.Net.Objects.StationBoard.Station
- uid: Darwin.Net.Objects.StationBoard.FilterLocationName
  commentId: P:Darwin.Net.Objects.StationBoard.FilterLocationName
  parent: Darwin.Net.Objects.StationBoard
  name: FilterLocationName
  nameWithType: StationBoard.FilterLocationName
  fullName: Darwin.Net.Objects.StationBoard.FilterLocationName
- uid: Darwin.Net.Objects.StationBoard.FilterStation
  commentId: P:Darwin.Net.Objects.StationBoard.FilterStation
  parent: Darwin.Net.Objects.StationBoard
  name: FilterStation
  nameWithType: StationBoard.FilterStation
  fullName: Darwin.Net.Objects.StationBoard.FilterStation
- uid: Darwin.Net.Objects.StationBoard.FilterType
  commentId: P:Darwin.Net.Objects.StationBoard.FilterType
  parent: Darwin.Net.Objects.StationBoard
  name: FilterType
  nameWithType: StationBoard.FilterType
  fullName: Darwin.Net.Objects.StationBoard.FilterType
- uid: Darwin.Net.Objects.StationBoard.NrccMessages
  commentId: P:Darwin.Net.Objects.StationBoard.NrccMessages
  parent: Darwin.Net.Objects.StationBoard
  name: NrccMessages
  nameWithType: StationBoard.NrccMessages
  fullName: Darwin.Net.Objects.StationBoard.NrccMessages
- uid: Darwin.Net.Objects.StationBoard.IsPlatformAvailable
  commentId: P:Darwin.Net.Objects.StationBoard.IsPlatformAvailable
  parent: Darwin.Net.Objects.StationBoard
  name: IsPlatformAvailable
  nameWithType: StationBoard.IsPlatformAvailable
  fullName: Darwin.Net.Objects.StationBoard.IsPlatformAvailable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Darwin.Net.Objects.StationBoardWithDetails.AreServicesAvailable*
  commentId: Overload:Darwin.Net.Objects.StationBoardWithDetails.AreServicesAvailable
  name: AreServicesAvailable
  nameWithType: StationBoardWithDetails.AreServicesAvailable
  fullName: Darwin.Net.Objects.StationBoardWithDetails.AreServicesAvailable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Darwin.Net.Objects.ServiceItemWithCallingPoints
  commentId: T:Darwin.Net.Objects.ServiceItemWithCallingPoints
  name: ServiceItemWithCallingPoints
  nameWithType: ServiceItemWithCallingPoints
  fullName: Darwin.Net.Objects.ServiceItemWithCallingPoints
- uid: Darwin.Net.Objects.StationBoardWithDetails.TrainServices*
  commentId: Overload:Darwin.Net.Objects.StationBoardWithDetails.TrainServices
  name: TrainServices
  nameWithType: StationBoardWithDetails.TrainServices
  fullName: Darwin.Net.Objects.StationBoardWithDetails.TrainServices
- uid: System.Collections.Generic.IList{Darwin.Net.Objects.ServiceItemWithCallingPoints}
  commentId: T:System.Collections.Generic.IList{Darwin.Net.Objects.ServiceItemWithCallingPoints}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ServiceItemWithCallingPoints>
  nameWithType: IList<ServiceItemWithCallingPoints>
  fullName: System.Collections.Generic.IList<Darwin.Net.Objects.ServiceItemWithCallingPoints>
  nameWithType.vb: IList(Of ServiceItemWithCallingPoints)
  fullName.vb: System.Collections.Generic.IList(Of Darwin.Net.Objects.ServiceItemWithCallingPoints)
  name.vb: IList(Of ServiceItemWithCallingPoints)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: <
  - uid: Darwin.Net.Objects.ServiceItemWithCallingPoints
    name: ServiceItemWithCallingPoints
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Darwin.Net.Objects.ServiceItemWithCallingPoints
    name: ServiceItemWithCallingPoints
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: Darwin.Net.Objects.StationBoardWithDetails.BusServices*
  commentId: Overload:Darwin.Net.Objects.StationBoardWithDetails.BusServices
  name: BusServices
  nameWithType: StationBoardWithDetails.BusServices
  fullName: Darwin.Net.Objects.StationBoardWithDetails.BusServices
- uid: Darwin.Net.Objects.StationBoardWithDetails.FerryServices*
  commentId: Overload:Darwin.Net.Objects.StationBoardWithDetails.FerryServices
  name: FerryServices
  nameWithType: StationBoardWithDetails.FerryServices
  fullName: Darwin.Net.Objects.StationBoardWithDetails.FerryServices
