### YamlMime:ManagedReference
items:
- uid: Darwin.Net.Objects.ServiceDetails
  commentId: T:Darwin.Net.Objects.ServiceDetails
  id: ServiceDetails
  parent: Darwin.Net.Objects
  children:
  - Darwin.Net.Objects.ServiceDetails.ActualTimeArrival
  - Darwin.Net.Objects.ServiceDetails.ActualTimeDeparture
  - Darwin.Net.Objects.ServiceDetails.AdhocAlerts
  - Darwin.Net.Objects.ServiceDetails.CancellationReason
  - Darwin.Net.Objects.ServiceDetails.DelayReason
  - Darwin.Net.Objects.ServiceDetails.DiversionReason
  - Darwin.Net.Objects.ServiceDetails.DivertedVia
  - Darwin.Net.Objects.ServiceDetails.DoesTrainDetachAtFront
  - Darwin.Net.Objects.ServiceDetails.EstimatedTimeArrival
  - Darwin.Net.Objects.ServiceDetails.EstimatedTimeDeparture
  - Darwin.Net.Objects.ServiceDetails.Formation
  - Darwin.Net.Objects.ServiceDetails.GeneratedAt
  - Darwin.Net.Objects.ServiceDetails.IsCancelled
  - Darwin.Net.Objects.ServiceDetails.IsReverseFormation
  - Darwin.Net.Objects.ServiceDetails.LocationName
  - Darwin.Net.Objects.ServiceDetails.Operator
  - Darwin.Net.Objects.ServiceDetails.OperatorCode
  - Darwin.Net.Objects.ServiceDetails.OverdueMessage
  - Darwin.Net.Objects.ServiceDetails.Platform
  - Darwin.Net.Objects.ServiceDetails.PreviousCallingPoints
  - Darwin.Net.Objects.ServiceDetails.RetailServiceId
  - Darwin.Net.Objects.ServiceDetails.ScheduledTimeArrival
  - Darwin.Net.Objects.ServiceDetails.ScheduledTimeDeparture
  - Darwin.Net.Objects.ServiceDetails.ServiceType
  - Darwin.Net.Objects.ServiceDetails.Station
  - Darwin.Net.Objects.ServiceDetails.SubsequentCallingPoints
  - Darwin.Net.Objects.ServiceDetails.TrainLength
  langs:
  - csharp
  - vb
  name: ServiceDetails
  nameWithType: ServiceDetails
  fullName: Darwin.Net.Objects.ServiceDetails
  type: Class
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: ServiceDetails
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 14
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nDefines a service details response\n"
  example: []
  syntax:
    content: public class ServiceDetails
    content.vb: Public Class ServiceDetails
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Darwin.Net.Objects.ServiceDetails.GeneratedAt
  commentId: P:Darwin.Net.Objects.ServiceDetails.GeneratedAt
  id: GeneratedAt
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: GeneratedAt
  nameWithType: ServiceDetails.GeneratedAt
  fullName: Darwin.Net.Objects.ServiceDetails.GeneratedAt
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: GeneratedAt
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 19
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nThe time at which the <xref href=\"Darwin.Net.Objects.ServiceDetails\" data-throw-if-not-resolved=\"false\"></xref> was generated\n"
  example: []
  syntax:
    content: public DateTime GeneratedAt { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property GeneratedAt As Date
  overload: Darwin.Net.Objects.ServiceDetails.GeneratedAt*
- uid: Darwin.Net.Objects.ServiceDetails.RetailServiceId
  commentId: P:Darwin.Net.Objects.ServiceDetails.RetailServiceId
  id: RetailServiceId
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: RetailServiceId
  nameWithType: ServiceDetails.RetailServiceId
  fullName: Darwin.Net.Objects.ServiceDetails.RetailServiceId
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: RetailServiceId
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 24
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nThe Retail Service ID of the service, if known.\n"
  example: []
  syntax:
    content: public string? RetailServiceId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RetailServiceId As String
  overload: Darwin.Net.Objects.ServiceDetails.RetailServiceId*
- uid: Darwin.Net.Objects.ServiceDetails.ServiceType
  commentId: P:Darwin.Net.Objects.ServiceDetails.ServiceType
  id: ServiceType
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: ServiceType
  nameWithType: ServiceDetails.ServiceType
  fullName: Darwin.Net.Objects.ServiceDetails.ServiceType
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: ServiceType
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 29
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nThe type of service (train, bus, ferry) that this item represents. Note that real-time information (e.g. eta, etd, ata, atd, etc.) is only available and present for train services.\n"
  example: []
  syntax:
    content: public ServiceType ServiceType { get; }
    parameters: []
    return:
      type: Darwin.Net.Objects.ServiceType
    content.vb: Public Property ServiceType As ServiceType
  overload: Darwin.Net.Objects.ServiceDetails.ServiceType*
- uid: Darwin.Net.Objects.ServiceDetails.LocationName
  commentId: P:Darwin.Net.Objects.ServiceDetails.LocationName
  id: LocationName
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: LocationName
  nameWithType: ServiceDetails.LocationName
  fullName: Darwin.Net.Objects.ServiceDetails.LocationName
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: LocationName
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 34
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nThe display name of the departure board location that these service details were accessed from.\n"
  example: []
  syntax:
    content: public string LocationName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LocationName As String
  overload: Darwin.Net.Objects.ServiceDetails.LocationName*
- uid: Darwin.Net.Objects.ServiceDetails.Station
  commentId: P:Darwin.Net.Objects.ServiceDetails.Station
  id: Station
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: Station
  nameWithType: ServiceDetails.Station
  fullName: Darwin.Net.Objects.ServiceDetails.Station
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: Station
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 39
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nThe station in the service details.\n"
  example: []
  syntax:
    content: public Station Station { get; }
    parameters: []
    return:
      type: Darwin.Net.Objects.Station
    content.vb: Public Property Station As Station
  overload: Darwin.Net.Objects.ServiceDetails.Station*
- uid: Darwin.Net.Objects.ServiceDetails.Operator
  commentId: P:Darwin.Net.Objects.ServiceDetails.Operator
  id: Operator
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: Operator
  nameWithType: ServiceDetails.Operator
  fullName: Darwin.Net.Objects.ServiceDetails.Operator
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: Operator
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 44
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nThe name of the Train Operating Company that operates the service.\n"
  example: []
  syntax:
    content: public string Operator { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property [Operator] As String
  overload: Darwin.Net.Objects.ServiceDetails.Operator*
- uid: Darwin.Net.Objects.ServiceDetails.OperatorCode
  commentId: P:Darwin.Net.Objects.ServiceDetails.OperatorCode
  id: OperatorCode
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: OperatorCode
  nameWithType: ServiceDetails.OperatorCode
  fullName: Darwin.Net.Objects.ServiceDetails.OperatorCode
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: OperatorCode
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 49
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nThe code of the Train Operating Company that operates the service.\n"
  example: []
  syntax:
    content: public string OperatorCode { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property OperatorCode As String
  overload: Darwin.Net.Objects.ServiceDetails.OperatorCode*
- uid: Darwin.Net.Objects.ServiceDetails.IsCancelled
  commentId: P:Darwin.Net.Objects.ServiceDetails.IsCancelled
  id: IsCancelled
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: IsCancelled
  nameWithType: ServiceDetails.IsCancelled
  fullName: Darwin.Net.Objects.ServiceDetails.IsCancelled
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: IsCancelled
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 54
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nA flag to indicate that this service is cancelled at this location.\n"
  example: []
  syntax:
    content: public bool IsCancelled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsCancelled As Boolean
  overload: Darwin.Net.Objects.ServiceDetails.IsCancelled*
- uid: Darwin.Net.Objects.ServiceDetails.CancellationReason
  commentId: P:Darwin.Net.Objects.ServiceDetails.CancellationReason
  id: CancellationReason
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: CancellationReason
  nameWithType: ServiceDetails.CancellationReason
  fullName: Darwin.Net.Objects.ServiceDetails.CancellationReason
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: CancellationReason
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 59
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nA cancellation reason for this service.\n"
  example: []
  syntax:
    content: public string? CancellationReason { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CancellationReason As String
  overload: Darwin.Net.Objects.ServiceDetails.CancellationReason*
- uid: Darwin.Net.Objects.ServiceDetails.DelayReason
  commentId: P:Darwin.Net.Objects.ServiceDetails.DelayReason
  id: DelayReason
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: DelayReason
  nameWithType: ServiceDetails.DelayReason
  fullName: Darwin.Net.Objects.ServiceDetails.DelayReason
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: DelayReason
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 64
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nA delay reason for this service.\n"
  example: []
  syntax:
    content: public string? DelayReason { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DelayReason As String
  overload: Darwin.Net.Objects.ServiceDetails.DelayReason*
- uid: Darwin.Net.Objects.ServiceDetails.DoesTrainDetachAtFront
  commentId: P:Darwin.Net.Objects.ServiceDetails.DoesTrainDetachAtFront
  id: DoesTrainDetachAtFront
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: DoesTrainDetachAtFront
  nameWithType: ServiceDetails.DoesTrainDetachAtFront
  fullName: Darwin.Net.Objects.ServiceDetails.DoesTrainDetachAtFront
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: DoesTrainDetachAtFront
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 69
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nTrue if the service detaches units from the front at this location.\n"
  example: []
  syntax:
    content: public bool? DoesTrainDetachAtFront { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property DoesTrainDetachAtFront As Boolean?
  overload: Darwin.Net.Objects.ServiceDetails.DoesTrainDetachAtFront*
- uid: Darwin.Net.Objects.ServiceDetails.DiversionReason
  commentId: P:Darwin.Net.Objects.ServiceDetails.DiversionReason
  id: DiversionReason
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: DiversionReason
  nameWithType: ServiceDetails.DiversionReason
  fullName: Darwin.Net.Objects.ServiceDetails.DiversionReason
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: DiversionReason
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 74
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nThe reason for a diversion.\n"
  example: []
  syntax:
    content: public string? DiversionReason { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DiversionReason As String
  overload: Darwin.Net.Objects.ServiceDetails.DiversionReason*
- uid: Darwin.Net.Objects.ServiceDetails.DivertedVia
  commentId: P:Darwin.Net.Objects.ServiceDetails.DivertedVia
  id: DivertedVia
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: DivertedVia
  nameWithType: ServiceDetails.DivertedVia
  fullName: Darwin.Net.Objects.ServiceDetails.DivertedVia
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: DivertedVia
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 79
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nThe location of the diversion.\n"
  example: []
  syntax:
    content: public string? DivertedVia { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DivertedVia As String
  overload: Darwin.Net.Objects.ServiceDetails.DivertedVia*
- uid: Darwin.Net.Objects.ServiceDetails.OverdueMessage
  commentId: P:Darwin.Net.Objects.ServiceDetails.OverdueMessage
  id: OverdueMessage
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: OverdueMessage
  nameWithType: ServiceDetails.OverdueMessage
  fullName: Darwin.Net.Objects.ServiceDetails.OverdueMessage
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: OverdueMessage
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 84
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nIf an expected movement report has been missed, this will contain a message describing the missed movement.\n"
  example: []
  syntax:
    content: public string? OverdueMessage { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property OverdueMessage As String
  overload: Darwin.Net.Objects.ServiceDetails.OverdueMessage*
- uid: Darwin.Net.Objects.ServiceDetails.TrainLength
  commentId: P:Darwin.Net.Objects.ServiceDetails.TrainLength
  id: TrainLength
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: TrainLength
  nameWithType: ServiceDetails.TrainLength
  fullName: Darwin.Net.Objects.ServiceDetails.TrainLength
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: TrainLength
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 89
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nThe train length (number of units) at this location. If not supplied, or zero, the length is unknown.\n"
  example: []
  syntax:
    content: public int? TrainLength { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property TrainLength As Integer?
  overload: Darwin.Net.Objects.ServiceDetails.TrainLength*
- uid: Darwin.Net.Objects.ServiceDetails.IsReverseFormation
  commentId: P:Darwin.Net.Objects.ServiceDetails.IsReverseFormation
  id: IsReverseFormation
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: IsReverseFormation
  nameWithType: ServiceDetails.IsReverseFormation
  fullName: Darwin.Net.Objects.ServiceDetails.IsReverseFormation
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: IsReverseFormation
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 94
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nTrue if the service is operating in the reverse of its normal formation.\n"
  example: []
  syntax:
    content: public bool? IsReverseFormation { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property IsReverseFormation As Boolean?
  overload: Darwin.Net.Objects.ServiceDetails.IsReverseFormation*
- uid: Darwin.Net.Objects.ServiceDetails.Platform
  commentId: P:Darwin.Net.Objects.ServiceDetails.Platform
  id: Platform
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: Platform
  nameWithType: ServiceDetails.Platform
  fullName: Darwin.Net.Objects.ServiceDetails.Platform
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: Platform
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 99
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nAn optional platform number for the service at this location. This will only be present where available and where IsPlatformAvailable value is &quot;true&quot;.\n"
  example: []
  syntax:
    content: public string? Platform { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Platform As String
  overload: Darwin.Net.Objects.ServiceDetails.Platform*
- uid: Darwin.Net.Objects.ServiceDetails.ScheduledTimeArrival
  commentId: P:Darwin.Net.Objects.ServiceDetails.ScheduledTimeArrival
  id: ScheduledTimeArrival
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: ScheduledTimeArrival
  nameWithType: ServiceDetails.ScheduledTimeArrival
  fullName: Darwin.Net.Objects.ServiceDetails.ScheduledTimeArrival
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: ScheduledTimeArrival
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 104
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nAn optional <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> specifying the Scheduled Time of Arrival (STA) of the service at the station board location.\n"
  example: []
  syntax:
    content: public (string? Text, DateTime? Time)? ScheduledTimeArrival { get; }
    parameters: []
    return:
      type: System.Nullable{System.ValueTuple{System.String,System.Nullable{System.DateTime}}}
    content.vb: Public Property ScheduledTimeArrival As (Text As String, Time As Date?)?
  overload: Darwin.Net.Objects.ServiceDetails.ScheduledTimeArrival*
- uid: Darwin.Net.Objects.ServiceDetails.EstimatedTimeArrival
  commentId: P:Darwin.Net.Objects.ServiceDetails.EstimatedTimeArrival
  id: EstimatedTimeArrival
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: EstimatedTimeArrival
  nameWithType: ServiceDetails.EstimatedTimeArrival
  fullName: Darwin.Net.Objects.ServiceDetails.EstimatedTimeArrival
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: EstimatedTimeArrival
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 109
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nAn optional <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> specifying the Estimated Time of Arrival (ETA) of the service at the station board location.\n"
  example: []
  syntax:
    content: public (string? Text, DateTime? Time)? EstimatedTimeArrival { get; }
    parameters: []
    return:
      type: System.Nullable{System.ValueTuple{System.String,System.Nullable{System.DateTime}}}
    content.vb: Public Property EstimatedTimeArrival As (Text As String, Time As Date?)?
  overload: Darwin.Net.Objects.ServiceDetails.EstimatedTimeArrival*
- uid: Darwin.Net.Objects.ServiceDetails.ActualTimeArrival
  commentId: P:Darwin.Net.Objects.ServiceDetails.ActualTimeArrival
  id: ActualTimeArrival
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: ActualTimeArrival
  nameWithType: ServiceDetails.ActualTimeArrival
  fullName: Darwin.Net.Objects.ServiceDetails.ActualTimeArrival
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: ActualTimeArrival
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 114
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nAn optional <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> specifying the Actual Time of Arrival (ATA) of the service at the station board location.\n"
  example: []
  syntax:
    content: public (string? Text, DateTime? Time)? ActualTimeArrival { get; }
    parameters: []
    return:
      type: System.Nullable{System.ValueTuple{System.String,System.Nullable{System.DateTime}}}
    content.vb: Public Property ActualTimeArrival As (Text As String, Time As Date?)?
  overload: Darwin.Net.Objects.ServiceDetails.ActualTimeArrival*
- uid: Darwin.Net.Objects.ServiceDetails.ScheduledTimeDeparture
  commentId: P:Darwin.Net.Objects.ServiceDetails.ScheduledTimeDeparture
  id: ScheduledTimeDeparture
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: ScheduledTimeDeparture
  nameWithType: ServiceDetails.ScheduledTimeDeparture
  fullName: Darwin.Net.Objects.ServiceDetails.ScheduledTimeDeparture
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: ScheduledTimeDeparture
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 119
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nAn optional <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> specifying the Scheduled Time of Departure (STD) of the service at the station board location.\n"
  example: []
  syntax:
    content: public (string? Text, DateTime? Time)? ScheduledTimeDeparture { get; }
    parameters: []
    return:
      type: System.Nullable{System.ValueTuple{System.String,System.Nullable{System.DateTime}}}
    content.vb: Public Property ScheduledTimeDeparture As (Text As String, Time As Date?)?
  overload: Darwin.Net.Objects.ServiceDetails.ScheduledTimeDeparture*
- uid: Darwin.Net.Objects.ServiceDetails.EstimatedTimeDeparture
  commentId: P:Darwin.Net.Objects.ServiceDetails.EstimatedTimeDeparture
  id: EstimatedTimeDeparture
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: EstimatedTimeDeparture
  nameWithType: ServiceDetails.EstimatedTimeDeparture
  fullName: Darwin.Net.Objects.ServiceDetails.EstimatedTimeDeparture
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: EstimatedTimeDeparture
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 124
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nAn optional <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> specifying the Estimated Time of Departure (ETD) of the service at the station board location.\n"
  example: []
  syntax:
    content: public (string? Text, DateTime? Time)? EstimatedTimeDeparture { get; }
    parameters: []
    return:
      type: System.Nullable{System.ValueTuple{System.String,System.Nullable{System.DateTime}}}
    content.vb: Public Property EstimatedTimeDeparture As (Text As String, Time As Date?)?
  overload: Darwin.Net.Objects.ServiceDetails.EstimatedTimeDeparture*
- uid: Darwin.Net.Objects.ServiceDetails.ActualTimeDeparture
  commentId: P:Darwin.Net.Objects.ServiceDetails.ActualTimeDeparture
  id: ActualTimeDeparture
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: ActualTimeDeparture
  nameWithType: ServiceDetails.ActualTimeDeparture
  fullName: Darwin.Net.Objects.ServiceDetails.ActualTimeDeparture
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: ActualTimeDeparture
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 129
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nAn optional <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref> specifying the Actual Time of Departure (ATD) of the service at the station board location.\n"
  example: []
  syntax:
    content: public (string? Text, DateTime? Time)? ActualTimeDeparture { get; }
    parameters: []
    return:
      type: System.Nullable{System.ValueTuple{System.String,System.Nullable{System.DateTime}}}
    content.vb: Public Property ActualTimeDeparture As (Text As String, Time As Date?)?
  overload: Darwin.Net.Objects.ServiceDetails.ActualTimeDeparture*
- uid: Darwin.Net.Objects.ServiceDetails.AdhocAlerts
  commentId: P:Darwin.Net.Objects.ServiceDetails.AdhocAlerts
  id: AdhocAlerts
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: AdhocAlerts
  nameWithType: ServiceDetails.AdhocAlerts
  fullName: Darwin.Net.Objects.ServiceDetails.AdhocAlerts
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: AdhocAlerts
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 134
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nA list of Adhoc Alerts (strings) for this <xref href=\"Darwin.Net.Objects.CallingPoint\" data-throw-if-not-resolved=\"false\"></xref>. If there are no alerts, it will be null.\n"
  example: []
  syntax:
    content: public IList<string>? AdhocAlerts { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
    content.vb: Public Property AdhocAlerts As IList(Of String)
  overload: Darwin.Net.Objects.ServiceDetails.AdhocAlerts*
- uid: Darwin.Net.Objects.ServiceDetails.PreviousCallingPoints
  commentId: P:Darwin.Net.Objects.ServiceDetails.PreviousCallingPoints
  id: PreviousCallingPoints
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: PreviousCallingPoints
  nameWithType: ServiceDetails.PreviousCallingPoints
  fullName: Darwin.Net.Objects.ServiceDetails.PreviousCallingPoints
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: PreviousCallingPoints
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 139
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nAn <xref href=\"System.Collections.Generic.IList%601\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Collections.Generic.IList%601\" data-throw-if-not-resolved=\"false\"></xref> of previous <xref href=\"Darwin.Net.Objects.CallingPoint\" data-throw-if-not-resolved=\"false\"></xref> objects relative to the location of this service.\n"
  example: []
  syntax:
    content: public IList<IList<CallingPoint>>? PreviousCallingPoints { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Collections.Generic.IList{Darwin.Net.Objects.CallingPoint}}
    content.vb: Public Property PreviousCallingPoints As IList(Of IList(Of CallingPoint))
  overload: Darwin.Net.Objects.ServiceDetails.PreviousCallingPoints*
- uid: Darwin.Net.Objects.ServiceDetails.SubsequentCallingPoints
  commentId: P:Darwin.Net.Objects.ServiceDetails.SubsequentCallingPoints
  id: SubsequentCallingPoints
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: SubsequentCallingPoints
  nameWithType: ServiceDetails.SubsequentCallingPoints
  fullName: Darwin.Net.Objects.ServiceDetails.SubsequentCallingPoints
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: SubsequentCallingPoints
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 144
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nAn <xref href=\"System.Collections.Generic.IList%601\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"System.Collections.Generic.IList%601\" data-throw-if-not-resolved=\"false\"></xref> of subsequent <xref href=\"Darwin.Net.Objects.CallingPoint\" data-throw-if-not-resolved=\"false\"></xref> objects relative to the location of this service.\n"
  example: []
  syntax:
    content: public IList<IList<CallingPoint>>? SubsequentCallingPoints { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Collections.Generic.IList{Darwin.Net.Objects.CallingPoint}}
    content.vb: Public Property SubsequentCallingPoints As IList(Of IList(Of CallingPoint))
  overload: Darwin.Net.Objects.ServiceDetails.SubsequentCallingPoints*
- uid: Darwin.Net.Objects.ServiceDetails.Formation
  commentId: P:Darwin.Net.Objects.ServiceDetails.Formation
  id: Formation
  parent: Darwin.Net.Objects.ServiceDetails
  langs:
  - csharp
  - vb
  name: Formation
  nameWithType: ServiceDetails.Formation
  fullName: Darwin.Net.Objects.ServiceDetails.Formation
  type: Property
  source:
    remote:
      path: Darwin.Net/Objects/ServiceDetails.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: Formation
    path: ../Darwin.Net/Objects/ServiceDetails.cs
    startLine: 149
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Objects
  summary: "\nContains <xref href=\"Darwin.Net.Objects.FormationData\" data-throw-if-not-resolved=\"false\"></xref> for this <xref href=\"Darwin.Net.Objects.ServiceDetails\" data-throw-if-not-resolved=\"false\"></xref>, if any.\n"
  example: []
  syntax:
    content: public FormationData? Formation { get; }
    parameters: []
    return:
      type: Darwin.Net.Objects.FormationData
    content.vb: Public Property Formation As FormationData
  overload: Darwin.Net.Objects.ServiceDetails.Formation*
references:
- uid: Darwin.Net.Objects
  commentId: N:Darwin.Net.Objects
  name: Darwin.Net.Objects
  nameWithType: Darwin.Net.Objects
  fullName: Darwin.Net.Objects
  spec.csharp:
  - uid: Darwin
    name: Darwin
  - name: .
  - uid: Darwin.Net
    name: Net
  - name: .
  - uid: Darwin.Net.Objects
    name: Objects
  spec.vb:
  - uid: Darwin
    name: Darwin
  - name: .
  - uid: Darwin.Net
    name: Net
  - name: .
  - uid: Darwin.Net.Objects
    name: Objects
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Darwin.Net.Objects.ServiceDetails
  commentId: T:Darwin.Net.Objects.ServiceDetails
  name: ServiceDetails
  nameWithType: ServiceDetails
  fullName: Darwin.Net.Objects.ServiceDetails
- uid: Darwin.Net.Objects.ServiceDetails.GeneratedAt*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.GeneratedAt
  name: GeneratedAt
  nameWithType: ServiceDetails.GeneratedAt
  fullName: Darwin.Net.Objects.ServiceDetails.GeneratedAt
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: Darwin.Net.Objects.ServiceDetails.RetailServiceId*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.RetailServiceId
  name: RetailServiceId
  nameWithType: ServiceDetails.RetailServiceId
  fullName: Darwin.Net.Objects.ServiceDetails.RetailServiceId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Darwin.Net.Objects.ServiceDetails.ServiceType*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.ServiceType
  name: ServiceType
  nameWithType: ServiceDetails.ServiceType
  fullName: Darwin.Net.Objects.ServiceDetails.ServiceType
- uid: Darwin.Net.Objects.ServiceType
  commentId: T:Darwin.Net.Objects.ServiceType
  parent: Darwin.Net.Objects
  name: ServiceType
  nameWithType: ServiceType
  fullName: Darwin.Net.Objects.ServiceType
- uid: Darwin.Net.Objects.ServiceDetails.LocationName*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.LocationName
  name: LocationName
  nameWithType: ServiceDetails.LocationName
  fullName: Darwin.Net.Objects.ServiceDetails.LocationName
- uid: Darwin.Net.Objects.ServiceDetails.Station*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.Station
  name: Station
  nameWithType: ServiceDetails.Station
  fullName: Darwin.Net.Objects.ServiceDetails.Station
- uid: Darwin.Net.Objects.Station
  commentId: T:Darwin.Net.Objects.Station
  parent: Darwin.Net.Objects
  name: Station
  nameWithType: Station
  fullName: Darwin.Net.Objects.Station
- uid: Darwin.Net.Objects.ServiceDetails.Operator*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.Operator
  name: Operator
  nameWithType: ServiceDetails.Operator
  fullName: Darwin.Net.Objects.ServiceDetails.Operator
- uid: Darwin.Net.Objects.ServiceDetails.OperatorCode*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.OperatorCode
  name: OperatorCode
  nameWithType: ServiceDetails.OperatorCode
  fullName: Darwin.Net.Objects.ServiceDetails.OperatorCode
- uid: Darwin.Net.Objects.ServiceDetails.IsCancelled*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.IsCancelled
  name: IsCancelled
  nameWithType: ServiceDetails.IsCancelled
  fullName: Darwin.Net.Objects.ServiceDetails.IsCancelled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Darwin.Net.Objects.ServiceDetails.CancellationReason*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.CancellationReason
  name: CancellationReason
  nameWithType: ServiceDetails.CancellationReason
  fullName: Darwin.Net.Objects.ServiceDetails.CancellationReason
- uid: Darwin.Net.Objects.ServiceDetails.DelayReason*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.DelayReason
  name: DelayReason
  nameWithType: ServiceDetails.DelayReason
  fullName: Darwin.Net.Objects.ServiceDetails.DelayReason
- uid: Darwin.Net.Objects.ServiceDetails.DoesTrainDetachAtFront*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.DoesTrainDetachAtFront
  name: DoesTrainDetachAtFront
  nameWithType: ServiceDetails.DoesTrainDetachAtFront
  fullName: Darwin.Net.Objects.ServiceDetails.DoesTrainDetachAtFront
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Darwin.Net.Objects.ServiceDetails.DiversionReason*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.DiversionReason
  name: DiversionReason
  nameWithType: ServiceDetails.DiversionReason
  fullName: Darwin.Net.Objects.ServiceDetails.DiversionReason
- uid: Darwin.Net.Objects.ServiceDetails.DivertedVia*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.DivertedVia
  name: DivertedVia
  nameWithType: ServiceDetails.DivertedVia
  fullName: Darwin.Net.Objects.ServiceDetails.DivertedVia
- uid: Darwin.Net.Objects.ServiceDetails.OverdueMessage*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.OverdueMessage
  name: OverdueMessage
  nameWithType: ServiceDetails.OverdueMessage
  fullName: Darwin.Net.Objects.ServiceDetails.OverdueMessage
- uid: Darwin.Net.Objects.ServiceDetails.TrainLength*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.TrainLength
  name: TrainLength
  nameWithType: ServiceDetails.TrainLength
  fullName: Darwin.Net.Objects.ServiceDetails.TrainLength
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: '?'
- uid: Darwin.Net.Objects.ServiceDetails.IsReverseFormation*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.IsReverseFormation
  name: IsReverseFormation
  nameWithType: ServiceDetails.IsReverseFormation
  fullName: Darwin.Net.Objects.ServiceDetails.IsReverseFormation
- uid: Darwin.Net.Objects.ServiceDetails.Platform*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.Platform
  name: Platform
  nameWithType: ServiceDetails.Platform
  fullName: Darwin.Net.Objects.ServiceDetails.Platform
- uid: Darwin.Net.Objects.ServiceDetails.ScheduledTimeArrival*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.ScheduledTimeArrival
  name: ScheduledTimeArrival
  nameWithType: ServiceDetails.ScheduledTimeArrival
  fullName: Darwin.Net.Objects.ServiceDetails.ScheduledTimeArrival
- uid: System.Nullable{System.ValueTuple{System.String,System.Nullable{System.DateTime}}}
  commentId: T:System.Nullable{System.ValueTuple{System.String,System.Nullable{System.DateTime}}}
  parent: System
  definition: System.Nullable`1
  name: (string Text, DateTime? Time)?
  nameWithType: (string Text, DateTime? Time)?
  fullName: (string Text, System.DateTime? Time)?
  nameWithType.vb: (Text As String, Time As Date?)?
  fullName.vb: (Text As String, Time As Date?)?
  name.vb: (Text As String, Time As Date?)?
  spec.csharp:
  - name: (
  - uid: System.String
    name: string
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{System.String,System.Nullable{System.DateTime}}.Text
    name: Text
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: DateTime
    isExternal: true
  - name: '?'
  - name: " "
  - uid: System.ValueTuple{System.String,System.Nullable{System.DateTime}}.Time
    name: Time
  - name: )
  - name: '?'
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.String,System.Nullable{System.DateTime}}.Text
    name: Text
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,System.Nullable{System.DateTime}}.Time
    name: Time
  - name: " "
  - name: As
  - name: " "
  - uid: System.DateTime
    name: Date
    isExternal: true
  - name: '?'
  - name: )
  - name: '?'
- uid: Darwin.Net.Objects.ServiceDetails.EstimatedTimeArrival*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.EstimatedTimeArrival
  name: EstimatedTimeArrival
  nameWithType: ServiceDetails.EstimatedTimeArrival
  fullName: Darwin.Net.Objects.ServiceDetails.EstimatedTimeArrival
- uid: Darwin.Net.Objects.ServiceDetails.ActualTimeArrival*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.ActualTimeArrival
  name: ActualTimeArrival
  nameWithType: ServiceDetails.ActualTimeArrival
  fullName: Darwin.Net.Objects.ServiceDetails.ActualTimeArrival
- uid: Darwin.Net.Objects.ServiceDetails.ScheduledTimeDeparture*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.ScheduledTimeDeparture
  name: ScheduledTimeDeparture
  nameWithType: ServiceDetails.ScheduledTimeDeparture
  fullName: Darwin.Net.Objects.ServiceDetails.ScheduledTimeDeparture
- uid: Darwin.Net.Objects.ServiceDetails.EstimatedTimeDeparture*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.EstimatedTimeDeparture
  name: EstimatedTimeDeparture
  nameWithType: ServiceDetails.EstimatedTimeDeparture
  fullName: Darwin.Net.Objects.ServiceDetails.EstimatedTimeDeparture
- uid: Darwin.Net.Objects.ServiceDetails.ActualTimeDeparture*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.ActualTimeDeparture
  name: ActualTimeDeparture
  nameWithType: ServiceDetails.ActualTimeDeparture
  fullName: Darwin.Net.Objects.ServiceDetails.ActualTimeDeparture
- uid: Darwin.Net.Objects.CallingPoint
  commentId: T:Darwin.Net.Objects.CallingPoint
  name: CallingPoint
  nameWithType: CallingPoint
  fullName: Darwin.Net.Objects.CallingPoint
- uid: Darwin.Net.Objects.ServiceDetails.AdhocAlerts*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.AdhocAlerts
  name: AdhocAlerts
  nameWithType: ServiceDetails.AdhocAlerts
  fullName: Darwin.Net.Objects.ServiceDetails.AdhocAlerts
- uid: System.Collections.Generic.IList{System.String}
  commentId: T:System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<string>
  nameWithType: IList<string>
  fullName: System.Collections.Generic.IList<string>
  nameWithType.vb: IList(Of String)
  fullName.vb: System.Collections.Generic.IList(Of String)
  name.vb: IList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: Darwin.Net.Objects.ServiceDetails.PreviousCallingPoints*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.PreviousCallingPoints
  name: PreviousCallingPoints
  nameWithType: ServiceDetails.PreviousCallingPoints
  fullName: Darwin.Net.Objects.ServiceDetails.PreviousCallingPoints
- uid: System.Collections.Generic.IList{System.Collections.Generic.IList{Darwin.Net.Objects.CallingPoint}}
  commentId: T:System.Collections.Generic.IList{System.Collections.Generic.IList{Darwin.Net.Objects.CallingPoint}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IList<CallingPoint>>
  nameWithType: IList<IList<CallingPoint>>
  fullName: System.Collections.Generic.IList<System.Collections.Generic.IList<Darwin.Net.Objects.CallingPoint>>
  nameWithType.vb: IList(Of IList(Of CallingPoint))
  fullName.vb: System.Collections.Generic.IList(Of System.Collections.Generic.IList(Of Darwin.Net.Objects.CallingPoint))
  name.vb: IList(Of IList(Of CallingPoint))
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: <
  - uid: Darwin.Net.Objects.CallingPoint
    name: CallingPoint
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Darwin.Net.Objects.CallingPoint
    name: CallingPoint
  - name: )
  - name: )
- uid: Darwin.Net.Objects.ServiceDetails.SubsequentCallingPoints*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.SubsequentCallingPoints
  name: SubsequentCallingPoints
  nameWithType: ServiceDetails.SubsequentCallingPoints
  fullName: Darwin.Net.Objects.ServiceDetails.SubsequentCallingPoints
- uid: Darwin.Net.Objects.FormationData
  commentId: T:Darwin.Net.Objects.FormationData
  parent: Darwin.Net.Objects
  name: FormationData
  nameWithType: FormationData
  fullName: Darwin.Net.Objects.FormationData
- uid: Darwin.Net.Objects.ServiceDetails.Formation*
  commentId: Overload:Darwin.Net.Objects.ServiceDetails.Formation
  name: Formation
  nameWithType: ServiceDetails.Formation
  fullName: Darwin.Net.Objects.ServiceDetails.Formation
