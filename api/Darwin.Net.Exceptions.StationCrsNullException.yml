### YamlMime:ManagedReference
items:
- uid: Darwin.Net.Exceptions.StationCrsNullException
  commentId: T:Darwin.Net.Exceptions.StationCrsNullException
  id: StationCrsNullException
  parent: Darwin.Net.Exceptions
  children:
  - Darwin.Net.Exceptions.StationCrsNullException.#ctor(Darwin.Net.Objects.Station)
  - Darwin.Net.Exceptions.StationCrsNullException.#ctor(System.Nullable{Darwin.Net.Objects.Station})
  langs:
  - csharp
  - vb
  name: StationCrsNullException
  nameWithType: StationCrsNullException
  fullName: Darwin.Net.Exceptions.StationCrsNullException
  type: Class
  source:
    remote:
      path: Darwin.Net/Exceptions/StationCrsNullException.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: StationCrsNullException
    path: ../Darwin.Net/Exceptions/StationCrsNullException.cs
    startLine: 13
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Exceptions
  summary: "\nThe exception that is thrown when a CRS StringValue is not attached to a Station enumeration value.\n"
  example: []
  syntax:
    content: 'public class StationCrsNullException : Exception, ISerializable'
    content.vb: Public Class StationCrsNullException Inherits Exception Implements ISerializable
  inheritance:
  - System.Object
  - System.Exception
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Exception.GetBaseException
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.ToString
  - System.Exception.Data
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Darwin.Net.Exceptions.StationCrsNullException.#ctor(Darwin.Net.Objects.Station)
  commentId: M:Darwin.Net.Exceptions.StationCrsNullException.#ctor(Darwin.Net.Objects.Station)
  id: '#ctor(Darwin.Net.Objects.Station)'
  parent: Darwin.Net.Exceptions.StationCrsNullException
  langs:
  - csharp
  - vb
  name: StationCrsNullException(Station)
  nameWithType: StationCrsNullException.StationCrsNullException(Station)
  fullName: Darwin.Net.Exceptions.StationCrsNullException.StationCrsNullException(Darwin.Net.Objects.Station)
  type: Constructor
  source:
    remote:
      path: Darwin.Net/Exceptions/StationCrsNullException.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: .ctor
    path: ../Darwin.Net/Exceptions/StationCrsNullException.cs
    startLine: 19
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Exceptions
  summary: "\nInitializes a new instance of the <xref href=\"Darwin.Net.Exceptions.StationCrsNullException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified Station enumeration value.\n"
  example: []
  syntax:
    content: public StationCrsNullException(Station station)
    parameters:
    - id: station
      type: Darwin.Net.Objects.Station
      description: The Station enumeration value that does not have a CRS StringValue.
    content.vb: Public Sub New(station As Station)
  overload: Darwin.Net.Exceptions.StationCrsNullException.#ctor*
  nameWithType.vb: StationCrsNullException.New(Station)
  fullName.vb: Darwin.Net.Exceptions.StationCrsNullException.New(Darwin.Net.Objects.Station)
  name.vb: New(Station)
- uid: Darwin.Net.Exceptions.StationCrsNullException.#ctor(System.Nullable{Darwin.Net.Objects.Station})
  commentId: M:Darwin.Net.Exceptions.StationCrsNullException.#ctor(System.Nullable{Darwin.Net.Objects.Station})
  id: '#ctor(System.Nullable{Darwin.Net.Objects.Station})'
  parent: Darwin.Net.Exceptions.StationCrsNullException
  langs:
  - csharp
  - vb
  name: StationCrsNullException(Station?)
  nameWithType: StationCrsNullException.StationCrsNullException(Station?)
  fullName: Darwin.Net.Exceptions.StationCrsNullException.StationCrsNullException(Darwin.Net.Objects.Station?)
  type: Constructor
  source:
    remote:
      path: Darwin.Net/Exceptions/StationCrsNullException.cs
      branch: master
      repo: https://github.com/rhys-wootton/Darwin.Net
    id: .ctor
    path: ../Darwin.Net/Exceptions/StationCrsNullException.cs
    startLine: 27
  assemblies:
  - Darwin.Net
  namespace: Darwin.Net.Exceptions
  summary: "\nInitializes a new instance of the <xref href=\"Darwin.Net.Exceptions.StationCrsNullException\" data-throw-if-not-resolved=\"false\"></xref> class with a nullable Station enumeration value.\n"
  example: []
  syntax:
    content: public StationCrsNullException(Station? station)
    parameters:
    - id: station
      type: System.Nullable{Darwin.Net.Objects.Station}
      description: The nullable Station enumeration value that does not have a CRS StringValue.
    content.vb: Public Sub New(station As Station?)
  overload: Darwin.Net.Exceptions.StationCrsNullException.#ctor*
  nameWithType.vb: StationCrsNullException.New(Station?)
  fullName.vb: Darwin.Net.Exceptions.StationCrsNullException.New(Darwin.Net.Objects.Station?)
  name.vb: New(Station?)
references:
- uid: Darwin.Net.Exceptions
  commentId: N:Darwin.Net.Exceptions
  name: Darwin.Net.Exceptions
  nameWithType: Darwin.Net.Exceptions
  fullName: Darwin.Net.Exceptions
  spec.csharp:
  - uid: Darwin
    name: Darwin
  - name: .
  - uid: Darwin.Net
    name: Net
  - name: .
  - uid: Darwin.Net.Exceptions
    name: Exceptions
  spec.vb:
  - uid: Darwin
    name: Darwin
  - name: .
  - uid: Darwin.Net
    name: Net
  - name: .
  - uid: Darwin.Net.Exceptions
    name: Exceptions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Exception.GetBaseException
  commentId: M:System.Exception.GetBaseException
  parent: System.Exception
  isExternal: true
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    isExternal: true
  - name: (
  - name: )
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    isExternal: true
  - name: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    isExternal: true
  - name: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    isExternal: true
  - name: )
- uid: System.Exception.GetType
  commentId: M:System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Exception.ToString
  commentId: M:System.Exception.ToString
  parent: System.Exception
  isExternal: true
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System.Exception.Data
  commentId: P:System.Exception.Data
  parent: System.Exception
  isExternal: true
  name: Data
  nameWithType: Exception.Data
  fullName: System.Exception.Data
- uid: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  parent: System.Exception
  isExternal: true
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.HResult
  commentId: P:System.Exception.HResult
  parent: System.Exception
  isExternal: true
  name: HResult
  nameWithType: Exception.HResult
  fullName: System.Exception.HResult
- uid: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  parent: System.Exception
  isExternal: true
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.Message
  commentId: P:System.Exception.Message
  parent: System.Exception
  isExternal: true
  name: Message
  nameWithType: Exception.Message
  fullName: System.Exception.Message
- uid: System.Exception.Source
  commentId: P:System.Exception.Source
  parent: System.Exception
  isExternal: true
  name: Source
  nameWithType: Exception.Source
  fullName: System.Exception.Source
- uid: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  parent: System.Exception
  isExternal: true
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.TargetSite
  commentId: P:System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Exception.SerializeObjectState
  commentId: E:System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
- uid: Darwin.Net.Exceptions.StationCrsNullException
  commentId: T:Darwin.Net.Exceptions.StationCrsNullException
  name: StationCrsNullException
  nameWithType: StationCrsNullException
  fullName: Darwin.Net.Exceptions.StationCrsNullException
- uid: Darwin.Net.Exceptions.StationCrsNullException.#ctor*
  commentId: Overload:Darwin.Net.Exceptions.StationCrsNullException.#ctor
  name: StationCrsNullException
  nameWithType: StationCrsNullException.StationCrsNullException
  fullName: Darwin.Net.Exceptions.StationCrsNullException.StationCrsNullException
  nameWithType.vb: StationCrsNullException.New
  fullName.vb: Darwin.Net.Exceptions.StationCrsNullException.New
  name.vb: New
- uid: Darwin.Net.Objects.Station
  commentId: T:Darwin.Net.Objects.Station
  parent: Darwin.Net.Objects
  name: Station
  nameWithType: Station
  fullName: Darwin.Net.Objects.Station
- uid: Darwin.Net.Objects
  commentId: N:Darwin.Net.Objects
  name: Darwin.Net.Objects
  nameWithType: Darwin.Net.Objects
  fullName: Darwin.Net.Objects
  spec.csharp:
  - uid: Darwin
    name: Darwin
  - name: .
  - uid: Darwin.Net
    name: Net
  - name: .
  - uid: Darwin.Net.Objects
    name: Objects
  spec.vb:
  - uid: Darwin
    name: Darwin
  - name: .
  - uid: Darwin.Net
    name: Net
  - name: .
  - uid: Darwin.Net.Objects
    name: Objects
- uid: System.Nullable{Darwin.Net.Objects.Station}
  commentId: T:System.Nullable{Darwin.Net.Objects.Station}
  parent: System
  definition: System.Nullable`1
  name: Station?
  nameWithType: Station?
  fullName: Darwin.Net.Objects.Station?
  spec.csharp:
  - uid: Darwin.Net.Objects.Station
    name: Station
  - name: '?'
  spec.vb:
  - uid: Darwin.Net.Objects.Station
    name: Station
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
